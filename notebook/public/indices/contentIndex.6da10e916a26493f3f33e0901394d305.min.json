{"/":{"title":"_index","content":"\n## Tags\n\n[All Tags](tags/)\n\n## 文件夹\n\n[Quartz文档/](notes/)\n\n[index/](index/)\n\n[permanent/](permanent/)\n\n[project/](project)\n## Index\n- [[index/0 周边纪实|0 周边纪实]]\n- [[index/1 生活消费|1 生活消费]]\n- [[index/2 工学与应用技术|2 工学与应用技术]]\n- [[index/3 理学与自然科学|3 理学与自然科学]]\n- [[index/4 人文历史与社会科学|4 人文历史与社会科学]]\n- [[index/5 艺术|5 艺术]]\n- [[index/6 语言|6 语言]]\n- [[index/7 哲学与宗教|7 哲学与宗教]]\n\n[[permanent/样式测试|样式测试]]\n","lastmodified":"2023-06-15T16:52:25.0449078+02:00","tags":[]},"/.obsidian/plugins/obsidian-advanced-slides/plugin/chalkboard/README":{"title":"README","content":"# Chalkboard\r\n\r\nWith this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:\r\n\r\n- you can make notes directly on the slides, e.g. to comment on certain aspects,\r\n- you can open a chalkboard or whiteboard on which you can make notes.\r\n\r\nThe main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.\r\n\r\nThe plugin records all drawings made so that they can be play backed using the `autoSlide` feature or the `audio-slideshow` plugin.\r\n\r\n[Check out the live demo](https://rajgoel.github.io/reveal.js-demos/chalkboard-demo.html)\r\n\r\nThe chalkboard effect is based on [Chalkboard](https://github.com/mmoustafa/Chalkboard) by Mohamed Moustafa.\r\n\r\n## Installation\r\n\r\nCopy the file `plugin.js` and the  `img` directory into the plugin folder of your reveal.js presentation, i.e. `plugin/chalkboard` and load the plugin as shown below.\r\n\r\n```html\r\n\u003cscript src=\"plugin/chalkboard/plugin.js\"\u003e\u003c/script\u003e\r\n\u003cscript src=\"plugin/chalkboard/customcontrols.js\"\u003e\u003c/script\u003e\r\n\r\n\u003cscript\u003e\r\n    Reveal.initialize({\r\n        // ...\r\n        plugins: [ RevealChalkboard, RevealCustomControls ],\r\n        // ...\r\n    });\r\n\u003c/script\u003e\r\n```\r\n\r\nThe following stylesheet\r\n```html\r\n\u003clink rel=\"stylesheet\" href=\"plugin/chalkboard/style.css\"\u003e\r\n\u003clink rel=\"stylesheet\" href=\"plugin/customcontrols/style.css\"\u003e\r\n```\r\nhas to be included to the `head` section of you HTML-file.\r\n\r\n\r\nIn order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that `font-awesome` is available. The easiest way is to include\r\n```\r\n\u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"\u003e\r\n```\r\nto the ```head``` section of you HTML-file.\r\n\r\n## Usage\r\n\r\n### Mouse or touch\r\n- Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard\r\n- Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)\r\n- Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)\r\n- Click the left mouse button and drag to write on notes canvas or chalkboard\r\n- Click the right mouse button and drag to wipe away previous drawings\r\n- Touch and move to write on notes canvas or chalkboard\r\n- Touch and hold for half a second, then move to wipe away previous drawings\r\n\r\n### Keyboard\r\n- Press the 'BACKSPACE' key to delete all chalkboard drawings\r\n- Press the 'DEL' key to clear the notes canvas or chalkboard\r\n- Press the 'c' key to toggle the notes canvas\r\n- Press the 'b' key to toggle the chalkboard\r\n- Press the 'd' key to download drawings\r\n- Press the 'x' key to cycle colors forward\r\n- Press the 'y' key to cycle colors backward\r\n\r\n## Playback\r\n\r\nIf the `autoSlide` feature is set or if the `audio-slideshow` plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.\r\n\r\n## Multiplexing\r\n\r\nThe plugin supports multiplexing via the [`multiplex` plugin](https://github.com/reveal/multiplex) or the [`seminar` plugin](https://github.com/rajgoel/reveal.js-plugins/tree/master/seminar).\r\n\r\n## PDF-Export\r\n\r\nIf the slideshow is opened in [print mode](https://revealjs.com/pdf-export/), the chalkboard drawings in the session storage (see `storage` option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see `src` option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.\r\n\r\n\r\n## Configuration\r\n\r\nThe plugin has several configuration options:\r\n\r\n- ```boardmarkerWidth```: an integer, the drawing width of the boardmarker; larger values draw thicker lines.\r\n- ```chalkWidth```: an integer, the drawing width of the chalk; larger values draw thicker lines.\r\n- ```chalkEffect```: a float in the range ```[0.0, 1.0]```, the intesity of the chalk effect on the chalk board. Full effect (default) ```1.0```, no effect ```0.0```.\r\n- ```storage```: Optional variable name for session storage of drawings.\r\n- ```src```: Optional filename for pre-recorded drawings.\r\n- ```readOnly```: Configuation option allowing to prevent changes to existing drawings. If set to ```true``` no changes can be made, if set to false ```false``` changes can be made, if unset or set to ```undefined``` no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the 'DEL' key (i.e. by using the ```RevealChalkboard.clear()``` function).\r\n- ```transition```: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.\r\n- ```theme```: Can be set to either ```\"chalkboard\"``` or ```\"whiteboard\"```.\r\n\r\nThe following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.\r\n\r\n- ```background```: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.\r\n- ```grid```: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. ```{ color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}```. Alternatively, the grid can be removed by setting the value to ```false```.\r\n- ```eraser```: An image path and radius for the eraser.\r\n- ```boardmarkers```: A list of boardmarkers with given color and cursor.\r\n- ```chalks```: A list of chalks with given color and cursor.\r\n- ```rememberColor```: Whether to remember the last selected color for the slide canvas or the board.\r\n\r\nAll of the configurations are optional and the default values shown below are used if the options are not provided.\r\n\r\n```javascript\r\nReveal.initialize({\r\n\t// ...\r\n    chalkboard: {\r\n        boardmarkerWidth: 3,\r\n        chalkWidth: 7,\r\n        chalkEffect: 1.0,\r\n        storage: null,\r\n        src: null,\r\n        readOnly: undefined,\r\n        transition: 800,\r\n        theme: \"chalkboard\",\r\n        background: [ 'rgba(127,127,127,.1)' , path + 'img/blackboard.png' ],\r\n        grid: { color: 'rgb(50,50,10,0.5)', distance: 80, width: 2},\r\n        eraser: { src: path + 'img/sponge.png', radius: 20},\r\n        boardmarkers : [\r\n                { color: 'rgba(100,100,100,1)', cursor: 'url(' + path + 'img/boardmarker-black.png), auto'},\r\n                { color: 'rgba(30,144,255, 1)', cursor: 'url(' + path + 'img/boardmarker-blue.png), auto'},\r\n                { color: 'rgba(220,20,60,1)', cursor: 'url(' + path + 'img/boardmarker-red.png), auto'},\r\n                { color: 'rgba(50,205,50,1)', cursor: 'url(' + path + 'img/boardmarker-green.png), auto'},\r\n                { color: 'rgba(255,140,0,1)', cursor: 'url(' + path + 'img/boardmarker-orange.png), auto'},\r\n                { color: 'rgba(150,0,20150,1)', cursor: 'url(' + path + 'img/boardmarker-purple.png), auto'},\r\n                { color: 'rgba(255,220,0,1)', cursor: 'url(' + path + 'img/boardmarker-yellow.png), auto'}\r\n        ],\r\n        chalks: [\r\n                { color: 'rgba(255,255,255,0.5)', cursor: 'url(' + path + 'img/chalk-white.png), auto'},\r\n                { color: 'rgba(96, 154, 244, 0.5)', cursor: 'url(' + path + 'img/chalk-blue.png), auto'},\r\n                { color: 'rgba(237, 20, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-red.png), auto'},\r\n                { color: 'rgba(20, 237, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-green.png), auto'},\r\n                { color: 'rgba(220, 133, 41, 0.5)', cursor: 'url(' + path + 'img/chalk-orange.png), auto'},\r\n                { color: 'rgba(220,0,220,0.5)', cursor: 'url(' + path + 'img/chalk-purple.png), auto'},\r\n                { color: 'rgba(255,220,0,0.5)', cursor: 'url(' + path + 'img/chalk-yellow.png), auto'}\r\n        ]\r\n    },\r\n    customcontrols: {\r\n  \t\tcontrols: [\r\n  \t\t\t{ icon: '\u003ci class=\"fa fa-pen-square\"\u003e\u003c/i\u003e',\r\n  \t\t\t  title: 'Toggle chalkboard (B)',\r\n  \t\t\t  action: 'RevealChalkboard.toggleChalkboard();'\r\n  \t\t\t},\r\n  \t\t\t{ icon: '\u003ci class=\"fa fa-pen\"\u003e\u003c/i\u003e',\r\n  \t\t\t  title: 'Toggle notes canvas (C)',\r\n  \t\t\t  action: 'RevealChalkboard.toggleNotesCanvas();'\r\n  \t\t\t}\r\n  \t\t]\r\n    },\r\n    // ...\r\n\r\n});\r\n```\r\n\r\n\r\n## License\r\n\r\nMIT licensed\r\n\r\nCopyright (C) 2021 Asvin Goel\r\n","lastmodified":"2022-12-12T07:43:40.118983+01:00","tags":[]},"/.obsidian/plugins/obsidian-advanced-slides/plugin/chart/README":{"title":"README","content":"# Chart\r\n\r\nA plugin for [Reveal.js](https://github.com/hakimel/reveal.js) allowing to easily add charts using [Chart.js](http://www.chartjs.org/).\r\n\r\n[Check out the live demo](https://rajgoel.github.io/reveal.js-demos/chart-demo.html)\r\n\r\n## Installation\r\n\r\nCopy the file `plugin.js` into the plugin folder of your reveal.js presentation, i.e. `plugin/chart`.\r\n\r\nAdd the plugin and Chart.js to the dependencies in your presentation, as below.\r\n\r\n```html\r\n\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\"\u003e\u003c/script\u003e\r\n\u003cscript src=\"plugin/chart/plugin.js\"\u003e\u003c/script\u003e\r\n\r\n\u003cscript\u003e\r\n    Reveal.initialize({\r\n        // ...\r\n        plugins: [ RevealChart ],\r\n        // ...\r\n    });\r\n\u003c/script\u003e\r\n```\r\n\r\n## Configuration\r\n\r\nThe plugin has several parameters that you can set for your presentation by providing an `chart` option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.\r\n\r\n\r\n```javascript\r\nReveal.initialize({\r\n\t// ...\r\n\tchart: {\r\n\t\tdefaults: {\r\n\t\t\tcolor: 'lightgray', // color of labels\r\n\t\t\tscale: {\r\n\t\t\t\tbeginAtZero: true,\r\n\t\t\t\tticks: { stepSize: 1 },\r\n\t\t\t\tgrid: { color: \"lightgray\" } , // color of grid lines\r\n\t\t\t},\r\n\t\t},\r\n\t\tline: { borderColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ], \"borderDash\": [ [5,10], [0,0] ] },\r\n\t\tbar: { backgroundColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ]},\r\n\t\tpie: { backgroundColor: [ [\"rgba(0,0,0,.8)\" , \"rgba(220,20,20,.8)\", \"rgba(20,220,20,.8)\", \"rgba(220,220,20,.8)\", \"rgba(20,20,220,.8)\"] ]},\r\n\t},\r\n        // ...\r\n});\r\n```\r\nThe `defaults` parameter  will overwrite `Chart.defaults`. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.\r\n\r\n\r\n\r\n## Usage\r\n\r\nA chart can be included in a slide by adding a `canvas` element with the `data-chart` attribute set to the desired chart type.\r\n\r\nThe chart can be configured within the canvas body by a JSON string embedded into an HTML comment.\r\n\r\n```html\r\n\u003ccanvas data-chart=\"line\" \u003e\r\n\u003c!--\r\n{\r\n \"data\": {\r\n  \"labels\": [\"January\",\" February\",\" March\",\" April\",\" May\",\" June\",\" July\"],\r\n  \"datasets\":[\r\n   {\r\n    \"data\":[65,59,80,81,56,55,40],\r\n    \"label\":\"My first dataset\",\"backgroundColor\":\"rgba(20,220,220,.8)\"\r\n   },\r\n   {\r\n    \"data\":[28,48,40,19,86,27,90],\r\n    \"label\":\"My second dataset\",\"backgroundColor\":\"rgba(220,120,120,.8)\"\r\n   }\r\n  ]\r\n }\r\n}\r\n--\u003e\r\n\u003c/canvas\u003e\r\n```\r\nIt is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.\r\n\r\n```html\r\n\u003ccanvas class=\"stretch\" data-chart=\"line\"\u003e\r\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\r\n\u003c!-- This is a comment that will be ignored --\u003e\r\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\r\n\u003c!--\r\n{\r\n \"data\" : {\r\n  \"labels\" : [\"Enero\", \"Febrero\", \"Marzo\", \"Avril\", \"Mayo\", \"Junio\", \"Julio\"],\r\n  \"datasets\" : [{ \"borderColor\": \"#0f0\", \"borderDash\": [\"5\",\"10\"] }, { \"borderColor\": \"#0ff\" } ]\r\n }\r\n}\r\n--\u003e\r\n\u003c/canvas\u003e\r\n```\r\n\r\nThe layout configuration provided in `chart` parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.\r\n\r\n```html\r\n\u003ccanvas data-chart=\"line\"\u003e\r\nMonth, January, February, March, April, May, June, July\r\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\r\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\r\n\u003c/canvas\u003e\r\n```\r\n\r\nThe chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the `data-chart-src` attribute of the `canvas` element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.\r\n\r\n```html\r\n\u003ccanvas data-chart=\"bar\" data-chart-src=\"chart/data.csv\"\u003e\r\n\u003c!--\r\n{\r\n\"data\" : {\r\n\"datasets\" : [{ \"backgroundColor\": \"#0f0\" }, { \"backgroundColor\": \"#0ff\" } ]\r\n},\r\n\"options\": { \"scales\": { \"x\": { \"stacked\": true }, \"y\": { \"stacked\": true } } }\r\n}\r\n--\u003e\r\n\u003c/canvas\u003e\r\n```\r\n\r\n\r\n## License\r\n\r\nMIT licensed\r\n\r\nCopyright (C) 2021 Asvin Goel\r\n","lastmodified":"2022-12-12T07:43:40.186066+01:00","tags":[]},"/.obsidian/plugins/obsidian-advanced-slides/plugin/customcontrols/README":{"title":"README","content":"# Custom controls\r\n\r\nThis plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.\r\n\r\n[Check out the live demo](https://rajgoel.github.io/reveal.js-demos/customcontrols-demo.html)\r\n\r\n\r\n## Installation\r\n\r\nCopy the files `plugin.js` and `style.css` into the plugin folder of your reveal.js presentation, i.e. ```plugin/customcontrols``` and load the plugin as shown below.\r\n\r\n```html\r\n\u003clink rel=\"stylesheet\" href=\"plugin/customcontrols/style.css\"\u003e\r\n\u003cscript src=\"plugin/customcontrols/plugin.js\"\u003e\u003c/script\u003e\r\n\r\n\u003cscript\u003e\r\n    Reveal.initialize({\r\n        // ...\r\n        plugins: [ RevealCustomControls ],\r\n        // ...\r\n    });\r\n\u003c/script\u003e\r\n```\r\n\r\nNote, without configuration you need to add\r\n\r\n```javascript\r\n\u003clink rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"\u003e\r\n```\r\n\r\nbetween ```\u003chead\u003e``` and ```\u003c/head\u003e``` of your HTML file because the defaults use [Font Awesome](http://fontawesome.io/).\r\n\r\n\r\n\r\n## Configuration\r\n\r\nThe plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:\r\n\r\n\r\n```javascript\r\nReveal.initialize({\r\n\t// ...\r\n  customcontrols: {\r\n\t\tcontrols: [\r\n      {\r\n\t\t\t  id: 'toggle-overview',\r\n\t\t\t  title: 'Toggle overview (O)',\r\n\t\t\t  icon: '\u003ci class=\"fa fa-th\"\u003e\u003c/i\u003e',\r\n\t\t\t  action: 'Reveal.toggleOverview();'\r\n\t\t\t},\r\n\t\t\t{ icon: '\u003ci class=\"fa fa-pen-square\"\u003e\u003c/i\u003e',\r\n\t\t\t  title: 'Toggle chalkboard (B)',\r\n\t\t\t  action: 'RevealChalkboard.toggleChalkboard();'\r\n\t\t\t},\r\n\t\t\t{ icon: '\u003ci class=\"fa fa-pen\"\u003e\u003c/i\u003e',\r\n\t\t\t  title: 'Toggle notes canvas (C)',\r\n\t\t\t  action: 'RevealChalkboard.toggleNotesCanvas();'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t// ...\r\n\r\n});\r\n```\r\n\r\nThe `id` and `title` are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.\r\n\r\n## License\r\n\r\nMIT licensed\r\n\r\nCopyright (C) 2020 Asvin Goel\r\n","lastmodified":"2022-12-12T07:43:40.1139388+01:00","tags":[]},"/.obsidian/plugins/obsidian-advanced-slides/plugin/menu/CONTRIBUTING":{"title":"CONTRIBUTING","content":"## Contributing\n\n### Bug Reports\nWhen reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.\n\n### Pull Requests\n- Should follow the coding style of the file you work in\n- Should be made towards the **dev branch**\n- Should be submitted from a feature/topic branch (not your master)\n","lastmodified":"2022-12-12T07:43:40.1968776+01:00","tags":[]},"/.obsidian/plugins/obsidian-advanced-slides/plugin/menu/README":{"title":"README","content":"# reveal.js-menu\n\nA slideout menu plugin for [Reveal.js](https://github.com/hakimel/reveal.js) to quickly jump to any slide by title. Also optionally change the theme and set the default transition. [Check out the live demo](https://denehyg.github.io/reveal.js-menu)\n\n## Installation\n\n### Bower\n\nDownload and install the package in your project:\n\n`bower install reveal.js-menu`\n\nAdd the plugin to your presentation, as below.\n\n```javascript\n\u003cscript src=\"bower_components/reveal.js-menu/menu.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n\u003c/script\u003e\n```\n\n### npm\n\nDownload and install the package in your project:\n\n`npm install --save reveal.js-menu`\n\nAdd the plugin to your presentation, as below.\n\n```javascript\n\u003cscript src=\"node_modules/reveal.js-menu/menu.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n\u003c/script\u003e\n```\n\n### Manual\n\nCopy this repository into the plugins folder of your reveal.js presentation, ie `plugins/menu`.\n\nAdd the plugin to the dependencies in your presentation, as below.\n\n```javascript\n\u003cscript src=\"plugin/menu/menu.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n\u003c/script\u003e\n```\n\n## Configuration\n\nYou can configure the menu for your presentation by providing a `menu` option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.\n\n```javascript\nReveal.initialize({\n  // ...\n\n  menu: {\n    // Specifies which side of the presentation the menu will\n    // be shown. Use 'left' or 'right'.\n    side: 'left',\n\n    // Specifies the width of the menu.\n    // Can be one of the following:\n    // 'normal', 'wide', 'third', 'half', 'full', or\n    // any valid css length value\n    width: 'normal',\n\n    // Add slide numbers to the titles in the slide list.\n    // Use 'true' or format string (same as reveal.js slide numbers)\n    numbers: false,\n\n    // Specifies which slide elements will be used for generating\n    // the slide titles in the menu. The default selects the first\n    // heading element found in the slide, but you can specify any\n    // valid css selector and the text from the first matching\n    // element will be used.\n    // Note: that a section data-menu-title attribute or an element\n    // with a menu-title class will take precedence over this option\n    titleSelector: 'h1, h2, h3, h4, h5, h6',\n\n    // If slides do not have a matching title, attempt to use the\n    // start of the text content as the title instead\n    useTextContentForMissingTitles: false,\n\n    // Hide slides from the menu that do not have a title.\n    // Set to 'true' to only list slides with titles.\n    hideMissingTitles: false,\n\n    // Adds markers to the slide titles to indicate the\n    // progress through the presentation. Set to 'false'\n    // to hide the markers.\n    markers: true,\n\n    // Specify custom panels to be included in the menu, by\n    // providing an array of objects with 'title', 'icon'\n    // properties, and either a 'src' or 'content' property.\n    custom: false,\n\n    // Specifies the themes that will be available in the themes\n    // menu panel. Set to 'true' to show the themes menu panel\n    // with the default themes list. Alternatively, provide an\n    // array to specify the themes to make available in the\n    // themes menu panel, for example...\n    //\n    // [\n    //     { name: 'Black', theme: 'dist/theme/black.css' },\n    //     { name: 'White', theme: 'dist/theme/white.css' },\n    //     { name: 'League', theme: 'dist/theme/league.css' },\n    //     {\n    //       name: 'Dark',\n    //       theme: 'lib/reveal.js/dist/theme/black.css',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'\n    //     },\n    //     {\n    //       name: 'Code: Zenburn',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'\n    //     }\n    // ]\n    //\n    // Note: specifying highlightTheme without a theme will\n    // change the code highlight theme while leaving the\n    // presentation theme unchanged.\n    themes: false,\n\n    // Specifies the path to the default theme files. If your\n    // presentation uses a different path to the standard reveal\n    // layout then you need to provide this option, but only\n    // when 'themes' is set to 'true'. If you provide your own\n    // list of themes or 'themes' is set to 'false' the\n    // 'themesPath' option is ignored.\n    themesPath: 'dist/theme/',\n\n    // Specifies if the transitions menu panel will be shown.\n    // Set to 'true' to show the transitions menu panel with\n    // the default transitions list. Alternatively, provide an\n    // array to specify the transitions to make available in\n    // the transitions panel, for example...\n    // ['None', 'Fade', 'Slide']\n    transitions: false,\n\n    // Adds a menu button to the slides to open the menu panel.\n    // Set to 'false' to hide the button.\n    openButton: true,\n\n    // If 'true' allows the slide number in the presentation to\n    // open the menu panel. The reveal.js slideNumber option must\n    // be displayed for this to take effect\n    openSlideNumber: false,\n\n    // If true allows the user to open and navigate the menu using\n    // the keyboard. Standard keyboard interaction with reveal\n    // will be disabled while the menu is open.\n    keyboard: true,\n\n    // Normally the menu will close on user actions such as\n    // selecting a menu item, or clicking the presentation area.\n    // If 'true', the sticky option will leave the menu open\n    // until it is explicitly closed, that is, using the close\n    // button or pressing the ESC or m key (when the keyboard\n    // interaction option is enabled).\n    sticky: false,\n\n    // If 'true' standard menu items will be automatically opened\n    // when navigating using the keyboard. Note: this only takes\n    // effect when both the 'keyboard' and 'sticky' options are enabled.\n    autoOpen: true,\n\n    // If 'true' the menu will not be created until it is explicitly\n    // requested by calling RevealMenu.init(). Note this will delay\n    // the creation of all menu panels, including custom panels, and\n    // the menu button.\n    delayInit: false,\n\n    // If 'true' the menu will be shown when the menu is initialised.\n    openOnInit: false,\n\n    // By default the menu will load it's own font-awesome library\n    // icons. If your presentation needs to load a different\n    // font-awesome library the 'loadIcons' option can be set to false\n    // and the menu will not attempt to load the font-awesome library.\n    loadIcons: true\n  }\n});\n```\n\n### Themes Stylesheet\n\nIf you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the `id=\"theme\"` attribute. For example...\n\n```html\n\u003clink rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\" /\u003e\n```\n\nIf your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the `id=\"highlight-theme\"` attribute. For example...\n\n```html\n\u003clink\n  rel=\"stylesheet\"\n  href=\"plugin/highlight/zenburn.css\"\n  id=\"highlight-theme\"\n/\u003e\n```\n\n## Slide Titles\n\nThe slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules...\n\n###### 1. The section's `data-menu-title` attribute.\n\nIf the slide's section element contains a `data-menu-title` attribute this will be used for the slide title in the menu. For example...\n\n```html\n\u003csection data-menu-title=\"Custom Menu Title\"\u003e\n  \u003ch1\u003eTitle\u003c/h1\u003e\n  \u003cp\u003e...\u003c/p\u003e\n\u003c/section\u003e\n```\n\n###### 2. Any element with the class `menu-title`.\n\nIf the slide's section contains an element with the class `menu-title` then the element's text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example...\n\n```html\n\u003csection\u003e\n  \u003ch1\u003eTitle\u003c/h1\u003e\n  \u003cspan class=\"menu-title\" style=\"display: none\"\u003eCustom Menu Title\u003c/span\u003e\n  \u003cp\u003e...\u003c/p\u003e\n\u003c/section\u003e\n```\n\n###### 3. The first heading found or a custom element selector\n\nThe `titleSelector` option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example...\n\n```html\n\u003csection\u003e\n  \u003ch3\u003eThis will be the slide title in the menu\u003c/h3\u003e\n  \u003ch1\u003eTitle\u003c/h1\u003e\n  \u003cp\u003e...\u003c/p\u003e\n\u003c/section\u003e\n```\n\nAny valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the `'h1'` selector to only use level 1 headings or `'p'` to use the first paragraph element. For example, `titleSelector: 'p.lead'` would be used like this...\n\n```html\n\u003csection\u003e\n  \u003ch1\u003eTitle\u003c/h1\u003e\n  \u003cp class=\"lead\"\u003eThis will be the slide title in the menu\u003c/p\u003e\n  \u003cp\u003e...\u003c/p\u003e\n\u003c/section\u003e\n```\n\nUsing `titleSelector: ''` will ignore all elements and no title will be provided, unless the slide section contains a `data-menu-title` attribute or an element with the `menu-title` class.\n\n###### 4. No title is provided\n\nIf no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of 'Slide 12'...\n\n```html\n\u003csection\u003e\n  \u003cp\u003e...\u003c/p\u003e\n\u003c/section\u003e\n```\n\nIf the `hideMissingTitles` option is set to `true`, however, the slide will not be listed in the menu.\n\n## Custom Menu Panels\n\nAdditional custom panels can be added the menu using the `custom` option.\n\n```javascript\nReveal.initialize({\n  // ...\n\n  menu: {\n    // ...\n\n    custom: [\n      {\n        title: 'Links',\n        icon: '\u003ci class=\"fa fa-external-link\"\u003e',\n        src: 'links.html'\n      },\n      {\n        title: 'About',\n        icon: '\u003ci class=\"fa fa-info\"\u003e',\n        content: '\u003cp\u003eThis slidedeck is created with reveal.js\u003c/p\u003e'\n      }\n    ]\n  }\n});\n```\n\n`title` and `icon` are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels...\n\n- You can provide a URL in `src` to load html from another file.\n- Alternatively, you can provide html in `content` and this will be added to the custom panel.\n\n###### Custom slide menu items\n\nYou can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.\n\n```html\n\u003ch1\u003eLinks\u003c/h1\u003e\n\u003cul class=\"slide-menu-items\"\u003e\n  \u003cli class=\"slide-menu-item\"\u003e\u003ca href=\"#/transitions\"\u003eTransitions\u003c/a\u003e\u003c/li\u003e\n  \u003cli class=\"slide-menu-item\"\u003e\u003ca href=\"#/13\"\u003eCode highlighting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n```\n\nYou are not limited to linking to presentation slides. You can provide any link you wish.\n\n```html\n\u003ch1\u003eExternal Links\u003c/h1\u003e\n\u003cul class=\"slide-menu-items\"\u003e\n  \u003cli class=\"slide-menu-item\"\u003e\n    \u003ca href=\"https://github.com/denehyg/reveal.js-menu\"\u003eReveal.js-menu\u003c/a\u003e\n  \u003c/li\u003e\n  \u003cli class=\"slide-menu-item\"\u003e\n    \u003ca href=\"https://github.com/hakimel/reveal.js\"\u003eReveal.js\u003c/a\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n```\n\nUsing menu items enables keyboard navigation of your links as with the other panels. However, you don't have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.\n\n## Ready Event\n\nA 'menu-ready' event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.\n\n```javascript\nReveal.addEventListener('menu-ready', function (event) {\n  // your code\n});\n```\n\n## API\n\nThe `RevealMenu` object exposes a JavaScript API for controlling the menu:\n\n| Function                | Description                                                                                                  |\n| ----------------------- | ------------------------------------------------------------------------------------------------------------ |\n| toggle(event)           | Toggles the open state of the menu, ie open if it is closed, and close if it is open                         |\n| openMenu(event)         | Opens the menu                                                                                               |\n| closeMenu(event, force) | Closes the menu. To force the menu to close (ie when `sticky` option is `true`) call `closeMenu(null, true)` |\n| openPanel(event, ref)   | Opens the menu to a specific panel, passing the name of the panel or the panel element itself                |\n| isOpen()                | Returns true if the menu is open                                                                             |\n| initialiseMenu()        | Initialises the menu if it has not already been initialised. Used in conjunction with the `delayInit` option |\n| isMenuInitialised()     | Returns true if the menu has been initialised                                                                |\n\n## Compatibility\n\nreveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.\n\nv2.0 also introduces API changes that are not backwards compatible. `init()` has been renamed to `initMenu()` to deconflict with the reveal.js v4 plugin API. `isInit()` has also been changed to `isMenuInitialised()`.\n\n## License\n\nMIT licensed\n\nCopyright (C) 2020 Greg Denehy\n","lastmodified":"2022-12-12T07:43:40.195678+01:00","tags":[]},"/.obsidian/plugins/obsidian-proxy-github/README":{"title":"README","content":"\r\n\r\n# Obsidian 社区插件下载修复\r\n\r\n因为某些原因，在国内经常无法下载 Obsidian 的社区插件。这个项目的主要目的就是修复这种情况，让国内的用户也可以无障碍的下载社区插件。\r\n\r\n\u003c!-- PROJECT SHIELDS --\u003e\r\n\r\n[![Contributors][contributors-shield]][contributors-url]\r\n[![Forks][forks-shield]][forks-url]\r\n[![Stargazers][stars-shield]][stars-url]\r\n[![Issues][issues-shield]][issues-url]\r\n[![MIT License][license-shield]][license-url]\r\n[![LinkedIn][linkedin-shield]][linkedin-url]\r\n\r\n\u003c!-- PROJECT LOGO --\u003e\r\n\u003cbr /\u003e\r\n\r\n\r\n\r\n## 目录\r\n\r\n- [上手指南](#上手指南)\r\n- [文件目录说明](#文件目录说明)\r\n- [作者](#作者)\r\n- [版权说明](#版权说明)\r\n- [鸣谢](#鸣谢)\r\n\r\n### 上手指南\r\n\r\n1. 下载 [obsidian-proxy-github.zip](https://gitee.com/juqkai/obsidian-proxy-github/releases)\r\n2. 解压 obsidian-proxy-github.zip\r\n3. 将解压的文件夹放入笔记目录下的插件目录内。如：XXX/.obsidian/plugins\r\n\r\n\r\n### 作者\r\n\r\njuqkai@163.com\r\n\r\n### 版权说明\r\n\r\n该项目签署了 Apache License 2.0 授权许可，详情请参阅 [LICENSE.txt](https://github.com/juqkai/obsidian-proxy-github/blob/master/LICENSE)\r\n\r\n### 鸣谢\r\n\r\n\r\n- [Obsidian](https://Obsidian.md)\r\n\r\n","lastmodified":"2021-11-23T06:15:43.8033216+01:00","tags":[]},"/index/0-%E5%91%A8%E8%BE%B9%E7%BA%AA%E5%AE%9E":{"title":"0 周边纪实","content":"\n[[permanent/咩啊咩啊|咩啊咩啊]]","lastmodified":"2023-06-14T19:59:24.8438776+02:00","tags":[]},"/index/1-%E7%94%9F%E6%B4%BB%E6%B6%88%E8%B4%B9":{"title":"1 生活消费","content":"\n和日常生活相关的一切.\n\n[[index/10 个人技能|10 个人技能]]\n\n[[index/11 成长|11 成长]]\n\n[[index/12 数码|12 数码]]\n\n[[index/13 游戏|13 游戏]]\n\n[[index/19 时间管理|19 时间管理]]\n","lastmodified":"2023-06-15T13:32:14.3946693+02:00","tags":[]},"/index/10-%E4%B8%AA%E4%BA%BA%E6%8A%80%E8%83%BD":{"title":"10 个人技能","content":"\n[[permanent/魔方攻略本|魔方攻略本]]","lastmodified":"2023-06-15T16:42:01.0115143+02:00","tags":[]},"/index/11-%E6%88%90%E9%95%BF":{"title":"11 成长","content":"\n## 领域\n\n[[permanent/笔记方法|笔记方法]]\n\n[[permanent/阅读方法|阅读方法]]\n\n[[permanent/学习方法|学习方法]]\n\n[[permanent/处事方法|处事方法]]\n\n[[permanent/思考方式]]\n## 自测 List\n\n[[permanent/发展技术领导力|发展技术领导力]]\n\n## 万用\n\n[[permanent/曝光效应|曝光效应]]\n\n\n\n","lastmodified":"2023-06-15T21:41:09.9787776+02:00","tags":[]},"/index/12-%E6%95%B0%E7%A0%81":{"title":"12 数码","content":"\n[[permanent/键盘上的轴记录|键盘上的轴记录]]\n\n[[permanent/键盘轴体参数|键盘轴体参数]]","lastmodified":"2023-06-15T17:34:23.7118308+02:00","tags":[]},"/index/13-%E6%B8%B8%E6%88%8F":{"title":"13 游戏","content":"\n#### PC\n[[permanent/冒险岛|冒险岛]]\n\n[[permanent/了不起的修仙模拟器|了不起的修仙模拟器]]\n\n[[permanent/武林立志传龙吟剑|武林立志传龙吟剑]]\n\n[[permanent/P4G|P4G]]\n\n[[permanent/太吾绘卷|太吾绘卷]]\n\n#### 主机\n\n#### 手机\n[[permanent/你猫游|你猫游]]\n\n[[permanent/诸神黄昏|诸神黄昏]]\n\n[[permanent/休闲宗门|休闲宗门]]\n","lastmodified":"2023-06-16T19:57:18.4021475+02:00","tags":[]},"/index/19-%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86":{"title":"19 时间管理","content":"","lastmodified":"2023-06-14T19:28:09.5615926+02:00","tags":[]},"/index/2-%E5%B7%A5%E5%AD%A6%E4%B8%8E%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF":{"title":"2 工学与应用技术","content":"\n工学与应用技术分类下主要是偏重实际应用的非理论知识.\n\n[[index/20 计算机技术|20 计算机技术]]\n\n[[index/21 电气工程|21 电气工程]]\n\n[[index/22 医学|22 医学]]\n\n","lastmodified":"2023-06-15T12:51:37.7104765+02:00","tags":[]},"/index/20-%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF":{"title":"20 计算机技术","content":"\n### 技术理论领域\n[[permanent/算法|算法]] Algorithm\n\n[[permanent/人工智能|人工智能]] Artificial Intelligence\n\n[[permanent/计算机网络]] Computer Networking\n\n[[permanent/计算理论]] Computing Theory\n\n[[permanent/密码学]] Cryptology\n\n[[permanent/数据库系统]] Database System\n\n[[permanent/计算机组成原理]] Foundation of Computer Science\n\n[[permanent/网络安全]] Internet Security\n\n[[permanent/机器学习]] Machine Learning\n\n[[permanent/自然语言处理]] Natural Language Processing\n\n[[permanent/操作系统理论|操作系统理论]] Operating System\n\n[[permanent/编程语言|编程语言]] Programming Language\n\n[[permanent/逆向工程]] Reverse Engineering\n\n[[permanent/软件工程]] Software Engineering\n\n[[permanent/Web 开发]] Web Development\n\n\n### 集合\n[[permanent/计算机协议|计算机协议]]\n\n[[permanent/软件和应用和轮子|软件和应用和轮子]]\n\n[[permanent/操作系统|操作系统]]\n\n\n### 未分类\n[[permanent/科学上网2209|科学上网2209]]\n\n[[permanent/Github 加速|Github 加速]]\n\n[[permanent/某洋葱浏览器的连接|某洋葱浏览器的连接]]\n\n[[permanent/修改WIN远程桌面侦听端口|修改WIN远程桌面侦听端口]]\n\n[[permanent/访问风险网页|访问风险网页]]\n\n[[permanent/bat 创建防火墙入站规则|bat 创建防火墙入站规则]]\n\n","lastmodified":"2023-06-16T20:12:47.9454087+02:00","tags":[]},"/index/21-%E7%94%B5%E6%B0%94%E5%B7%A5%E7%A8%8B":{"title":"21 电气工程","content":"\n\n[[permanent/PPS|PPS]]","lastmodified":"2023-06-14T20:06:13.3889887+02:00","tags":[]},"/index/22-%E5%8C%BB%E5%AD%A6":{"title":"22 医学","content":"","lastmodified":"2023-06-14T20:03:10.889896+02:00","tags":[]},"/index/3-%E7%90%86%E5%AD%A6%E4%B8%8E%E8%87%AA%E7%84%B6%E7%A7%91%E5%AD%A6":{"title":"3 理学与自然科学","content":"\n[[index/30 数学|30 数学]]\n\n[[index/31 物理|31 物理]]","lastmodified":"2023-06-14T20:08:05.9195461+02:00","tags":[]},"/index/30-%E6%95%B0%E5%AD%A6":{"title":"30 数学","content":"\n### 分类\n[[permanent/线性代数]]\n[[permanent/高等数学]]\n[[permanent/统计学]]\n[[permanent/三角函数]]\n\n### 概念\n[[permanent/欧拉函数]]\n[[permanent/Mathematical English]]\n\n### Project\n[[project/Project Asteria]]","lastmodified":"2023-06-16T19:50:05.5812371+02:00","tags":[]},"/index/31-%E7%89%A9%E7%90%86":{"title":"31 物理","content":"\n[[permanent/从原子运动的角度看气液固三相变化]]\n","lastmodified":"2023-06-15T13:15:00.7715948+02:00","tags":[]},"/index/4-%E4%BA%BA%E6%96%87%E5%8E%86%E5%8F%B2%E4%B8%8E%E7%A4%BE%E4%BC%9A%E7%A7%91%E5%AD%A6":{"title":"4 人文历史与社会科学","content":"\n40 历史\n\n[[index/44 心理学|44 心理学]]","lastmodified":"2023-06-14T20:09:28.1712459+02:00","tags":[]},"/index/44-%E5%BF%83%E7%90%86%E5%AD%A6":{"title":"44 心理学","content":"\n[[permanent/心理学概念]]","lastmodified":"2023-06-15T13:05:18.5618089+02:00","tags":[]},"/index/5-%E8%89%BA%E6%9C%AF":{"title":"5 艺术","content":"\n- 文学 绘画 雕塑、音乐、舞蹈、建筑、戏剧、电影\n- 52 绘画\n- [[index/54 音乐|54 音乐]]\n- 59 游戏艺术","lastmodified":"2023-06-14T20:10:36.9603082+02:00","tags":[]},"/index/54-%E9%9F%B3%E4%B9%90":{"title":"54 音乐","content":"\n## 乐理\n[[project/编曲二三事 - 和弦大师课预课]]","lastmodified":"2023-06-14T23:17:22.2705649+02:00","tags":[]},"/index/6-%E8%AF%AD%E8%A8%80":{"title":"6 语言","content":"\n[[index/60 英语|60 英语]]\n[[index/61 日语|61 日语]]\n[[index/62 德语|62 德语]]\n","lastmodified":"2023-06-14T20:17:18.4419507+02:00","tags":[]},"/index/60-%E8%8B%B1%E8%AF%AD":{"title":"60 英语","content":"\n[[permanent/Dictate|Dictate]]","lastmodified":"2023-06-14T20:12:40.2203249+02:00","tags":[]},"/index/61-%E6%97%A5%E8%AF%AD":{"title":"61 日语","content":"\n[[permanent/日语输入法|日语输入法]]\n\n[[permanent/日语语法|日语语法]]","lastmodified":"2023-06-16T18:45:13.9421069+02:00","tags":[]},"/index/62-%E5%BE%B7%E8%AF%AD":{"title":"62 德语","content":"\n[[permanent/名词强变化与弱变化 Deklination|名词强变化与弱变化 Deklination]]\n[[permanent/形容词强变化与弱变化 Deklination|形容词强变化与弱变化 Deklination]]\n[[permanent/定冠词变格|定冠词变格]]\n\nIndikativ 直陈式\nImperativ 命令式\n","lastmodified":"2023-06-14T20:16:35.8400015+02:00","tags":[]},"/index/7-%E5%93%B2%E5%AD%A6%E4%B8%8E%E5%AE%97%E6%95%99":{"title":"7 哲学与宗教","content":"\n70 哲学总论\n\n[[index/71 逻辑|71 逻辑]]","lastmodified":"2023-06-14T20:18:49.9723931+02:00","tags":[]},"/index/71-%E9%80%BB%E8%BE%91":{"title":"71 逻辑","content":"\n[[project/十五分钟逻辑学|十五分钟逻辑学]]","lastmodified":"2023-06-14T20:18:44.7277488+02:00","tags":[]},"/permanent/%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%E7%9A%84%E8%AF%9E%E7%94%9F":{"title":"一个网站的诞生","content":"\n准备工作\n\n服务器, 域名和备案\n\n[[permanent/从一个空文件夹开始|从一个空文件夹开始]]\n\n[[permanent/打造自己的Hugo主题|打造自己的Hugo主题]]\n\n[[permanent/Nginx网站用Cerbot配置免费https证书|Nginx网站用Cerbot配置免费https证书]]","lastmodified":"2023-06-17T12:54:04.5319344+02:00","tags":["个站","Hugo"]},"/permanent/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0":{"title":"三角函数","content":"\n## 三角函数公式\n[公式](https://zhuanlan.zhihu.com/p/390928056)\n\n### 定义/关系公式\ncsc 正割， sec 余割\n\n#### 倒数关系\n- $\\tan x \\cot x = 1$\n- $\\sin x \\csc x = 1$\n- $\\cos x \\sec x = 1$\n\n#### 平方关系\n- $\\cos^2 x + \\sin^2 x = 1$\n- $1 + \\cot^2 x = \\csc^2 x$\n- $1 + \\tan^2 x = \\sec^2 x$\n\n#### 六边形关系\n- [来自](https://zhuanlan.zhihu.com/p/162297688)\n- ![[Pasted image 20230513105705.png|200]]\n- 邻: 灰色相邻互为[[permanent/三角函数#平方关系|平方关系]], 注意具体公式\n- 对: 对位互为倒数关系, 如 $\\sin x \\csc x = 1$\n- 间: 中间等于旁边两个的乘积, 如$\\sec x=\\tan x\\csc x$\n\n### 诱导公式\n奇变偶不变, 公式开象限.\n\n如果记得记得函数图像的话, 所有形如\n- $\\sin(\\pi + \\alpha)$ \n- $\\cos(\\pi - \\alpha)$\n- $\\cot(-\\alpha)$\n- $\\sec(\\frac{\\pi}{2}+\\alpha)$\n的结果都是好推导的. 记得 $\\sec, \\csc$ 分别是 $\\cos,\\sin$ 的反函数\n\n![[Pasted image 20230513110857.png|400]]\n\n### 二角和差公式\n- $\\cos(\\alpha \\pm \\beta) = \\cos \\alpha \\cos \\beta \\mp \\sin \\alpha \\sin \\beta$\n- $\\sin(\\alpha \\pm \\beta) = \\sin \\alpha \\cos \\beta \\pm \\cos \\alpha \\sin \\beta$\n- $\\tan(\\alpha\\pm\\beta) = \\frac{\\tan\\alpha\\pm\\tan\\beta}{1\\mp\\tan\\alpha\\tan\\beta}$\n\n### 积化和差公式\n- 正余余正, 正加正减. 余余正正, 余加负余减\n- $\\sin\\alpha\\cos\\beta = \\frac{\\sin(\\alpha+\\beta)+\\sin(\\alpha-\\beta)}{2}$\n- $\\cos\\alpha\\sin\\beta = \\frac{\\sin(\\alpha+\\beta)-\\sin(\\alpha-\\beta)}{2}$\n- $\\cos\\alpha\\cos\\beta = \\frac{\\cos(\\alpha+\\beta)+\\cos(\\alpha-\\beta)}{2}$\n- $\\sin\\alpha\\sin\\beta = - \\frac{\\cos(\\alpha+\\beta)-\\cos(\\alpha-\\beta)}{2}$\n\n### 和差化积\n- $\\sin\\alpha+\\sin\\beta=2\\sin\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}$\n- $\\sin\\alpha-\\sin\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}$\n- $\\cos\\alpha+\\cos\\beta=2\\cos\\frac{\\alpha+\\beta}{2}\\cos\\frac{\\alpha-\\beta}{2}$\n- $\\cos\\alpha-\\cos\\beta=-2\\sin\\frac{\\alpha+\\beta}{2}\\sin\\frac{\\alpha-\\beta}{2}$\n","lastmodified":"2023-06-15T17:51:34.2804193+02:00","tags":["数学"]},"/permanent/%E4%B8%BB%E5%AD%98%E5%82%A8%E5%99%A8%E6%8A%80%E6%9C%AF":{"title":"主存储器技术","content":"\n(场效应Feldeffekt）晶体管：电子开关或放大器（用弱电压Spannung可以控制更高的电压）。\n\n源极Source和漏极Drain之间的区域通常是不导电的 - 通过在体部Bulk和栅极Gate之间施加电压，电子迁移到这个区域，它就会变成导电的leitend（\"闭合开关geschlossener Schalter\"）。\n\n![[attachments/Pasted image 20221021184556.png]]","lastmodified":"2023-06-15T21:52:49.0710894+02:00","tags":["计组"]},"/permanent/%E4%BA%86%E4%B8%8D%E8%B5%B7%E7%9A%84%E4%BF%AE%E4%BB%99%E6%A8%A1%E6%8B%9F%E5%99%A8":{"title":"了不起的修仙模拟器","content":"\n## 外链\n**攻略链接**\n[Excel攻略汇总](https://www.wolai.com/jzvMHWiMp2wGpmJbdMT5Uz \"Excel攻略汇总\")\n[攻略图](https://www.wolai.com/urE12xaF1JCPM3KHdvc1Nn \"攻略图\")\n[BWiki](https://wiki.biligame.com/acs/%E9%A6%96%E9%A1%B5)\n\n**mod**\n[增加游戏内容的mod](https://www.wolai.com/xisTyh4QcVDg2wz7wuzkmK \"增加游戏内容的mod\")\n[辅助类mod](https://www.wolai.com/5n4XP8BCNCx86jd34QaL9y \"辅助类mod\")\n\n## 门派势力\n\n### 风水学\n\n**朝向**\n卧房与祖师殿，门朝南开为吉；\n工坊、炼宝阁与炼丹房，门朝东开为吉；娱乐房东\n厨房，门朝西开为吉。\n\n**大小**\n极小：10-\n狭小：10\\~20\n适中：20\\~50\n宽大：50\\~100\n极大：100\\~400\n400格以上不成房间\n\n**地形风水**\n水面，湿地水属性；土地土属性\n\n**建筑**\n木属性砍柴处，水井；土属性灶台，熔炉，锻铁台；其他金属性\n大凶丹炉用土丹炉木灯笼，炼五灵散\n\n### 药田规划\n清心草：灵仙草：紫芝：人参 = 1：2：2：2。 灵仙草要多一些\n\n### 堂口:\n![](image_khOMxr4HEk.png)\n\n![](image_ieeaye0FGo.png)\n\n### 代理点\n\n*   一般事件\n    ![](image_xY8OkeJUHo.png)\n\n*   奇观\n    ![](296361d2572c11df88c49974742762d0f603c28f_QQ2UImfDp.jpg)\n\n*   劳作寻珍\n    ![](ad77e8889e510fb354c3d5c1ce33c895d3430ccd_NReaBeavJ.jpg)\n\n*   赈灾\n    ![](664f73ff9925bc315387a3ce49df8db1c91370cd_GXnsHAjTY.jpg)\n\n## 历练\n\n### 历练资源和地图资源\n![](image_Y1rIf66-sQ.png)\n\n武当\n- 金顶: \n- 南岩宫: \n- 复真观\n\n### 地点特殊历练事件\n\n| 地点                  | 解锁方式                                                                                                      | 奖励获取方式                                                                                                                               |\n| --------------------- | ------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| 万古桃花潭(南荒)      | 历练                                                                                                          | 修炼《偷天决》, 炼成「浊之躯」的小人来此历练                                                                                               |\n| 黑沙滩                | 购买「拍卖会邀请函」并查看                                                                                    | 参与拍卖会                                                                                                                                 |\n| 玄空洞                | 触发秘闻「太一石匣」学习其中的《群仙录-卷1》                                                                  | 天谴值0以上的小人来此历练                                                                                                                  |\n| 琼楼                  | 同「玄空洞」                                                                                                  | 奖励①天命阁:带「命运之子」词条. 奖励②万宝阁:炼器20级小人. 奖励③藏经阁:元神期小人.                                                          | \n| 离恨岛(合欢岛)        | 历练                                                                                                          | 修炼《长生六道轮回经》, 根骨大于8, 学习了「不昧真灵」                                                                                      |\n| 异界裂缝              | 25天左右秘闻「异界动荡」                                                                                              | 奖励①:电脑时间为国庆期间. 奖励②:电脑时间为春节期间                                                                                         |\n| 丹霞绝壁(丹霞山)      | 历练                                                                                                          | 奖励①:悟性大于6的《木轮回》. 奖励②:悟性大于6的《水太和》. 奖励每人可领一次                                                                 |\n| 潜龙渊/凤栖崖(九华山) | 历练                                                                                                          | 悟性大于8的小人来两地分别历练一次(选第一个), 得《龙凤宝典》                                                                                |\n| 木白雨林(五莲山)      | 历练                                                                                                          | 学会暴雨术的元神期弟子                                                                                                                     |\n| 奇特空洞(龙脉洞窟)    | 历练                                                                                                          | 与极天宫好感300+, 去极天宫历练时概率接到「极天宫之托」任务, 学习《群仙录-卷3》, 获得秘闻「古天极符」, 派学习了《太上忘情》的元神小人来历练 |\n| 登仙台(昆仑山)        | 历练                                                                                                          | 神识大于7的元神小人                                                                                                                        |\n| 剑冢(蜀山)            | 历练                                                                                                          | 青莲剑宗好感600+, 御器15+的小人来历练. 机缘越好奖励越好. 每人可领一次.                                                                     |\n| 仙魔战场, 龙台        | 秘闻「古修踪迹」, 派元神期魅力10的小人去历练寻找古修, 找到选择2交涉, 有几率获得秘籍《上古秘闻-龙台/仙魔战场》 | 龙台-风纹古玉-凶凤, 仙魔战场-黑白色的古玉-烛龙                                                                                             |\n| 青莲山                | 秘闻「古书踪迹」, 神识10或学会「大衍神算」的小人历练寻找古书100%寻到, 其中一种奖励是《群仙录-卷2》            | 奖励①:历练选项1进入山中探索, 奖励②:历练选项3前往山顶查看                                                                                   |\n| 飞雷洞(蜀山)          | 历练                                                                                                          | 坑                                                                                                                                         |\n| 邪帝陵                | 初始自动解锁                                                                                                  | 秘闻「邪帝陵开启」, 派任意弟子历练                                                                                                         |\n| 百兽窟(百蛮山)        | 在千尸洞触摸半腐坏的残骸                                                                                      |                                                                                                                                            |\n| 太一遗迹              | 月轮山拜山门或游戏21天自动解锁                                                                                | 奖励①: 秘闻《重回太一》. 奖励②: 触摸镇塔, 阅读《太一秘典》                                                                                 |\n\n\n#### 秘闻\n\n**神通**\n\n地点：黑山\n\n所需条件：《御风子游记：卷二》\n\n**武器·洞心**\n\n地点：南荒虫谷\n\n所需条件：《御风子游记：卷六》、需修炼北斗洞心劫法\n\n**血脉觉醒**\n\n地点：合欢岛\n\n所需条件：《拾遗录：下册》、龙血者\n\n**丹方**\n\n地点：炼丹峰\n\n所需条件：《御风子游记：卷一》、高等级炼丹技能\n\n石髓\n\n地点：大漠\n\n所需条件：耐热大于900\n\n**五行药物**\n\n地点：五莲山\n\n所需条件：机缘、悟性大于等于6\n\n### 剧情\n\n*   隐秘\n\n    1栖霞洞天 \u0026#x20;\n    月清愁（神秘身影）参 \u0026#x20;\n    宁宵（神秘身影）证 \u0026#x20;\n    甘鸣（神秘身影）动 \u0026#x20;\n    林思源（神秘身影）证 \u0026#x20;\n\n    2百蛮山 \u0026#x20;\n    白芷（灭门之谜3+1）参4 \u0026#x20;\n    漆雕拙（灭门之谜）动 \u0026#x20;\n    巴寒（神秘身影）证 \u0026#x20;\n\n    3七阡坞 \u0026#x20;\n    钟离德（灭门之谜）动 \u0026#x20;\n    朱非（灭门之谜）证 \u0026#x20;\n\t\n    4昆仑宫 \u0026#x20;\n    季劫（灭门之谜）动 \u0026#x20;\n    离尾燕（灭门之谜）证 \u0026#x20;\n    叶白雪（灭门之谜）证 \u0026#x20;\n    古聪（灭门之谜）证 \u0026#x20;\n\n    5极天宫 \u0026#x20;\n    何足道（身上太元五符） \u0026#x20;\n\n    6七杀魔宫 \u0026#x20;\n    于墨染（灭门之谜）证 \u0026#x20;\n    赤丹秋（灭门之谜）动 \u0026#x20;\n\t\n    7玄一道 \u0026#x20;\n    李孙博（灭门之谜）动 \u0026#x20;\n\t\n    8丹霞洞天 \u0026#x20;\n    苏冰峦（灭门之谜）动 \u0026#x20;\n    谢思（灭门之谜）证 \u0026#x20;\n    霍离(身上古卷1和7) \u0026#x20;\n\n    9紫霄宗\u0026#x20;\n    申屠息（灭门之谜）动 \u0026#x20;\n    辛旗（灭门之谜3）参3 \u0026#x20;\n    秦杰（灭门之谜）证 \u0026#x20;\n\n    10青莲剑宗 \u0026#x20;\n    应杨（身上古卷15） \u0026#x20;\n\n    11合欢派 \u0026#x20;\n    殷莲（灭门1上古秘闻4 ）灭证1 上古动3参1 身上古卷5 \u0026#x20;\n    清雨兰（灭门之谜）动 \u0026#x20;\n\n    找不到的人找本门的人聊天，直到聊出来该人物解锁，找本门的人问此人行踪。性格冷漠的人一律放倒灵魂拷问。 \u0026#x20;\n\n    没写数字默认1条，身上隐秘数量显示3但是有4条的白芷，先从人物里问隐秘，再从线索里用刚得到的隐秘问一次。 \u0026#x20;\n\n    建议按顺序，1和2两个门派解开神秘身影 \u0026#x20;\n\n    2到11最后一个门派到合欢，问齐3个8，给第二个异闻灭门之谜解开之后再邀请合欢的殷莲来门派， \u0026#x20;\n\n    放倒了，用异闻栏解开的灭门之谜，灵魂拷问出第六条线索-外传上古信息，并拿取她身上的古卷5。 \u0026#x20;\n\n*   道具类： \u0026#x20;\n\n    太一秘典：开局太一遗迹得到。 \u0026#x20;\n\n    上古卷轴：青莲应杨1、7，合欢殷莲5，丹霞霍离15（去门派问其他人线索的时候顺便邀请这些人到门派，《借》来） \u0026#x20;\n\n    金匣残卷：解锁前两个异闻之后，等第三次金匣事件选第四个选项， \u0026#x20;\n\n    没解的话无第四选项，必拿。 \u0026#x20;\n\n    开启时间565天 （题外：前两次天数285、447） \u0026#x20;\n\n先解密第四个异闻，把上古信息那一条选上，其他随便选的之前得到的线索，具体不明。 \u0026#x20;\n\n得到密卷的解密之法后，再阅读4个密卷、金匣残卷和太一秘典，得到线索5动1证 \u0026#x20;\n\n最后解第三个异闻121：参与默认已知信息，不用选别的。动机古卷1和金船，证据太一秘典， \u0026#x20;\n\n得到千古一帝，补完异闻。 \u0026#x20;\n\n当完成以下条件时，貌似满足其一，会触发游戏终局事件。 \u0026#x20;\n\n携带《太一秘典》进入小乾坤界中的归寂之地，还想继续玩的先别进去。 \u0026#x20;\n\n跟NPC对话完把太一秘典交给他，这个存档就结档了。 \u0026#x20;\n\n征伐12个门派 \u0026#x20;\n\n飞升50人 \u0026#x20;\n\n仙修滞留劫度过9次 \u0026#x20;\n\n游戏时间到达2000天 \u0026#x20;\n\n解锁隐秘《千古一帝》 \u0026#x20;\n\n隐藏条件未知\n\n## 仙修\n\n### 功法需求\n\n![](image_1qRd4ge-NY.png)\n\n| 木属性对应根骨，土属性对应机缘，火属性对应悟性，水属性对应魅力，金属性对应神识。                                                                                                         |\n| ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| 【九转金丹直指】火\u0026#xA;要求属性：高神识，高悟性，中根骨  \u0026#xA;九转金丹秘籍树自带丹方和大量增加炼丹成功率的秘籍，有次丹奴全门派天天嗑药不是梦，火系功法，以灵木突破合宜                                                        |\n| 【己寅九冲多宝真解】木  \u0026#xA;要求属性：高神识，中悟性，中机缘  \u0026#xA;此功法炼器成功率有提升，宜有炼灵气为灵石灵晶之能，得此宝奴众剑仙人人可得名剑，美中不足则木系功法，前期难矣，与金丹直指同为至正功法，并无邪法修炼之能                              |\n| 【七杀剑诀】金  \u0026#xA;要求属性：高神识，高根骨，中机缘  \u0026#xA; 正道真仙九百万，遇魔也须尽低眉，秘籍参悟除辅助修炼外全部为增强御器之功，至霸之剑，同阶无敌(火系法爷除外)，小道剑仙门灭于七杀魔宫之手，北斗洞劫护山弟子不及此魔道矣，然则一需剑胎入金丹，二无增灵之能，欲成真仙难矣 |\n| 【偷天决】土要求属性：极高根骨。没别的，你头铁你就修这个                                                                                                                     |\n| 【太上忘情道】要求属性：极高魅力，高悟性，中神识。人非草木孰无情，欲斩情念先动心，秘籍树有修剑之能，余则乃辅助修炼之功，有分神修炼及惑人心智之力，此魔功需天人之姿方可入门修炼，魅力不可靠筑基丹提升，欲以此邪法得证仙位必要天资绝顶方可                             |\n| 【长生六道轮回经】要求属性：高根骨魅力，高悟性，中神识，中机缘。心得：不推荐掌门修行。此功法优缺点十分明显，拥有灵气远远大于其他人，寿命悠长，入定+黄芽丹修炼极快。缺点：每突破一次灵气上限将会变低，提升上限需要突破到新生期之后，且不擅长炼丹炼器，因此不推荐为前期主要修行人物。       |\n\n### 天才地宝\n\n圣品五级灵丹→圣品灵髓脂→圣品五毒\\*2→圣品紫芝\\*2→圣品赤参→普通五毒\\*1→普通紫芝\\*15→普通赤参\\*15\n\n没有【圣品】吃【普通】也行 不要太在意【圣品】\n\n【五级灵丹】 摩擦硬币换 或者【商人】卖 。有【丹方】的可以自己【炼制】\n\n【五毒】 285天 【金匣子秘闻】 获得【丹方】\n\n【灵髓脂】蕴养的出来\n\n![](image_gTQvSc8YNE.png)\n\n### 聚灵\n\n五行\u003e聚灵\u003e舒适度\n\n*   **聚灵物**\n\n    ![](image_F5EEICceX-.png)\n\n    ![](image_JZOA_QE2na.png)\n\n*   **爆灵阵**\n\n    法座/蒲团：按数字顺序扔灵木\n\n    ![](41ef2018ebc4b7459c62a853d8fc1e178b821538_eAKGYsXxU.png)\n\n    炼法坛：\n\n    ![](726125fc5266d016b6e1816d802bd40734fa3532_Hrg-qqMaN.png)\n\n    其中，abc三个位置建造空置物台，在b置物台放一块石髓（聚灵3） \u0026#x20;\n\n    当需要爆灵时，我们依次进行以下操作： \u0026#x20;\n\n    1.  b置物台丢下石髓，重置一格600灵气 \u0026#x20;\n\n    2.  指挥小人把石髓放到a置物台，重置一格600灵气 \u0026#x20;\n\n    3.  a置物台丢下石髓 \u0026#x20;\n\n    4.  指挥小人把石髓放到c置物台，重置一格600灵气 \u0026#x20;\n\n    5.  c置物台丢下石髓 \u0026#x20;\n\n    6.  指挥小人把石髓放到b置物台，重置一格600灵气 \u0026#x20;\n\n    最后，石髓又回到了b置物台，我们可以5天后再次爆灵。并且刚好炼法坛上人坐的位置聚灵值没有被重置，灵气3000左右。\n\n### 季节天气属性加成\n\n![](image_VKxMkZbCv1.png)\n\n### 灵气机制\n\n![](image_fowpLySksa.png)\n\n### 祖师显灵\n\n![](image_XKqjUEBFv3.png)\n\n### 通灵\n1.功法太和十六洞天  \n技能名:玄魂造命  \n功能:点化物品，使物品通灵。  \n\n2.功法三阳三味丙丁炼火诀  \n技能名:命火筑灵  \n功能:点化建筑，使建筑通灵  \n\n3.功法九天应元雷声昔化玉书(神修功法)  \n技能名:神恩赐命(需开启神国，并建造神威阁2级)  \n功能:点化植物，使植物通灵。\n\n4.功法九转金丹直指  \n技能名:造化塑体(再造术技能3级后获得，需元神期)  \n功能:将所有通灵精怪点化塑造身体变成人形。\n\n## 神修\n\n## 体修\n\n### 妖族思绪\n![](04f0b3a5462309f7974cd951650e0cf3d6cad689_109-u4Yj3.jpg)\n\n### 体修词条\n![[attachments/Screenshot_20210207_133843_com.baidu.tieba.jpg]]\n\n## 丹器\n","lastmodified":"2023-06-14T23:04:04.7482782+02:00","tags":[]},"/permanent/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD":{"title":"人工智能","content":"\n[[project/飞桨AI - 大模型应用开发技巧与实战|飞桨AI - 大模型应用开发技巧与实战]]\n\n[[permanent/知识增强大模型|知识增强大模型]]","lastmodified":"2023-06-15T17:23:45.498831+02:00","tags":[]},"/permanent/%E4%BB%8E%E4%B8%80%E4%B8%AA%E7%A9%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%BC%80%E5%A7%8B":{"title":"从一个空文件夹开始","content":"\n# 首先\n\n先找一个空地，创建一个文件夹——这时候文件夹是完全空的。\n\n在最初的阶段，这个文件夹会被作为 Git 仓库，在本机和网站服务器之间同步。\n\n# 创建 Hugo 应用\n\n[Hugo - Quick Start](https://gohugo.io/getting-started/quick-start/)\n\n在空文件夹打开 `cmd`, 输入以下命令，其中`mysite`是你的站点名称：\n\u003e hugo new site mysite\n\n完成之后，第一件事是配置 `Hugo主题`，否则无法正常使用。官方 [Hugo Themes](https://themes.gohugo.io/) 提供了很多，挑中哪个主题，跟随主题的指引下载主题即可。主题可以更换。\n\n下载完之后，记得在 `config.toml` 中加上想要使用的主题名：\n\u003e theme = 'YOURTHEMENAME'\n\n也可以像我一样[[permanent/打造自己的Hugo主题|打造自己的Hugo主题]]\n\n主题完成配置后，在站点根目录，使用以下命令创建一篇post:\n\u003e hugo new /posts/fisrt-post.md\n\n这样就在 `/content/posts` 下创建了一个 `md` 文件。可以用 Markdown 写文章啦。\n\n在根目录使用指令：\n\u003e hugo serve -D\n\n启动 Hugo server。 `-D` 参数指也输出草稿文件(`draft:true`的md文件)。然后就能在浏览器用 [http://localhost:1313/](http://localhost:1313/) 查看现在站点的样子了。这个功能相当于实时预览。一般的修改都能直接反映出来。但如果修改了 `toml` 文件就可能需要重新启动 Hugo server 才能生效。\n\n\u003e hugo server\n\n等价于\n\n\u003e hugo serve\n\n如果要生成静态页面(也就是最后可被 Nginx 部署的页面)，就要用\n\u003e hugo\n\n指令。不过我们只在服务器上部署，就不必在本机执行这个指令了。\n\n如果你已经有了域名，在部署之前，必须把 `config.toml` 里的 `baseURL` 改成 你自己的域名。否则生成的静态页面会出问题。\n\n# 上传到 Github\n\n这里默认你对 Git 有一定了解.\n\n先在 Github 新建一个仓库。\n\n关掉 Hugo server, 在 Hugo 应用根目录打开 cmd 或 git bash(记得改相应参数啊):\n\n```\ngit init\ngit add .\ngit commit -m 'first commit'\ngit remote add origin git@github.com:evixenon/tongluoshao.git\ngit branch -M main\ngit push -u origin main\n```\n\nOK, 在服务器端就可以 clone 这个仓库了.\n\n# 服务器端环境安装\n\n首先在服务器安装 `Hugo` 和 `Nginx` 。\n\n我的是 Ubuntu 系统：\n```\nsudo apt install nginx\nsudo apt-get install hugo\n```\n\n如果服务器出现 `E:Unable to locate package xxx` 错误，运行以下命令更新一下`apt`:\n\u003e sudo apt update\n\n\n# 服务器端生成 Hugo 静态页面\n\n把仓库克隆下来后，在 Hugo 应用的根目录运行\n\u003e hugo\n\n这样在根目录下就生成了一个 public 文件夹\n\n\n# 服务器端配置 Nginx \n\nNginx 的配置入门可以看看[官方教程](https://nginx.org/en/docs/beginners_guide.html)。现在只要弄让 Nginx 把网站呈现出来就可以了。\n\n用我自己的例子讲一下 Nginx 的配置，我在根目录下把建了一个 `/www` 文件夹，并把我的 git 仓库在这里克隆下来。\n```\ncd /\nmkdir /www\ngit clone git@github.com:evixenon/tongluoshao.git\n```\n\n然后修改 Nginx 的配置文件，位置在 `/etc/nginx/nginx.conf` .\n\n配置文件的 http 部分加了如下内容:\n```\nserver {\n    listen  80;\n    server_name     www.tongluoshao.space tongluoshao.space;\n\n    location / {\n            index index.html;\n            root /www/tongluoshao/blogs/public;\n    }\n}\n```\n\n`location /` 里的 root 指向生成的静态页面，也就是上一步生成的 `public` 文件夹。\n`server_name` 写你的域名。如果没有域名，IP也是可以用的。\n\n这样就可以用了。然后重新载入一下 Nginx:\n\u003e nginx -s reload\n\n然后就可以从外面访问服务器啦。\n\n参考：\n\n[快速搭建https网站: Hugo + Nginx + Let's Encrypt (certbot)](https://zhuanlan.zhihu.com/p/365910957)\n\n[Hugo - Quick Start](https://gohugo.io/getting-started/quick-start/)","lastmodified":"2023-06-17T11:56:57.284461+02:00","tags":["hugo","个站"]},"/permanent/%E4%BB%8E%E5%8E%9F%E5%AD%90%E8%BF%90%E5%8A%A8%E7%9A%84%E8%A7%92%E5%BA%A6%E7%9C%8B%E6%B0%94%E6%B6%B2%E5%9B%BA%E4%B8%89%E7%9B%B8%E5%8F%98%E5%8C%96":{"title":"从原子运动的角度看气液固三相变化","content":"\n物质中的原子是在不断运动的\n\n液态的水面上水分子在不断运动, 其中运动得更剧烈的水分子就会脱离液态水, 也就是蒸发. 这些蒸发的水分子能量高于平均, 因此蒸发会导致液态水温度降低. \n温度升高, 就是原子运动加剧, 因此升高温度蒸发得更快.\n又会有空气中游离的气态水分子附着回到液态水.\n\n冰中的原子联结更紧密, 运动幅度更小, 但即使在 绝对零度, 也会有最低幅度的振动.\n\nsrc: 费曼物理学讲义","lastmodified":"2023-06-15T13:14:56.1505232+02:00","tags":[]},"/permanent/%E4%BC%91%E9%97%B2%E5%AE%97%E9%97%A8":{"title":"休闲宗门","content":"\n- 炼丹 卷王 莽 炼体 痴情 丹药精通\n- 有权有势 功法/武技精通 其他精通 \n\n单独姓\u003e凌\u003e武\n\n有权有势的保持本姓\n\n\n#### 入门顺序\n唐龙 0-4\n唐霏 0-7\n武长泽 0-7\n武敖 0-10\n\\*楚苑 1-1\n武沧兰 1-1\n武慕婉 1-4\n姜擎 1-7\n\\*唐枫眠 1-10\n魏延昭 2-1\n叶酬 2-4\n武禾 2-7\n上官若水 2-10\n\\*方杨 2-10\n武流云 3-1\n唐铁江 3-4\n林思　3-7\n秦小柔 3-7\n唐破 3-10\n\\*宁寒 4-4\n---20\n\\*紫寻 ?\n\\*颜野 9-10","lastmodified":"2023-06-15T21:45:37.7125707+02:00","tags":[]},"/permanent/%E4%BD%8D%E5%9B%BE":{"title":"位图","content":"\n- 又称光栅图 raster graphic\n\n#### 解析度 resolution\n- 长和宽上像素点的数量\n- 如 1920x1200\n\n#### 色彩深度 color depth\n- 指用多少位来存储颜色\n\n##### 真彩色 True-Color\n- 用 24 位存储颜色, RGB 各8位\n- 一共有 16 777 216($2^{24}$) 种颜色\n- JPEG 用的是真彩色\n\n##### 索引色 indexed color\n- 也叫调色板色 palette color\n- 只要 8 位\n- 从真彩色的 16777216 种中选择 256 种\n- GIF 用的是索引色","lastmodified":"2023-06-15T21:32:26.9414474+02:00","tags":["计组"]},"/permanent/%E4%BD%8D%E7%A7%BB%E8%BF%90%E7%AE%97":{"title":"位移运算","content":"\n- shift operation\n\n#### 逻辑位移\n- logical shift operation\n- 逻辑左移: 最高位丢失, 最低位进0, 其余左移一位\n- 逻辑右移: 最高位进0, 最低位丢失, 其余右移一位\n\n#### 循环位移\n- circular shift operation\n- 循环左移: 最高位到最低位, 其余左移一位\n- 循环右移: 最低位到最高位, 其余右移一位\n\n#### 算术位移\n- arithmetic shift operation\n- 考虑到了[[permanent/补码系统(有符号整数存储)|补码]]存储的数字\n- 算术左移: 同逻辑左移\n- 算术右移: 全部右移一位, 最低位丢失, 最高位等于原来的最高位\n\n#### 拓展:微机位移指令\n- ROL:循环左移；\n- ROR:循环右移；\n- RCL: 带进位循环左移；\n- RCR: 带进位循环右移。 \n- 具体用法：ROL: 循环左移, 高位到低位并送 CF;ROR: 循环右移, 低位到高位并送 CF；RCL: 循环左移, 进位值到低位, 高位进 CF；RCR: 循环右移, 进位值到高位, 低位进 CF","lastmodified":"2023-06-15T21:32:41.3563613+02:00","tags":["计组"]},"/permanent/%E4%BD%8D%E7%BD%AE%E5%8C%96%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F":{"title":"位置化数字系统","content":"\n- 位置化的数字系统中, 数码的位置决定其表示的值\n- 值 $S = S_{k-1} * b^{k-1} + ... + S_1 * b + S_0$\n    - $S_n$ (从右数) n 位置的数码\n    - b 底, base\n- 我们平时用的十进制系统就是位置化数字系统\n- 二进制, 八进制, 十六进制也是\n- 非位置化数字系统, 如罗马数字","lastmodified":"2023-06-15T21:32:59.9970662+02:00","tags":["计组"]},"/permanent/%E4%BD%A0%E7%8C%AB%E6%B8%B8":{"title":"你猫游","content":"\n[光景攻略合集](https://www.taptap.cn/moment/322514233717688465)\n\n[3.0武器建议](https://www.taptap.cn/moment/415171918870613519)\n\n[堆血装备一览](https://www.taptap.cn/moment/415146927236057584)\n\n#### 完成度\n\n##### 主线\n- [x] 第一部+隐藏\n- [x] 1.5部前后篇+隐藏\n- [x] 二前\n    - [x] 剧情\n    - [x] 现东副本毕业\n    - [x] 现代八妖\n- [ ] 二中\n    - [x] 剧情\n    - [x] 隐藏Fear\n    - [ ] 古东副本毕业?差土偶\n    - [ ] 古代八妖\n- [ ] 二转\n    - [x] 剧情\n    - [ ] 隐藏Fear\n    - [ ] 未东副本\n- [ ] 二结\n    - [x] 主线\n    - [ ] 隐藏Fear\n    - [ ] 十六妖\n    - [ ] 冥峡界副本\n- [ ] 第三部\n\n##### 外传\n- [x] 魔剑1\n- [x] IDA1 + 隐藏\n- [x] 龙宫1 + 钓鱼\n- [x] 炭矿村\n- [x] IDA2 + 隐藏\n- [x] 通天塔\n- [x] 幽禁庭院\n- [x] 魔剑2\n- [ ] 不凋花 拍卖\n- [ ] 龙宫2\n    - [ ] 叉鱼\n    - [ ] AS 莉瓦雅\n\n##### 外典\n- [ ] 西方外典\n    - [x] 剧情\n    - [ ] 极彩之尘(无貌)\n- [ ] 未来外典\n    - [ ] 剧情\n    - [ ] 还有啥啊\n\n##### 断章\n- [x] 米悠\n- [x] 希尔\n\n##### 联动\n- [ ] P5\n    - [x] 剧情\n    - [ ] 点数\n- [ ] P5R\n- [ ] 传说1\n- [ ] 传说2\n\n##### 回生\n\n##### 邂逅, 后日谈\n\n##### 其他内容\n猫冒险\n小黑","lastmodified":"2023-06-15T21:10:45.8992996+02:00","tags":[]},"/permanent/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%9A%84%E5%8E%9F%E5%88%99":{"title":"信息安全的原则","content":"\n### Need-to-know 原则\n应当只被允许访问为履行其职责而需要的信息","lastmodified":"2023-06-15T21:31:11.4632334+02:00","tags":["安全"]},"/permanent/%E4%BF%AE%E6%94%B9%E7%BC%96%E8%BE%91%E9%BB%98%E8%AE%A4%E8%BD%AF%E4%BB%B6":{"title":"修改编辑默认软件","content":"\n#### bat\n\nsrc [修改BAT格式文件的默认编辑程序 - jingkunliu - 博客园](https://www.cnblogs.com/Jingkunliu/p/13743581.html)\n\nbat格式文件默认通过文本文档方式编辑，在编辑过程中有很多不便。\n\n修改方法：\n\n1、依次打开【开始】菜单，进入【运行】，输入【regedit】进行注册表编辑器。\n\n2、找到【计算机\\HKEY_CLASSES_ROOT\\batfile\\shell\\edit\\command】位置下的注册表项。\n\n3、修改注册表值为默认打开的修改程序。\n\n【C:\\Program Files\\Notepad2\\Notepad2.exe %1】其中前面部分为需要修改后的默认程序路径，注意别漏掉后面%1的内容。\n\n建议可以使用NOTEPAD2或者NOTEPAD++等软件作为bat格式文件的默认编辑器。\n\n","lastmodified":"2023-06-15T21:45:54.5326647+02:00","tags":["WIN","工具使用"]},"/permanent/%E4%BF%AE%E6%94%B9WIN%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E4%BE%A6%E5%90%AC%E7%AB%AF%E5%8F%A3":{"title":"修改WIN远程桌面侦听端口","content":"\n默认是 3389\n- 改 注册表 port number 项\n    - 改注册表 `计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp`\n    - 也有说`计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Wds\\rdpwd\\Tds\\tcp` 也要改的（测试也是改了才行）\n- 防火墙添加入站规则\n    - firewall 高级设置， 新建入站规则，改成新改的端口\n    - 脚本 [[permanent/bat 创建防火墙入站规则|bat 创建防火墙入站规则]]","lastmodified":"2023-06-16T19:14:21.4073496+02:00","tags":["WIN","服务器"]},"/permanent/%E5%86%85%E5%AD%98%E5%92%8C%E5%A4%96%E9%83%A8%E5%AD%98%E5%82%A8":{"title":"内存和外部存储","content":"\n\n|内存|外部存储|\n|---|---|\n|纯电子(晶体管和电容)|可磁化的旋转磁盘|\n|易变|不易变|\n|快(10ns)|慢(5ms)|\n|贵|便宜|\n|自由存储|区块存储|\n\n![[Pasted image 20221021184005.png]]\n","lastmodified":"2023-06-15T17:47:12.0810753+02:00","tags":["计组"]},"/permanent/%E5%86%92%E9%99%A9%E5%B2%9B":{"title":"冒险岛","content":"\n## Link, 联盟\n#### Link\n- [Link表](https://www.neoska.me/link.html)\n- ![[attachments/Pasted image 20230311105801.png]]\n\n#### 联盟进度\n- 3500\n\n| 战士   | lv  | 弓箭手 | lv  | 飞侠   | lv  | 魔法师 | lv  | 海盗   | lv  |\n| ------ | --- | ------ | --- | ------ | --- | ------ | --- | ------ | --- |\n| 英雄   |     | 神射手 |     | 刀飞   |     | 冰雷   |     | 船长   | 200 |\n| 圣骑士 |     | 箭神   |     | 标飞   |     | 火毒   |     | 队长   |     |\n| 黑骑士 |     | 古迹   |     | 双刀   |     | 主教   |     | 火炮手 |     |\n| 魂骑士 |     | 风灵   |     | 夜行者 | 150 | 炎术士 |     | 奇袭者 |     |\n| 米哈尔 | 190 | 双弩   | 140 | 幻影   | 170 | 龙神   | 160 | 隐月   |     |\n| 战神   | 140 | 豹弩   |     | 尖兵   | 120 | 夜光   | 140 | 机械师 |     |\n| 红毛   | 200 | 该隐   |     | 魔链   |     | 唤灵   |     | 天使   |     |\n| 白毛   | 150 |        |     | 虎影   | 244 | 林之灵 | 203 | 亚克   | 160 |\n| 爆破   |     |        |     |        |     | 超能力 |     | 墨玄   | 200 |\n| 狂龙   |     |        |     |        |     | 阴阳师 |     |        |     |\n| 神之子 | 180 |        |     |        |     | 圣晶   | 140 |        |     |\n| 剑豪   | 200 |        |     |        |     | 元素师 | 213 |        |     |\n| 阿黛尔 |     |        |     |        |     |        |     |        |     |\n\n## 练级套制作\n\n|      | 法师43            | 飞侠 44 | 战士 45 | 弓箭手 | 海盗(力)   |\n| ---- | ----------------- | ------- | ------- | ------ | ---------- |\n| 帽子 | 9* 6%             | 8* 9%   | 9* 9%   | 9* 9%  | 9* 9%      |\n| 套服 | 9* 6%             | 9* 9%   | 9* 6%   | 9* 9%  | 9* 6% 3% ? |\n| 手套 | 9* 6%             | 9* 9%   | 9* 9%   | 9* 6%  |            |\n| 鞋子 | 7* 3%             | 9* 9%   | 9* 6%   |        | 9* 9%?     |\n| 武器 | 135级196MG PB短杖 |         |         |        |            |\n\n\n## 虎影\n### 装备计划\n- 武器 特米 上潜能之前￥866\n    - 天然普次 ￥122\n    - 12张X卷+133, 均11+ ￥714\n    - 商城黄金锤 一发入魂 ￥30\n    - FFN扇子 A 潜 托德  ￥忘了大概5块内\n- 鲁塔 头￥450 上￥999下￥450 四件套\n- 漩涡 手套 披风 鞋 ￥500 四件套\n- 中贝 腰带 戒指 吊坠 三件 ￥200\n- 高贝 耳环 戒指 吊坠 三件 ￥160+\n- 绚蓝眼￥300\n","lastmodified":"2023-06-14T23:45:48.6863746+02:00","tags":[]},"/permanent/%E5%86%AF%E8%AF%BA%E4%BE%9D%E6%9B%BC%E6%A8%A1%E5%9E%8B":{"title":"冯·诺依曼模型","content":"\n- 冯·诺依曼模型是所有现代计算机遵循的模型\n- 基于冯·诺依曼模型的计算机拥有四个子系统\n    - 算术逻辑单元 ALU\n    - 控制单元\n    - 输入/输出数据\n    - 存储器\n\n##### 算术逻辑单元 ALU\n![[permanent/CPU#算术逻辑单元 ALU|ALU]]\n\n##### 控制单元\n![[permanent/CPU#控制单元|控制单元]]\n\n","lastmodified":"2023-06-15T17:16:42.1267421+02:00","tags":["计组"]},"/permanent/%E5%88%86%E7%B1%BB%E6%B3%95":{"title":"分类法","content":"\n\n参考: [如何对知识分类](https://www.zhihu.com/question/20716696)\n\n![[attachments/Pasted image 20221209225037.png]]","lastmodified":"2023-06-15T16:52:03.0638474+02:00","tags":[]},"/permanent/%E5%88%9B%E9%80%A0%E5%8A%9B%E7%9A%84%E5%85%B3%E9%94%AE":{"title":"创造力的关键","content":"\n关键是能够在两种框架中灵活切换:\n1. 天马行空的想象力和发散的思维\n2. 理性分析能力和应用能力\n\n相似地: [[permanent/解决问题的能力|解决问题的能力]]\n\n![[attachments/f774b1a49b05044a3c54fc59717c12f.jpg]]","lastmodified":"2023-06-15T12:58:23.6741363+02:00","tags":[]},"/permanent/%E5%8A%A0%E7%9B%90":{"title":"加盐","content":"\nhttps://www.ucloud.cn/yun/88113.html\n\n#### 加盐\nsalting\n密码学中的加盐是指, 通过在密码的任意固定位置插入(或替换)特定的字符串, 然后散列的结果和原始密码的散列结果不同.\n\n#### 加盐的方法\n\n##### 固定字符串加盐\n就是将固定字符串加在密码的固定位置, 然后进行加密.\n这种方法的缺点是, 一旦攻击者拿到源代码(都拿到数据库了还拿不到源码吗), 就能轻松构建一张新的[[permanent/彩虹表]]破解密码.\n\n##### 随机字符串加盐\n盐的长度固定, 但是是随机的. 数据库在存储每位用户的密文密码的同时也存储每位用户的盐.\n加密方式例如 `md5(md5(passwd) + salt());`\n\n随机字符串的加盐也仅能增加破解难度, 并非无法破解. 彩虹表的数据量 = 数据库盐的数量 * 常用密码数量\n\n#### 为什么要加盐\n第一阶段明文密码. 密码在数据库中以明文保存, 因此数据泄露时造成很多事故\n\n第二阶段密文密码. 密码进行加密后再放入数据库, 比如 md5 加密, 数据库中, 密码一栏的内容就是原密码用 md5 加密后的值. 但由于[[permanent/彩虹表]]的出现, 加密后保存的密码也不再安全.\n\n第三阶段加盐. \n","lastmodified":"2023-06-15T17:34:37.4859806+02:00","tags":["安全","密码学"]},"/permanent/%E5%8D%97%E8%9B%AEDLC%E5%9C%B0%E5%90%8D":{"title":"南蛮DLC地名","content":"\n## 武陵郡\n- 治所**临沅**\n- 武陵有个叫**汉寿**的县，在东汉相当长时间里是荆州刺史的治所，吴时改成吴寿，晋改回汉寿；（葭萌在蜀汉时期被改名汉寿，晋时改晋寿）\n- **迁陵**在湘西，现保靖东北。2002年保靖里耶镇出土过36000片秦简，里耶在秦朝属迁陵县。\n- **镡成**(xin2)是秦时平定岭南设的军事据点，现湖南靖县附近\n- **充县**，现湖南桑植，贺龙元帅故乡。 \n\t  溇中澧中蛮指溇水澧水一带的蛮族。\n- **夷道**，现湖北宜都。\n- 泰山太守应劭\n- 交州刺史朱符\n- 武陵蛮的传说里：\n\t  高辛氏是帝喾\n- 秦以二十两为镒\n- 三代以前分土，自秦汉分人\n- 周末始有将军官\n- 吴姓自周命氏\n## 巴郡\n- 巴郡的变迁过程\n- 献帝初赵韪提议（华阳国志）\n\t  ![image.png](../attachments/image_1640858573861_0.png)\n- （朐忍chun2，意蚯蚓）\n\t  ![image.png](../attachments/image_1640858645343_0.png)\n- 建安五年赵韪造反，刘璋斩之。六年，鱼复的蹇胤又提议改分\n\t  ![image.png](../attachments/image_1640858657157_0.png)\n- 涪陵的谢本又请求划分新郡\n\t  ![image.png](../attachments/image_1640858668663_0.png)\n\t  ![image.png](../attachments/image_1640858680998_0.png)\n- 刘备入益州时将巴东改成江关都尉，后改固陵。然后又有人不满了要改回巴名。\n\t  ![image.png](../attachments/image_1640858692597_0.png){:height 142, :width 366}\n- 蜀汉时巴郡地图：\n\t  ![image.png](../attachments/image_1640858704145_0.png)\n-\n## 涪陵郡\n- 据记载，涪陵没有产榨菜，而是产勇士。\n-\n## 犍为郡 qian2\n- 治所在现武阳**彭山**，离涪陵郡很远。\n- 孝武帝时置犍为郡，时治鳖（现贵州遵义），昭帝时迁僰道（bo2,现四川宜宾），后迁武阳。\n- ![image.png](../attachments/image_1640858780088_0.png){:height 428, :width 502}\n## 江阳郡\n- 建安十八年刘璋置郡，本来是犍为郡的一部分。\n- 可考证的县只有三个：**汉安**，**江阳**（现四川泸州），**符节**\n- ![image.png](../attachments/image_1640858824633_0.png)\n- **朱提**(shi2,通匙)，前犍为属国的治所，后改朱提郡，今云南昭通\n\t  朱提郡有个县叫堂琅，意为螳螂 \n\t  ![image.png](../attachments/image_1640858839703_0.png)\n- 平夷，今贵州毕节一带，东汉时属牂牁郡。\n## 南方诸郡\n- 东汉时南方四郡（**牂牁**郡，**越嶲**xi1郡，**益州**郡，**永昌**郡）\n\t  ![image.png](../attachments/image_1640858887849_0.png)\n- 建兴三年，诸葛亮征四郡，四郡皆平。改益州郡为建宁郡，分建宁、永昌郡为云南郡，又分建宁，牂牁为兴古郡\n\t  ![image.png](../attachments/image_1640858979271_0.png)\n- 云南郡治所**梇栋**，现姚安\n- **青蛉**，现大姚，意为蜻蜓\n- 越嶲郡治所**邛都**，现西昌。越嶲夷人数次造反，连杀两任太守，后来太守不敢到郡上上任，只敢住在八百里外的安上县，后来张嶷上任才控制住。\n- 益州郡治所**滇池**，现云南晋宁东北边。汉武帝时攻打昆明国，因为滇池的存在，特意在长安挖了一个昆明池模拟水战环境。现在西安还有昆明池的遗址。\n- 建宁治所**味县**mei4，今云南曲靖\n- 建宁**修云**是三国时期新设的县，现大约在云南弥勒附近。\n- 建宁**谈稿**，现云南盘县附近，三国时期撤县，西晋时才重新设立\n- 牂牁治所**且兰**，且音沮，汉时叫故且兰，原来是一个叫且兰的部落的地方，大约在现贵州黄平附近\n- 牂牁**夜郎**，旧部落名，现在大约在贵州关岭附近\n- 牂牁**毋敛**，现在大约在贵州独山附近\n- 永昌郡西汉时是没有的，东汉时才新开拓\n- 永昌治所**不韦**，现云南保山附近\n- 永昌**永寿**，三国或西晋新设\n## 交趾郡\n- 现越南北部\n- ![image.png](../attachments/image_1640859171645_0.png)\n- 治所**龙编**，现河内附近\n- **临尘**，现广西崇左附近，三国时期应属郁林郡\n- **宛温**，宛音yuen1，三国时期应是兴古郡治所，现砚山附近，东晋改名宛暖，避权臣桓温讳。\n- **西随**，现云南金平附近，三国时期应属兴古郡\n## 九真郡、日南郡\n- 九真治所**胥浦**，现越南清化附近，曾经是越南西都\n- 日南治所**西卷**，现越南广治附近\n- ![image.png](../attachments/image_1640859454855_0.png)","lastmodified":"2023-06-15T17:07:00.0514026+02:00","tags":["读书"]},"/permanent/%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E6%B3%95":{"title":"卡片盒笔记法","content":"\n### 思考基准\n[[permanent/记笔记的目标|记笔记的目标]]\n\n### 卡片的分类\nsrc: 《卡片笔记写作法》\nsrc: [杨奇的博客](https://www.yangqi.show/posts/what-is-zettelkasten#%E5%85%B3%E9%94%AE%E8%AF%8D%E7%B4%A2%E5%BC%95)\n\n##### 闪念笔记 fleeting note\n随时冒出的想法或者随时想记录的内容，放在收集箱中待处理\n\n##### 文献笔记 literature note\n在阅读时认为有价值的内容，以后思考或者写作时可能会用到的\n不要抄写，重要的是理解和自己的思考\n并记得保留来源\n\n##### 永久笔记 permanent note\n链接好的[[permanent/卡片盒笔记法#闪念笔记 fleeting note|闪念笔记]]，正式加入卡片盒\n链接好是指与先前的永久笔记建立好了应有的链接\n\n##### 项目笔记 project note\n针对某一个项目所收集的笔记，项目结束后失去价值，应归档或删除\n我觉得有价值的内容还是做永久笔记好，项目笔记应像是一个link表(资料收集)\n还有大纲, 草稿, 备忘, 待办都算\n\n##### 关联笔记\n是指将一些看似零散的笔记链接在一起，并解释他们为何在一起的笔记。比如相似方法的对比，有同样原理的东西，也可能是链接关系的整理\n\n##### 大纲笔记\n接近关键词索引或主题索引，只有指向其他笔记的链接。可能以特定方式排列。\n\n### 使用方法\n[[permanent/卡片盒笔记的实践方法|卡片盒笔记的实践方法]]\n\n### 优势\n- 将注意力集中的笔记的记录，思考上，而不是分类整理\n- 不局限于一个链接，比如在写对比笔记的时候非常有用\n","lastmodified":"2023-06-15T17:45:19.8094998+02:00","tags":[]},"/permanent/%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%96%B9%E6%B3%95":{"title":"卡片盒笔记的实践方法","content":"\n### 卡片盒笔记的原则\n1. 原子性原则：一条笔记只表述一个内容\n2. 自主原则：在脱离上下文后，一张卡片仍保持独立完整\n3. 始终链接：避免孤立\n4. 建立链接时解释为什么\n5. 表达转述\n6. 保留参考文献，但不必强调来源。\n7. 添加自己的想法：而不仅是笔记\n8. 不要在意笔记结构：思考结构又会陷入分类的怪圈。实际上，卡片 盒里的每一张卡片都是平等的\n9. 添加[[permanent/卡片盒笔记法#关联笔记|关联笔记]]\n10. 添加[[permanent/卡片盒笔记法#大纲笔记|大纲笔记]]\n11. 更正代替删除：建立新的卡片更正不再适用的旧卡片，并表述为何卡片不再适用。\n12. 大胆添加，什么都可以加，卢曼有90k条笔记\n\nsrc: [卡片盒笔记的原则](https://www.yangqi.show/posts/what-is-zettelkasten#%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E7%9A%84%E5%8E%9F%E5%88%99)\n\n### Workflow\n1. 在 Obsd 卢曼卡片盒的默认位置新建一页，此为一张[[permanent/卡片盒笔记法#闪念笔记 fleeting note|闪念卡片]]或[[permanent/卡片盒笔记法#文献笔记 literature note|文献卡片]]。如果无法使用软件，可以就近取材，比如手机备忘录或餐巾纸。\n2. 在忘记自己为什么要自己这条笔记前，将闪念卡片整理成[[permanent/卡片盒笔记法#永久笔记 permanent note|永久卡片]], 最好是每天一次. 记永久笔记的时候, 应当思考这条笔记与卡片盒中已有笔记的联结.\n3. 将卡片放入卡片盒中合适的位置\n4. 在某一主题的笔记足够成体系时, 建立更大的链接\n","lastmodified":"2023-06-15T17:44:56.4890566+02:00","tags":[]},"/permanent/%E5%8F%91%E5%B1%95%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E5%8A%9B":{"title":"发展技术领导力","content":"\n#todo\nhttps://garden.oldwinter.top/%E5%8F%91%E5%B1%95%E6%8A%80%E6%9C%AF%E9%A2%86%E5%AF%BC%E5%8A%9B/","lastmodified":"2023-06-15T17:00:47.7497564+02:00","tags":[]},"/permanent/%E5%90%8D%E8%AF%8D%E5%BC%BA%E5%8F%98%E5%8C%96%E4%B8%8E%E5%BC%B1%E5%8F%98%E5%8C%96-Deklination":{"title":"名词强变化与弱变化 Deklination","content":"\n#### 太长不看\n强变化就是单词本身的变化。\n\n弱变化，首先判断是阳性名词，其次根据结尾的不同以ant. ent. and. ist 这样的类似于职业相关的名词。除一格其他格需添加以n或en。\n\n### 强变化\n1. 在阳性和中性名词的单数第二格中，单音节名词-x,-s,-ss,-ß,-z,-tz,-x结尾的名词以-s结尾. 多音节名词以-s结尾\n2. 部分名词词尾既可以加-s,又可以加-es，具体见词典\n3. 以-nis结尾的名词，变复数名词结尾变为-nisse\n4. 以-in结尾的阴性名词，复数名词结尾变为-innen\n5. 复数名词的第三格以-(e)n结尾. 如果一个名词的复数形式以-s,-n结尾，则这个名词的第三格复数无词尾。如-Auto\n6. 带不定冠词的复数名词的第二格以von+第三格的形式表现. 复数名词前有形容词则可以使用第二格\n\n### 弱变化\n阳性名词\n1. 所有以-e,-and,-ant,-ent,-ist结尾的生命名词（除Käse,只有单数形式，Moment，物质名词)\n2. 以-e结尾的非生命名词在单数第二格词尾加-s，\n3. 来源于希腊语的生命名词和人造机械名词\n4. 一些生命名词，没找到规律，列举部分如下:\n\u003e Bär, Nachbar, Narr, Prinz, Herr, Rebell, Bauer, Fürst, Graf, Held, Kamerad\n5. 一个阳性名词的复数以en结尾或重音在最后一个音节，则很有可能是弱变化名词\n6. 唯一一个中性名词 Herz","lastmodified":"2023-06-14T23:46:00.6772954+02:00","tags":["de"]},"/permanent/%E5%9B%BE%E7%81%B5%E6%9C%BA":{"title":"图灵机","content":"\n- 图灵机不是一个具体的机器, 而是由 Alan Turing 提出的一种数学上的模型. 只要为这类机器提供合适的程序, 图灵机应当能够执行所有的计算.\n- 基于图灵模型的计算机由以下部分组成\n    - 图灵机\n    - 输入/输出\n    - 程序","lastmodified":"2023-06-15T21:25:32.0837697+02:00","tags":["计组"]},"/permanent/%E5%9B%BE%E7%81%B5%E7%9A%84%E7%8C%AB-%E4%BA%BA%E4%BA%BA%E9%83%BD%E8%83%BD%E5%90%AC%E6%87%82%E7%9A%84AI%E9%80%9A%E8%AF%86%E8%AF%BE":{"title":"图灵的猫 - 人人都能听懂的AI通识课","content":"\n#### 历史\n[[AI的发展历史]]\n\n","lastmodified":"2023-06-15T21:25:14.2472414+02:00","tags":["AI"]},"/permanent/%E5%A4%84%E4%BA%8B%E6%96%B9%E6%B3%95":{"title":"处事方法","content":"\n[[permanent/STAR 模型|STAR 模型]]\n\n[[permanent/解决问题的能力|解决问题的能力]]\n\n[[permanent/创造力的关键|创造力的关键]]","lastmodified":"2023-06-15T21:40:12.3564355+02:00","tags":[]},"/permanent/%E5%A4%9A%E6%80%81":{"title":"多态","content":"\n#### 多态\n多态指的是同一个方法调用，由于对象不同可能会有不同的行为\n\n是面向对象编程中常用的概念\n\n#### 链接语言\nJava 的多态 [[permanent/Java 基础#Polymorphism|Polymorphism]]","lastmodified":"2023-06-14T23:45:20.3926443+02:00","tags":["oop"]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7":{"title":"太吾绘卷","content":"\n## 教程\n[[permanent/宵夜97 - 太吾绘卷 Mod 制作]]\n\n## readme\n[[permanent/太吾绘卷Mod 自用更新改动检查器 readme]]\n[[permanent/太吾绘卷Mod RPC前后端通信 readme]]\n[[permanent/太吾绘卷Mod RPC前后端通信 readme]]\n\n## 笔记\n[[permanent/太吾绘卷 Mod 制作分析笔记]]\n[[permanent/太吾绘卷事件编辑器]]\n[[permanent/太吾绘卷事件Guid]]","lastmodified":"2023-06-15T21:42:05.1614004+02:00","tags":[]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7%E4%BA%8B%E4%BB%B6%E7%BC%96%E8%BE%91%E5%99%A8":{"title":"太吾绘卷事件编辑器","content":"\n#### 在事件中植入选项\n编辑事件代码-OnEventEnter()\n```C#\n// 向互动植入选项\nEventHelper.AddOptionToEvent(\"fb38f657-6ed0-41e4-a0c2-c82afb49762f\", Guid.ToString(), EventOptions[0].OptionKey);\n\n// 向主交互植入选项\nEventHelper.AddOptionToEvent(\"567d1caf-8b28-4dbf-8cbe-e746e8ac8cfd\", Guid.ToString(), EventOptions[0].OptionKey);\n\n// 植入完毕后退出\nEventHelper.ToEvent(string.Empty);\nreturn;\n```\n\n#### 获取太吾/互动角色\n```C#\n// 获取太吾\nvar taiwu = ArgBox.GetCharacter(EventArgBox.RoleTaiwu);\n\n// 获取互动对象id\nint charId = -1;\nArgBox.Get(\"CharacterId\",ref charId);\n```\n\n#### 同道判断\n```C#\nEventHelper.IsInGroup(charId)\n```\n\n\n","lastmodified":"2023-06-15T21:22:29.466699+02:00","tags":[]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7%E4%BA%8B%E4%BB%B6Guid":{"title":"太吾绘卷事件Guid","content":"\n#### 大地图人物交互\n\n人物交互主事件\n```\n567d1caf-8b28-4dbf-8cbe-e746e8ac8cfd\n```\n\n交谈\n```\n05e87c45-f14e-49ef-8769-cbaced4753ae\n```\n\n比试\n```\n9dce4f27-347c-4588-9be4-08c1c7f1f4a3\n```\n\n修习\n```\na9d0bcd8-e378-4ee9-96a6-1e5b9db17371\n```\n\n亲近\n```\nbad63f08-115a-45aa-970c-fa203dd85e2b\n```\n\n敌对\n```\n7c70ce0c-577a-4049-bcad-e593c63d62d4\n```\n\n互动\n```\nfb38f657-6ed0-41e4-a0c2-c82afb49762f\n```\n\n\n#### 传剑\n传完了按立场说话\n![[attachments/Pasted image 20230424000412.png]]\n```\nb7bf8f65-470e-4f55-9377-b2417f9863b8\n```\n\nTriggerLegacyPassingEvent(false)\n入魔传剑\n```\n24b66f5e-cd47-486c-ad8f-6e069bd8dd71 to event =\u003e 0d699770-2cc9-4c91-89a8-f6218a041731\n```\n\nTriggerLegacyPassingEvent(true)\n死亡传剑\n```\n24b66f5e-cd47-486c-ad8f-6e069bd8dd71 to event =\u003e 0fdb04fe-635f-4359-9e81-01937639be23\n```\n\n24b(默认跳转0fd)\n![[attachments/Pasted image 20230424004840.png]]\n\n0d6\n![[attachments/Pasted image 20230424004929.png]]\n\nTriggerLegacyPassingEvent函数\n```text\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] entering: onEvent_NeedToPassLegacy()\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|new Event triggered : 24b66f5e-cd47-486c-ad8f-6e069bd8dd71, _triggeredEventList.Count = 2\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] entering: ClearAllTrigeredEvent()\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] entering: GetMonthlyEventCollection()\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] 什么玩意儿\n2023-04-24 04:12:16.4292|INFO|Main|GameData.Utilities.AdaptableLog|select option to next Event: 4c2182d3-1cfb-4fc3-b33f-630322fa370b\n```","lastmodified":"2023-06-15T21:22:44.0774549+02:00","tags":[]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7-Mod-%E5%88%B6%E4%BD%9C%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0":{"title":"太吾绘卷 Mod 制作分析笔记","content":"\n#### 主动传剑制作中\n\nSetLegacyPassingState 的变化\n```\n2023-04-24 12:00:50.0793|INFO|Main|GameData.Utilities.AdaptableLog|select option to next Event: 52b116a3-0248-4bbe-9d94-06b2029347be\n2023-04-24 12:00:53.3029|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] SetLegacyPassingState:3 // PassingLegacy 进入遗惠界面\n2023-04-24 12:00:53.3029|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] 太吾ID: 5098\n2023-04-24 12:01:06.5556|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] SetLegacyPassingState:1 // ChoosingHeir 在同道中选择传剑的\n2023-04-24 12:01:06.5556|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] 太吾ID: 5098\nMainStoryLine progress notified:from 16 to 16\n2023-04-24 12:01:21.5085|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] SetLegacyPassingState:4 // DisplayEvent\n2023-04-24 12:01:21.5085|INFO|Main|GameData.Utilities.AdaptableLog|[=EviTest=] 太吾ID: 5098\n太吾ID：5100    // 所以最后点击传剑才变化\n```\n\n\nActionName Listener 的 Trigger 代码形如\n```C#\nDomainManager.TaiwuEvent.TriggerListener(\"SelectSuccessorComplete\", value: true);\n```\n\n##### 逻辑链\u0026Guid\n```\ntrigger传剑入口: 24b\nif(入魔\u0026\u0026有同道): 0fd \n{\n    StartPassingLegacy \n    {\n        state=3\n    }\n    listen(PassingLegacyComplete)\n    \n    f7d \n    {\n        SelectSuccessor\n        listen(SelectSuccessorComplete)\n    }\n    \n    结束传剑对话 1a5\n    \n    结束传剑立场对话 b7b { FinishPassingLegacy }\n}\n```\n\n这两个都是 GameBridge 的 call method 调用, 应该在前端\n```\nConfirmChosenSuccessor {\n    state=4\n    Trigger(SelectSuccessorComplete)\n}\nCompletePassingLegacy{\n    Trigger(PassingLegacyComplete)\n}\n```\n\n总之, 无损传剑的核心是改 ConfirmChosenSuccessor 里的 TransferTaiwuData, 可喜可贺\n\n\n","lastmodified":"2023-06-15T21:22:13.1714143+02:00","tags":[]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7Mod-%E8%87%AA%E7%94%A8%E6%9B%B4%E6%96%B0%E6%94%B9%E5%8A%A8%E6%A3%80%E6%9F%A5%E5%99%A8-readme":{"title":"太吾绘卷Mod 自用更新改动检查器 readme","content":"\n#### 0.前言\n一个modder可能开发过多个mod，每个mod又可能patch了多个地方。然而茄子一更新，原先patch的地方可能就变了，从而引起mod工作不正常甚至红字。Modder手上的mod越多、越大，每次更新后的红字可能就越多，就需要耗费更多时间去排查、修复。尤其是测试版更新频繁，可能这边焦头烂额地才修到一半，那边又更新了...久而久之可能会演变成“开发一时爽，维护火葬场”的尴尬局面......\n假如能在版本更新后快速找出打过patch的地方哪些是改动过的，哪些是没有改动过的，似乎就能节省不少时间和精力。\n于是就写了这个小工具......\n\n#### 1.使用方法\n使用本工具的之前最好卸载所有其它Mod以确保结果的准确性。\n\n首先确定工作目录(默认为太吾文件夹`\\Mod\\Checker\\`)，在下面创建2个文件`watchlist_Frontend.txt`和`watchlist_Backend.txt`，按照格式填写查询条目(_不能有空白行, 不能有空格_)。\n\n查Assembly-CSharp.dll里的方法用watchlist_Frontend.txt；查GameData.dll里或者EventLib里的方法用watchlist_Backend.txt。\n\n**第一次使用**时模式需选择提取代码，然后重启游戏。成功patch上的话会在records文件夹内输出提取到的结果。\n**待本体更新后**需要检查所监视的方法是否有改动时，需要把之前得到的结果转移到records_old文件夹内，然后选择对比模式或者对比并且提取，并重启。一切顺利的话会在工作文件夹内生成检查报告。\n(检查结果只显示是否有改动，具体改了什么可以用UltraCompare之类的工具查看。)\n\n#### 2.格式\n监视列表中的条目具有形如\n```\n\u003c方法名,类或结构体程序集限定名,\u003c泛型参数0类型,泛型参数1类型,...\u003e,\u003c参数0类型,参数1类型,...\u003e,返回值类型,方法类别\u003e\n```\n(不带最外面的引号，\"...\"表示省略，下同)的样子，\n其中方法名就是方法的名字，不带任何参数和命名空间的那种。\n\n[[permanent/太吾绘卷Mod 自用更新改动检查器 readme#类或结构体程序集限定名|类或结构体程序集限定名]]\n\n[[permanent/太吾绘卷Mod 自用更新改动检查器 readme#泛型参数、参数和返回值整项|泛型参数、参数和返回值整项]]\n\n[[permanent/太吾绘卷Mod 自用更新改动检查器 readme#方法类别|方法类别]]\n\n更多关于类型和程序集限定名的信息可参阅微软的官方文档或相关书籍......\n\n###### 例1\n例如假设 程序集MyAsm中有\n```C#\nnamespace MyNameSpace\n{\npublic class MyClass1\u003cT\u003e\n    {\n        public class MyClass2\u003cU,V\u003e\n        {\n            public class MyClass3\n            {\n                ......\n                unsafe private void MyMethod\u003cW,X\u003e(ref MyClass2\u003cT,int\u003e[] x, U y,float* z,Func\u003cbyte,short\u003e f)\n                {\n                    ......\n                }\n            }\n        }\n    }\n}\n```\n\n于是上例中要查询到MyMethod的信息，可使用\n```\n\u003cMyMethod,[MyNameSpace.MyClass1`1+MyClass2`2+MyClass3[,,],MyAsm],\u003cW,X\u003e,\u003cMyNameSpace.MyClass1`1+MyClass2`2[T,T,System.Int32][]\u0026,U,System.Single*,System.Func`2[System.Byte,System.Int16]\u003e,System.Void,M\u003e\n```\n\n在没有重载的情况下也可以写成\n```\n\u003cMyMethod,[MyNameSpace.MyClass1`1+MyClass2`2+MyClass3[,,],MyAsm],null,null,null,M\u003e\n```\n(当然由于目前Harmony无法patch含自由泛型变元的方法，所以查到了也不能成功patch，此例仅作说明用)\n再例如要查询GameData.dll中命名空间\n\n###### 例2 构造\nGameData.Domains.Character.Ai中的类AiHelper中的类NpcCombat的构造函数（0参数），可以用\n```\n\u003c.cctor,[GameData.Domains.Character.Ai.AiHelper+NpcCombat,GameData],null,\u003c\u003e,null,C\u003e\n```\n\n##### 类或结构体程序集限定名\n- **类或结构体程序集限定名**需要带上命名空间，有时还要写出程序集并用方括弧括起来\n- 套娃类各层之间用加号连接；泛型类需要加上==\\`n==，n为泛型变元个数；泛型类或者外层有泛型类的套娃类\n- 类名后面要加上\\[, ,...,]，逗号数量为前面各泛型类的泛型变元数之和减一，而泛型变元须不写留空。。。。\n\n则MyClass3的程序集限定名为\n```\n[MyNameSpace.MyClass1`1+MyClass2`2+MyClass3[,,],MyAsm]\n```\n\n##### 泛型参数、参数和返回值整项\n泛型参数、参数和返回值的类型只需要写全名，不需要带程序集(因为似乎含自由泛型变元的泛型类型没有程序集限定名)，但是泛型变元需要写出来。\n\n例如参数`(ref MyClass2\u003cT,int\u003e[])`的类型就是```\n```\nMyNameSpace.MyClass1`1+MyClass2`2[T,T,System.Int32][]\u0026\n```\n\n泛型参数、参数和返回值整项可以不填或写\"null\"，此时查询时会忽略此项，但在有重载的情况下可能会查出多个结果报红字。\n在查询构造函数的时候泛型参数和返回值两项都要写\"null\"，方法名也可以不填。\n\n##### 方法类别\n方法类别\"M\"表示方法,\"C\"表示构造函数。\n","lastmodified":"2023-06-15T21:22:54.8174328+02:00","tags":[]},"/permanent/%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7Mod-RPC%E5%89%8D%E5%90%8E%E7%AB%AF%E9%80%9A%E4%BF%A1-readme":{"title":"太吾绘卷Mod RPC前后端通信 readme","content":"\n```\nE:\\SteamLibrary\\steamapps\\workshop\\content\\838350\\2879349207\n```\n\n# TWPRC  \n太吾RPC框架(其实应该叫IPC, 进程间调用( ╯□╰ ))\n\n### 功能介绍\n可以以同步方式调用后端的函数, 就好像在调用本地函数\n\n\n### 特性介绍\n1. 易用 接口简单 如: `int result3 = (int)client.CallMethod(ClassTpyeName, \"TestMethod\", new List\u003cint\u003e { 4, 5, 6 });`\n2. 同步调用, 方便debug\n3. 高性能, 通信消耗几乎没有, 不额外占用系统资源\n4. 解决目前mod加载依赖问题, 不需要框架优先加载(好吧不需要了)\n5. 支持多线程(应该)\n\n\n## 使用方法\n前端的依赖项添加TWRPC.dll, 在合适的实际调用TWRPCClient.CreateStream\n(strname)方法, 随后就可以通过该实例调用远端函数  \n\n详情可以看示例mod  \n(其实调用远端方法并不需要name,加入该值是为了方便debug，但现在没有相关函数)\n\n## 技术白皮书\n1. 通信方式  \n    使用基于内存映射的无锁RingBuffer结构进行通信, 性能大概为1GB/s, 来回时延0.005ms/次. 性能大概是socket的100倍, 管道的10倍. 通信几乎只消耗两三个系统调用, 这也是使用同步调用的底气.\n\n\n2. 无额外性能消耗, 不额外占系统资源  \n    采用单连接多路复用的方式,前后端各有一个读线程和写线程, 皆使用阻塞读写设计, 在无通信的时候不占用系统资源.\n\n \n3. 依赖问题解决(好了现在不用了)  \n    使用基类对外提供方法, 使用反射创建实现类, 通过虚函数提供服务\n    \n4. 序列化  \n    使用Protobuf-net进行序列化, 可以方便添加自定义的序列化类, 同时也支持游戏内数据类型的序列化(未测试)\n\n5. 前后端通信过程\n    \n    1. 首先, 在调用函数的时候, 会收集一个方法所需要的所有参数, 包括方法所属的类信息, 方法名, 参数类型信息, 参数信息.\n    2. 将收集到的这些信息序列化成二进制流, 发送到后端, 后代将二进制流反序列化这些参数, 调用方法, 返回返回值\n\n\n6. Type是如何匹配的\n\n    前端的Type和后端的Type分属不同的Assembly, 他们是怎么匹配上的呢? Type由三个参数唯一指定, NameSpace, TypeName, AssemblyName。  \n\n    在得到这个唯一标识符后，框架会使用Type.GetType(typename)方法来获取类型。 \n\n    对于系统类型, 只需要NameSpace和TypeName即可. 前后端即是根据这个参数来匹配类型。  \n\n    在需要传递自定义数据类型数据时，推荐的做法是将自定义类型放到一个单独的Assembly中，前后端分别引用这个Assembly，这样无需额外处理就能识别到这类型。  \n\n    对于游戏内部使用的类型，他们分属不同的Assembly，本来匹配是会失败的，框架对此做了额外的处理，匹配失败时，会到其特定的Assembly中查找型。 因而能够匹配上。  \n  \n\n\n---\n99. 目前Windows only  主要是因为.net 没有提供好用的进程间同步api, 而底层的RingBuffer又需要同步机制。恰巧我又很少用Linux、mac，所以就先咕咕了。\n\n---\n### Todo\n1. 目前仅支持静态方法，因为还没想好怎么实例化类。目前想法是提供调用全局对象的实例方法接口\n2. 提供一些消息通知机制和注册接口以简化类名\n3. 支持泛型方法","lastmodified":"2023-06-15T21:22:58.601995+02:00","tags":[]},"/permanent/%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4%E7%9A%84%E5%B1%80%E9%99%90":{"title":"头脑风暴的局限","content":"\n我们通常不希望放弃大脑里出现的第一个想法, 即使它不那么好.\n可能的原理不是很清楚, 感觉类似拍卖那样的, 大脑里有一种先行占有的感觉\n因此很多人一起头脑风暴, 也可能导致好点子更少.\n\n\n![[0f89ae7f7a68d23acee6217076be433.jpg]]\n","lastmodified":"2023-06-15T21:24:31.1681665+02:00","tags":["心理学"]},"/permanent/%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BA%92%E8%BF%9E":{"title":"子系统的互连","content":"\n三种线: 数据总线, 地址总线, 控制总线\n\n#### CPU 与存储器的连接\n\n##### 数据总线\nCPU 与存储器的数据交流是以*字长*为单位的\n\n每一条数据总线传输一位数据\n\u003e 64 位的电脑就有 64 条数据总线\n\n##### 地址总线\n内存空间的地址总共需要 n 位表示, 就有 n 条地址总线\n\n##### 控制总线\n指令集有 $2^m$ 种指令, 就需要 m 条控制总线\n\n#### I/O 与 计算机的连接\n![[Pasted image 20230316134120.png|L|500]]\n\nI/O 设备和内存的本质不同, 需要中介来处理其中的差异, 因此操作速度会慢得多\n\n计算机与外部设备的接口(控制器)有:\n- SCSI 小型计算机系统接口\n- 火线(IEEE 1394)\n- USB\n- HDMI\n\n读取 I/O 设备的存储的两种方式\n- I/O 独立寻址: 即有专门的指令来处理 I/O 设备的存储器(区别于计算机内存的指令)\n- I/O 存储器映射寻址: 将 I/O 设备的存储映射到存中, 和存储器使用同样的读写指令","lastmodified":"2023-06-15T21:54:07.905347+02:00","tags":["计组"]},"/permanent/%E5%AD%98%E5%82%A8%E5%99%A8":{"title":"存储器","content":"\n#### 地址空间\n- ![[Pasted image 20230316121306.png]]\n- 每一个内存地址有 地址 和 内容\n- **字长**, 即内容的位数就是我们常说的 32位/64位, 即字长分别是4字节/8字节\n- 地址的位数 和 地址空间的大小 相关, 以无符号整数保存\n\n#### 计算机存储器层级\n- 寄存器\n    - CPU 里那个\n    - 最快, 最小\n- 缓存\n- 主存\n\n#### 存储器的类型\n[[permanent/存储器的类型|存储器的类型]]\n\n","lastmodified":"2023-06-15T13:14:25.2754314+02:00","tags":["计组"]},"/permanent/%E5%AD%98%E5%82%A8%E5%99%A8%E7%9A%84%E7%B1%BB%E5%9E%8B":{"title":"存储器的类型","content":"\n#### RAM\n- Random Access Memories 随机存取存储器\n- 可以根据地址来读写任意地址的内容\n- 易失性, 断电丢失\n\n##### SRAM\n- Static RAM\n- 使用触发器门电路\n- 快, 昂贵\n\n##### DRAM\n- Dynamic RAM\n- 使用电容存储\n- 因为电容会随时间放电, 所以需要周期性刷新\n- 比 SRAM 慢一点, 比较便宜\n\n#### ROM\n- Read-Only Memories 只读存储器\n- 通常由厂家写好, 用户只读, 比如 BIOS\n- 非易失性, 即使断电也不会丢失数据\n\n##### PROM\n- Programmable ROM\n\n##### EPROM\n- Erasable and Programmable ROM\n\n##### EEPROM\n- Electronically Erasable and Programmable ROM\n\n#### 磁介质存储设备\n- [[permanent/磁介质存储设备|磁介质存储设备]]\n- 如磁盘, 磁带\n\n#### 光介质存储设备\n- 如 CD-ROM, DVD","lastmodified":"2023-06-15T13:12:36.2647506+02:00","tags":["计组"]},"/permanent/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95":{"title":"学习方法","content":"\n[[project/断墨寻径|断墨寻径]]\n\n## Tips\n\n[[permanent/学会规则到成为专家|学会规则到成为专家]]","lastmodified":"2023-06-15T21:48:06.4191447+02:00","tags":[]},"/permanent/%E5%AD%A6%E4%BC%9A%E8%A7%84%E5%88%99%E5%88%B0%E6%88%90%E4%B8%BA%E4%B8%93%E5%AE%B6":{"title":"学会规则到成为专家","content":"\n正确运用规则能使人胜任一件事, 但仅仅会正确运用规则是不足以成为专家的, 还需要经验的积累.\n\n![[attachments/3c28a36d3ebb797c681c1f42f04d5a4.jpg]]","lastmodified":"2023-06-15T21:46:54.2545077+02:00","tags":[]},"/permanent/%E5%AE%9A%E5%86%A0%E8%AF%8D%E5%8F%98%E6%A0%BC":{"title":"定冠词变格","content":"\n\n| Case | Masc | Fem | Neut | Plural |\n|------|------|-----|------|--------|\n| Nom  | der  | die | das  | die    |\n| Gen  | des  | der | des  | der    |\n| Dat  | dem  | der | dem  | den    |\n| Acc  | den  | die | das  | die    |\n","lastmodified":"2023-06-14T23:44:25.2871232+02:00","tags":["de"]},"/permanent/%E5%AE%B5%E5%A4%9C97-%E5%A4%AA%E5%90%BE%E7%BB%98%E5%8D%B7-Mod-%E5%88%B6%E4%BD%9C":{"title":"宵夜97 - 太吾绘卷 Mod 制作","content":"\n[视频链接](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n\u003e https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5\n\n[灰机wiki - 太吾 Mod 制作](https://taiwu.huijiwiki.com/wiki/MOD%E5%88%B6%E4%BD%9C)\n\n### 主要相关\nmanaged-AC, managed-TaiWuModLib, backend-GameData\n\n### Mod 的文件夹结构\nmod名文件夹\n\t- Config.lua\n\t- Settings.lua\n\t- Plugins\n\t\t- xxx.dll\n\t\n### Config.lua\nConfig.lua,  Settings.lua 怎么写?\n- 把 AC 拖进 dnSpy\n- 搜索 ModManager\n- 找到 ReadLocalMode 方法, 看需要什么, 类型也可以看到\n```lua\n--[[Config.lua]]\nreturn {\n\tTitle = \"HelloWorld\",\n\tVersion = \"0.0.1\",\n\tBackendPlugins = {\"TaiWuHelloworld.dll\"} -- 后端名\n\t-- ...\n}\n```\n\n![[attachments/宵夜97 - 太吾绘卷 Mod 制作#更正1 Mod管理界面不打钩的原因]]\n\n\n### (前端)MOD 主体\nVS 新项目 - 类库(.NET Framework), C# WIN 库\n框架版本4.8\n\n\u003e 注意 .NET 版本: dnSpy 打开 \n\u003e - 前端 TaiwuModdingLib\n\u003e - 后端 GameData\n\u003e 能找到\n\n\n添加引用-AC,TaiWuModdingLib, UECore, UE(用到什么选什么)\n\n全选引用, 复制本地-否\n\n类继承 TaiWuRemakePlugin\n实现抽象类(销毁和初始化)\n\\[PluginConfig]\n\n基础的 HelloWorld\n[16:59](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1019.516437)\n\n生成 - 打开路径 bin - Debug, 把 dll 复制到游戏mod文件夹下的Plugins\n右键项目名 - 属性, 可以设置生成目录\n\n游戏实时日志(Debug.Log)在 AppData\\\\LocalLow\\\\username\\\\Taiwu\n\n### Mod 的详细设置\nConfig.lua 的 DefaultSettings 负责界面\n还是根据反编译的 ReadLocalMod 方法决定要写什么\n当然还要逻辑代码\n\n##### 怎么写 Config.lua\n宵夜的测试mod写法\n[22:49](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1369.194854)\n![[attachments/Pasted image 20230412143836.png]]\n\n修改后的 HelloWorld Config.lua\n[25:15](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1515.659755)\n[34:15](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=2055.133696)\n\n##### 怎么读取 Config.lua 的数据\n参考 TheChosenElite(TopElite) Mod\n![[attachments/Pasted image 20230412185810.png]]\n\n\n\n### Patch 方法\n引用 0Hamory\n\n什么时候用 TaiwuRemakeHarmonyPlugins?\n- \n\n(不推荐, 写起来麻烦) 例子\n[38:09](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=2289.942044)\n\n##### 后置 PostFix\n\n(推荐) 写一个常规的 继承 RemakePlugin\n\n先\\[PluginConfig]\n\nHarmony harmony;\n\n初始化和销毁[39:58](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=2398.315657)\n\n![[attachments/Pasted image 20230412124259.png]]\n\n主体框架[42:02](https://www.bilibili.com/video/BV1Fd4y1z7jV/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=2522.324187)\n\n![[attachments/Pasted image 20230412124216.png]]\n\n更多说明: [[permanent/HarmonyPatch]]\n\n### 上传创意工坊\n需要在Config.lua里加一行Source = 1，才可以上传到创意工坊哦。上传创意工坊的方法是，改好配置文件后，在mod管理界面点左下角的上传mod，里面填上你mod文件夹的绝对路径（也就是从资源管理器那里直接复制的路径），然后填好描述点上传就可以了。\n\n23.04.12: Source = 1 在 模组管理 里看不到, 改成0又看到了\n\n#### 更正1 Mod管理界面不打钩的原因\n对部分内容进行一下更正！并不是显示bug导致mod管理内的mod不打勾。  \n在写Config.lua时，Version不要写纯数字，可以写字符串或者不写。  \n在写数组时，按照\\[x] = \"\"这样的方式写，比如  \n```C#\nFrontendPlugins = {  \n   [1] = \"TaiWuCreateAvatarOptimization.dll\"  \n}\n```\n\n\n\n### 后端 Mod\n[视频链接](https://www.bilibili.com/video/BV1Pg411e7jb/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n\u003e https://www.bilibili.com/video/BV1Pg411e7jb/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5\n\n创建项目的时候用 普通类库, 不要 .NET framework, 框架选5.0\n\n然后是添加引用, 只要 ModdingLib 和 0Harmony, Backend 文件夹的 `GameData`\n\nusing ModdingLib, GameData.Uilities;\n\n其中 ModdingLib 是前端部分, GameData 是后端部分\n\n后端不要用 Debug.Log, 用 AdaptableLog.Info()\nlog 在游戏文件夹 Logs, Gamedata.log 可查看\n\n#### 例子 功法书锁定最大耐久\n开始写内容代码了\n[14:14](https://www.bilibili.com/video/BV1Pg411e7jb/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=854.5231)\n\n参数, 要修改的参数要传 ref\n[15:23](https://www.bilibili.com/video/BV1Pg411e7jb/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=923.895036)\n\n写好了\n[16:55](https://www.bilibili.com/video/BV1Pg411e7jb/?spm_id_from=333.999.0.0\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1015.350943)\n\n![[attachments/Pasted image 20221023232318.png]]\n\n### Log 位置\n=前=\n```text\nC:\\Users\\Nk\\AppData\\LocalLow\\Conchship\\The Scroll of Taiwu\\output_log.txt\n```\n\n=后=\n```text\nlog 在游戏文件夹 Logs, Gamedata.log 可查看\n```","lastmodified":"2023-06-16T19:35:14.3784215+02:00","tags":["Modder","逆向"]},"/permanent/%E5%AF%86%E7%A0%81%E5%AD%A6":{"title":"密码学","content":"\n#### 密码学 Cryptology\n- Cryptology = Cryptography + Cryptoanalyse\n    - [[permanent/Cryptography|Cryptography]] 加密解密技术\n    - [[permanent/Cryptoanalyse|Cryptoanalyse]] 没有密钥进行解密的技术\n\n#### 工具站\n\n##### spammimic\n- https://www.spammimic.com/\n- 把信息编码得像垃圾邮件, 这样即使被人看到, 也不知道是加密了的\n\n##### cryptool\n- 已知密码算法的情况下可用, 丰富的算法\n- https://www.cryptool.org/en/\n\n##### steghide\n- Kali Linux 下的图片隐写工具\n- 顺便说一下 现在 kali 的默认是 kali/kali","lastmodified":"2023-06-16T19:21:02.5769821+02:00","tags":["安全"]},"/permanent/%E5%AF%B9%E5%B7%B2%E6%9C%89%E7%9A%84%E6%83%B3%E6%B3%95%E8%B6%8A%E7%86%9F%E6%82%89-%E5%B0%B1%E5%AF%B9%E6%96%B0%E6%83%B3%E6%B3%95%E8%B6%8A%E5%BC%80%E6%94%BE":{"title":"对已有的想法越熟悉, 就对新想法越开放","content":"\n我们对已有的想法越熟悉, 就越容易接受新的想法.\n这一点的前提条件我觉得是得对这个想法熟悉到 一定程度, 两者才能正相关. 因为越熟悉就越开放的原因应该是熟悉到足够了解已有的想法的缺陷.\n\n![[attachments/96022b009828db7aad88384da380c03.jpg]]","lastmodified":"2023-06-15T17:04:23.2599966+02:00","tags":["心理学"]},"/permanent/%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81":{"title":"对称密码","content":"\n#### 对称密码\n- 通信双方各持有一份密码本, 加密和解密密钥是相同的\n- DES, AES, IDEA, RC4, Blowfish, Serpent, Twofish\n\n#### 对称密码技术\n- Substitution\n- Permutation\n- One-Time-Pad 一次性密码本\n\n#### 对称密码种类\n- 恺撒密码/ROT13/...\n- One-Time-Pad\n- [[permanent/DES|DES]]\n- [[permanent/AES|AES]]","lastmodified":"2023-06-15T17:14:19.311574+02:00","tags":["安全","密码学"]},"/permanent/%E5%B0%8F%E9%B9%A4%E9%9F%B3%E5%BD%A2%E5%92%8C-Obsidian-vim-%E7%9A%84%E9%80%82%E6%80%A7":{"title":"小鹤音形和 Obsidian vim 的适性","content":"\nFly_py 在锁定大写切换回小写的时候 vim 会失效， 而小狼毫不会\n\n以及在 vim Normal 模式下, 小鹤中文状态, 所有按键会变成双击","lastmodified":"2023-06-15T21:44:02.5453567+02:00","tags":["工具使用"]},"/permanent/%E5%B9%B3%E5%9D%87%E6%8C%87%E6%A0%87":{"title":"平均指标","content":"\n- 中位数\n\n\n##### 算术平均数\n- mean\n- 对一个序列 $a_1, a_2, \\  ..., \\  a_n$, 其 mean 为\n$$ mean = \\frac{\\sum_{i=1}^n{a_i} }{n} $$\n\n##### 调和平均数\n- harmonic mean\n- 也称为倒数平均数, 是算术平均数的变形\n- 对一个序列 $a_1, a_2, \\  ..., \\  a_n$, 其 调和平均数 为\n$$ H = \\frac{n}{\\sum^{n}_{i=1} \\frac{1}{a_i}}$$","lastmodified":"2023-06-15T16:30:17.7860074+02:00","tags":[]},"/permanent/%E5%BD%A2%E5%AE%B9%E8%AF%8D%E5%BC%BA%E5%8F%98%E5%8C%96%E4%B8%8E%E5%BC%B1%E5%8F%98%E5%8C%96-Deklination":{"title":"形容词强变化与弱变化 Deklination","content":"\n[[project/lmu - Syntax of natural language(Germany)|lmu - Syntax of natural language(Germany)]] 里说的强弱 Deklination, 强是指零冠词和不定冠词, 弱是指定冠词\n\n其实形容词有个规律, 如果冠词里没有对 Genus 的指示, 那么形容词就会负责接管(Genus 是啥? Maskulin/Femilin/Neutrum)","lastmodified":"2023-06-16T19:48:45.5710785+02:00","tags":["de"]},"/permanent/%E5%BD%A9%E8%99%B9%E8%A1%A8":{"title":"彩虹表","content":"\nrainbow table\n枚举常用密码, 将加密后的散列值做成索引表, 就能根据数据库中加密后的密码反推出原始密码. 这张表就叫做彩虹表","lastmodified":"2023-06-14T23:43:29.428167+02:00","tags":["安全"]},"/permanent/%E5%BF%83%E6%B5%81":{"title":"心流","content":"\nCsikszentmihalyi, 1975\n\n![[attachments/f6c1d9f946ea7a4629af102af8ffe09.jpg]]","lastmodified":"2023-06-15T21:44:14.8858683+02:00","tags":["心理学"]},"/permanent/%E5%BF%83%E7%90%86%E5%AD%A6%E6%A6%82%E5%BF%B5":{"title":"心理学概念","content":"\n[[permanent/曝光效应|曝光效应]]\n\n[[permanent/心流|心流]]\n","lastmodified":"2023-06-15T21:44:19.1556856+02:00","tags":["心理学"]},"/permanent/%E6%80%9D%E8%80%83%E6%96%B9%E5%BC%8F":{"title":"思考方式","content":"\n[[permanent/想象的到的情况更容易被高估发生的可能性|想象的到的情况更容易被高估发生的可能性]]\n\n[[permanent/对已有的想法越熟悉, 就对新想法越开放|对已有的想法越熟悉, 就对新想法越开放]]\n\n[[permanent/头脑风暴的局限|头脑风暴的局限]]","lastmodified":"2023-06-15T21:40:21.0210282+02:00","tags":[]},"/permanent/%E6%83%B3%E8%B1%A1%E7%9A%84%E5%88%B0%E7%9A%84%E6%83%85%E5%86%B5%E6%9B%B4%E5%AE%B9%E6%98%93%E8%A2%AB%E9%AB%98%E4%BC%B0%E5%8F%91%E7%94%9F%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7":{"title":"想象的到的情况更容易被高估发生的可能性","content":"\n如果你能为某种可能发生的情况找到具体而合理的解释, 那么你通常会高估这种情况发生的可能性.\n\n这可能是因为人更容易注意到自己熟悉的东西. \n\n![[attachments/d53d2d6ec48956082d06d49b48edce6.jpg]]","lastmodified":"2023-06-15T21:39:00.8581751+02:00","tags":["心理学"]},"/permanent/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84Hugo%E4%B8%BB%E9%A2%98":{"title":"打造自己的Hugo主题","content":"\n## 一个最低限度的 Hugo 主题\n\n参考 [Mike Dane](https://www.mikedane.com/) 的 [ga-hugo-theme](https://github.com/giraffeacademy/ga-hugo-theme). 这里展示了一个拥有基本功能的主题。Mike Dane 的 Hugo 系列教程也是极好的。\n\n写作时使用 Hugo 0.89 版本。\n\n在你的 Hugo 应用输入命令以创建一个新主题:\n\u003e hugo new theme THEMENAME\n\n这时会在 themes 文件夹下创建一个新文件夹，同时应用根目录出现一个 `config.toml`, 在其中加上：\n\u003e theme = 'THEMENAME'\n\n主题已经可以使用了，但目前还是一片空白，因为主题文件里什么都没有。  \n\n\n## header, footer 和 baseof\n\n其实也不是完全空白。`/layouts/_default/baseof.html` 是有内容的：\n\n`baseof.html` 是 Hugo 页面的基础，所有页面默认按照这个模板来渲染。官方教程中提供了一个简单的[示例](https://gohugo.io/templates/base/#define-the-base-template).\n\n默认的 baseof.html :\n\n```go\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n{{- partial \"head.html\" . -}}\n\u003cbody\u003e\n    {{- partial \"header.html\" . -}}\n    \u003cdiv id=\"content\"\u003e\n        {{- block \"main\" . }}{{- end }}\n    \u003c/div\u003e\n    {{- partial \"footer.html\" . -}}\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nHugo 使用 Go 模板语法。`{{}}` 内的内容就是 Go 语言。\n\n`partial`  是一个内置函数，`{{partial \"head.html\" . }}`（ `.` 不能少）意思就是将 `/layouts/partials/.head.html` 的内容复制到该处。\n\n` - ` 的作用是修饰掉 {{}} 外面的空格符，换行符等。\n\n`block` 部分以后再说。为了能直接看到效果，我们先暂时把\n\u003e{{- block \"main\" . }}{{- end }}\n\n这句删掉。\n\n\u003cbr\u003e\n\n先修改 `/layouts/partials` 下的 `head.html`, `header.html`, `footer.html` . \n\n`head.html` 网页的元信息\n```go\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003ctitle\u003e\n        {{ .Title}}\n    \u003c/title\u003e\n\u003c/head\u003e\n```\n\n\u003cbr\u003e\n\n`header.html` 注意 header 不是拿来放文章标题的，标题在main里。header 主要放网站标题，导航之类的。这里随便写写。\n```go\n\u003cdiv style=\"\n    background-color: aliceblue;\n    padding: 5px;\n    font-size: 24px;\n    font-family: 'Kristen ITC'; width: 100%;\"\u003e\n    \u003ch1\u003eTONGLUOSHAO\u003c/h1\u003e\n\u003c/div\u003e\n```\n\n`footer.html` 通常写版权和备案\n```go\n\u003cdiv style=\"height:35px;\"\u003e\u003c/div\u003e\n\u003cdiv style=\"\n    color: #fdfdfd; \n    height:35px; \n    background-color:#999; \n    bottom:0px; \n    text-align:center; \n    width:100%\"\u003e\n    \u003cp style=\"margin:10px; \"\u003e© 2022 evixenon\u003cbr\u003e\u0026nbsp|\u0026nbsp;\u0026nbsp;粤 ICP 备2022002978号-1;\u003c/p\u003e\n\u003c/div\u003e\n```\n\nPS：这时候如果 /layout 文件夹里有空的 index.html 的话，打开 1313 会是一片空白。因为 index.html 是默认的主页，对于主页来说，它的优先级比 baseof 模板要高。我们可以暂时删掉 index.html 这个文件，或者把 baseof 的内容复制一份过去。\n\n写完之后就是\n主题01.JPG\n嗯，没什么问题，只差内容把页面撑开了。\n\n### 将脚注信息设置成自定义属性\n\n每个网站的作者和备案号各不相同，所以当然要做成可修改的啦。在`config.toml`里加一些属性：\n```toml\n[params]\n    author = \"\"\n    icp = \"\"\n```\n这样使用这个主题的人就可以自由修改。同时，我们再改一下`footer.html`:\n```go\n\u003cdiv style=\"height:35px;\"\u003e\u003c/div\u003e\n\u003cdiv style=\"\n    color: #fdfdfd; \n    height:35px; \n    background-color:#999; \n    bottom:0px; \n    text-align:center; \n    width:100%\"\u003e\n    \u003cp style=\"margin:10px; \"\u003e© {{.Site.Title}} 2022\n\n    {{/* 作者信息 */}}\n    {{- with .Site.Params.author -}}\n        \u003cbr\u003e{{safeHTML .}}\n    {{- end -}}\n\n    {{/* ICP 备案 */}}\n    {{- with .Site.Params.icp -}}\n        \u003cbr\u003e\u0026nbsp;|\u0026nbsp;\u0026nbsp;{{ . | safeHTML}}\n    {{- end -}}\n    \u003c/p\u003e\n\u003c/div\u003e\n```\n\n- `with...end`函数可以理解为，如果这个参数存在，就执行中间的代码，如果没有就忽略这段代码。参数在上面的第一个 with...end 块中是 `.Site.Params.author`。\n\n- `.` 在 Hugo 模板语法中是上下文(context)的意思。`.`是个一当前变量\n\n- `|` 是管道符，表示将前一部分的内容当作后一部分的参数。这和 bash, shell 中管道符是相似的。上面的代码中，`{{safeHTML .}}` 和 `{{ . | safeHTML}}` 在同一语境中的含义是一样的。如果 `|` 前一部分是函数，那就表示将前一个函数的结果当成后一个函数的参数的。\n\n- `safeHTML` 是一个函数，经过它处理后的内容不会对 html 内容产生影响。举例来说，safeHTML 中如果放了 html 标签，就不会被转义出来。\n\n上面的解释记不住看不懂也不要紧，见得多就会熟悉。我在写主题的时候，通常都是先观摩别人的写法，辅以 Hugo 文档，就基本能写出自己想要的效果。重要的是想用的时候能找到就行了。\n\n以上内容都可以在 Hugo 文档的函数和变量部分找到准确的解释和部分示例。顺便给个文档直通车：[`with`](https://gohugo.io/functions/with/), [`.`](https://gohugo.io/templates/introduction/#variables) , [`|`](https://gohugo.io/templates/introduction/#pipes) , [`safeHTML`](https://gohugo.io/functions/safehtml/).\n\n\u003cbr\u003e\n\n## main block, single 模板 和 list 模板\n\n先讲一下前面跳过的 `block`。\n\n回忆一下，baseof.html 的默认内容是这样的：\n```go\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n{{- partial \"head.html\" . -}}\n\n\u003cbody\u003e\n    {{- partial \"header.html\" . -}}\n    \u003cdiv id=\"content\"\u003e\n        {{- block \"main\" . }}{{- end }}\n    \u003c/div\u003e\n    {{- partial \"footer.html\" . -}}\n\u003c/body\u003e\n\n\u003c/html\u003e\n```\n\n其中有一句：\n\u003e{{- block \"main\" . }}{{- end }}\n\n`block` 和 `partial` 类似，作用都是将一段预先定义好的代码复制此位置，但不同的是，partial 复制的是 `/layouts/partials` 中的 html 文件，而 `block` 复制的是一段放在其他模板的代码。具体地说，是 single.html 和 list.html 这两个文件里的代码.\n\n`single.html` 和 `list.html` 是除了 baseof.html 的另两个模板。 baseof 模板是所有页面的默认模板，而 single.html 和 list.html 可以算作细分领域。\n\n`single.html` 负责的是单篇文章的页面，单篇具体文章，而 `list.html` 则通常是一个文章列表，比如某某分类下的所有文章，某某标签下的文章等。\n\n那么就知道了，在 `single.html` 模板下的页面，其 main block 应该放文章的具体内容，我们可以这样写 `single.html`:\n```go\n{{ define \"main\" }}\n\u003ch1\u003e{{ .Title }}\u003c/h1\u003e\n{{ .Content }}\n{{ end }}\n```\n\n前面说过 `.` 在 Hugo 模板中是上下文的意思。在一个 single 页面里，`.Title` 指的是这篇文章的标题( list 页面会是站点标题，你可以试一下)。而 single 页面的 `.Content` 就是这篇文章的具体内容啦。这样一个单篇文章页面的模板就做好了，当然，是最简单版本。  \n\n而 `list.html` 就要复杂一点了，一个 category 分类页面需要展示所有该分类的文章，一个 tag 分类需要展示该 tag 下的所有文章。我们可以这样写 `list.html` ：\n\n```go\n{{ define \"main\" }}\n{{ .Content }}\n    {{range .Pages}}\n    \u003cdiv style=\"border: 2px solid aliceblue; width: 98%; margin: auto; margin-top: 10px;\"\u003e\n        \u003ch2\u003e\u003ca href=\"{{.Permalink}}\"\u003e{{.Title}}\u003c/a\u003e\u003c/h2\u003e\n        {{if gt .WordCount 50}}\n            \u003cp\u003e词数：{{.WordCount}}\u003c/p\u003e\n        {{end}}\n        \u003cp\u003e{{.Summary}}\u003c/p\u003e\n    \u003c/div\u003e\n    {{end}}\n{{ end }}\n```\n\n`range` 函数的作用是遍历。`{{range .Pages}}` 一句是遍历当前上下文的所有页面。对一个分类，就是遍历该分类的所有页面。对于每一个遍历对象，都会生成一次 `range...end` 中的内容。也就是说，假设当前是一个分类页面，虽然这段代码看上去只有一个 `div`，但实际上，对分类里了每一篇文章，都会生成一个这样的 `div`. \n\n主页实际上也使用 list 模板，它的 `.Pages` 变量是 Hugo 根目录下 `/content` 文件夹的内容。\n\n在 `range...end` 代码块中，上下文 `.` 的含义就有所改变了。`.Title` 指的是当前文章(在主页中，也可能是文件夹)的标题，`.Summary`则是摘要。\n\n如果是非文章，比如主页的文件夹，没有 `.Title` 或者 `.Summary`, 这两个属性会为空，也不影响。\n\n文章显示出来了，当然还需要点击跳转的功能。上面代码中，标题被做成了一个 `a` 连接，指向的是 `{{.Permalink}}`。 这个变量是一个 Page 的永久链接，这样点击标题就能跳转到文章了。\n\n基本功能做好了，还可以加点花活。\n```go\n{{if gt .WordCount 50}}\n    \u003cp\u003e词数：{{.WordCount}}\u003c/p\u003e\n{{end}}\n```\n这段代码的意思是，如果该文章的词数超过 50 词，就显示词数。 `.WordCount` 是一个 Page 变量，更多这样的变量还可以在 [Page 变量的文档](https://gohugo.io/variables/page/) 中找到。\n\n## CSS, JavaScript 的引入\n\nHugo 主题中的 CSS 不能直接使用，需要将`.css`文件放在主题的`assets`目录下，也就是`[主题名]/assets`，没有就自己新建。\n\n在`head.html`中引入`assets/css/styles.css`：\n\n```go\n{{- with $css := resources.Get \"css/styles.css\" | resources.Minify -}}\n        \u003clink rel=\"stylesheet\" href=\"{{ $css.RelPermalink }}\"\u003e\n{{- end -}}\n``` \n\n如果使用`SASS/SCSS`, 则需要先转换为CSS. Hugo 提供了对应的函数，详参[链接](https://gohugo.io/hugo-pipes/scss-sass/)。\n\n`.js`文件的引入也是类似的。\n\n```go\n{{- with $js := resources.Get \"js/highlight.min.js\" -}}\n    \u003cscript src=\"{{ $js.RelPermalink }}\"\u003e\u003c/script\u003e\n{{- end -}}\n```\n\n至此，一个基础的主题就成型了。后面的文章开始讲一些不一样的功能实现。","lastmodified":"2023-06-14T23:55:02.9844401+02:00","tags":["hugo","个站"]},"/permanent/%E6%8A%84%E5%86%99%E4%BA%8E%E8%AE%B0%E5%BF%86%E6%88%96%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%94%B6%E7%9B%8A%E5%BE%88%E4%BD%8E":{"title":"抄写于记忆或学习的收益很低","content":"\n如果你想要学习或记忆一样东西, 包括一段文字, 一个公式等等, 抄写绝不是一个值得使用的方法. 因为你的目的是记下它或者学会它, 而不是, 抄完它.\n对于学习, 重点是理解, 想要知道自己是否学会一样东西, 最好的办法的看看自己能否详细阐释它.\n对于记忆, 人会更快记住有意义的事物\n\n抄写只能让人有一种「我抄了那么多遍, 这么努力了, 应该有效果吧」的错觉\n\n原理: [[permanent/曝光效应|曝光效应]]","lastmodified":"2023-06-15T12:57:06.6949317+02:00","tags":[]},"/permanent/%E6%8E%A7%E5%88%B6%E6%B5%81%E6%B7%B7%E6%B7%86":{"title":"控制流混淆","content":"\n有些软件可以在打包的时候使用控制流混淆,\n混淆后的代码可读性变得非常差","lastmodified":"2023-06-15T17:55:09.1636508+02:00","tags":["逆向"]},"/permanent/%E6%93%85%E9%95%BF%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86%E7%9A%84%E9%94%99%E8%A7%89":{"title":"擅长多任务处理的错觉","content":"\n\n有人可能认为自己擅长多任务处理, 但心理学家的研究表明, 无论是效率还是质量, 擅长多任务处理的人明显比不上一次只做一件事的对照组.\n\n可能的原理: [[permanent/曝光效应|曝光效应]]\n\n![[attachments/e990a4700100b9e5af4acd835212a27.jpg]]","lastmodified":"2023-06-15T12:56:55.5694346+02:00","tags":[]},"/permanent/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F":{"title":"操作系统","content":"\n[[permanent/WIN11 右键菜单风格恢复|WIN11 右键菜单风格恢复]]\n\n[[permanent/Windows 注册表改键(扫描码映射)|Windows 注册表改键(扫描码映射)]]\n\n[[permanent/ＷIN 开机自启动|ＷIN 开机自启动]]\n\n[[permanent/WIN 清理右键菜单|WIN 清理右键菜单]]\n\n[[permanent/触摸板开关失效事件|触摸板开关失效事件]]\n\n[[permanent/远程计算机或设备将不接受连接|远程计算机或设备将不接受连接]]\n\n---\n[[permanent/Kali Linux 常用服务|Kali Linux 常用服务]]\n\n[[permanent/Kali Linux 网络设置|Kali Linux 网络设置]]\n\n[[permanent/Kali Linux 系统更新|Kali Linux 系统更新]]\n\n---\n[[permanent/Ubuntu]]","lastmodified":"2023-06-16T20:09:59.5593287+02:00","tags":[]},"/permanent/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA":{"title":"操作系统理论","content":"\n[[project/lmu - Betriebsystem|lmu - Betriebsystem]]\n","lastmodified":"2023-06-15T12:54:15.3223339+02:00","tags":[]},"/permanent/%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6":{"title":"数字证书","content":"\n- [[permanent/lmu - IT Security#Identification|Identification]] (PS: 不是 CIA 的 Integrity)\n- OIDC\n- OCSP","lastmodified":"2023-06-16T19:46:58.5705943+02:00","tags":["安全"]},"/permanent/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AF%94%E8%BE%83":{"title":"数据库比较","content":"\n### 常见的关系型数据库\n- MySQL\n- Oracle\n- SQLite\n- PostgreSQL\n### 常见的NOSQL数据库\n1.  键值数据库：Redis、Memcached、Riak\n2.  列族数据库：Bigtable、HBase、Cassandra\n3.  文档数据库：MongoDB、CouchDB、MarkLogic\n4.  图形数据库：Neo4j、InfoGrid","lastmodified":"2023-06-15T21:14:11.6420474+02:00","tags":["数据库"]},"/permanent/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F":{"title":"数据库系统","content":"\n[[permanent/2003 SQL Slammer|2003 SQL Slammer]]\n\n[[permanent/数据系统DBS的九个任务|数据系统DBS的九个任务]]\n\n[[permanent/主存储器技术|主存储器技术]]\n\n[[permanent/SQL|SQL]]语言\n\n### 数据库\n[[permanent/数据库比较|数据库比较]]\n\n[[permanent/MySQL|MySQL]]\n\n[[project/lmu - Database system|lmu - Database system]]","lastmodified":"2023-06-16T20:05:50.0750451+02:00","tags":["数据库"]},"/permanent/%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9FDBS%E7%9A%84%E4%B9%9D%E4%B8%AA%E4%BB%BB%E5%8A%A1":{"title":"数据系统DBS的九个任务","content":"\n- 集成 Integration\n- 操作 Operation\n- 数据字典 Data Dictionary\n- 用户视图 Benutzersichten\n- 一致性监视 Konsistenzüberwachung ^6e8319\n- 访问控制\n- 交易 Transaktionen\n\t- Zusammuenfassung einer Folge von Änderungsoperationen zu einer Einheit, deren Effekt bei Erfolg permanent in DB gespeichert wird\n- 同步\n- 数据安全","lastmodified":"2023-06-15T21:15:14.6475155+02:00","tags":["数据库"]},"/permanent/%E6%97%A5%E8%AF%AD%E8%AF%AD%E6%B3%95":{"title":"日语语法","content":"\n## 语法\n\n### 提示语\n\n##### 名词从属关系 の\n\n\u003e [名]の[名]\n\n##### 也 も\n\n\u003e [名] も\n\n##### 并列关系 と\n\n\u003e [名]　と　[名]\n\n##### へ\n\n表移动方向, 移动先:\n\n\u003e [場所]　へ　[動]\n\n移动元:\n\n\u003e [場所]　から　[動]\n\n##### と 和某人一起的行为\n\n\u003e [人]と　[動]\n\n##### で 表交通工具\n\n\u003e [交通機関]で　[動]\n\n##### は　提示主题\n\n![[attachments/Pasted image 20230605002617.png]]\n\nは 和 が 不同的是\n- が 提示主语\n- は 提示主题, 不一定是主题, 而可以是想强调的句子成分\n\n\n##### 对象语提示词を\n\n\u003e [名]を　[動]\n\n##### 动作的场所用助词で\n\n\u003e [場所]で　[動]\n\n##### 名词或名词　か\n\n\u003e [名]か[名]\n\n\n##### 人物对象用助词に\n\n\u003e [名]に　(会います)\n\n\n##### 事件在某场所发生\n\n不是用 に(见[[#描述存在的人或事物]]) 而是用 で\n\n##### 名や名\n\n表示列举, 但比と多一个 等等, 表示没列举去全部\n\n##### 表示喜好\n\n\u003e [名]は　[名]が　表示喜好的[形]\n\n例如 好き　怖い　嫌い\n\n##### 表示能力\n\n\u003e [名]は　[名]が　表示能力的[动]\n\n例如 分かる　できる　\n\n![[attachments/Pasted image 20230606114229.png]]\n\n### 句型\n\n##### 一般陈述句\n\n\u003e [名]は[名]です\n\n\u003e [名]は[名]です\n\n##### 一般疑问句和回答\n\n\u003e [名]は[名]ですか\n\n\u003e -- はい、そうです。\n\u003e -- いいえ、違います。\n\n##### 描述所在地点的陈述句\n\n\u003e [名]は[名] (場所)　です\n\n##### 选择疑问句\n\n\u003e [名]は[名]ですか、[名]ですか\n\n##### 描述存在的人或事物\n\n\u003e [名] (場所)　に　[名]　が　あります／います\n\n\u003e [名]　は　[名] (場所)　に　あります／います\n\n- あります 用于没有意志的事物(包括植物)\n- います 用于有意志的事物\n\n##### 全都不\n\n\u003e [疑问词]　も　[動]否\n\n##### 现在的时间\n\n\u003e 今　~時~分　です\n\n##### 在某时间做某事\n\n\u003e [时间]に　[動]\n\n\u003e [时间]　から　[时间]  まで　[動]\n\n疑问句:\n\n\u003e いつ　[動]ますか\n\n##### 原因, 理由\n![[attachments/Pasted image 20230606114300.png]]\n![[attachments/Pasted image 20230606114416.png]]\n![[attachments/Pasted image 20230606114423.png]]\n- だから 可以单独成分句\n- から 通常是接在句子末\n\n##### 比较级\n\n\u003e [名1]は [名2]より [形]です\n\n名1比名2更怎么样\n\n\u003e [名1]より [名2]のほう　が　 [形]です\n\n相比于名1, 名2 更怎么样\n\n\u003e [名1]は　[名2]ほど　[形否]\n\n名1没有名2那么怎么样\n\n##### 最高级\n\n\u003e [名1]の中で　[名2]が　一番　[形]です\n\n![[attachments/Pasted image 20230606220357.png]]\n![[attachments/Pasted image 20230606220421.png]]\n\n##### 选择疑问句\n\n\u003e [名1]と　[名2]と　どちらが　[形]ですか\n\n##### 最高级疑问句\n\n\u003e どの[名]／いつ／どれ／だれ／何　が　一番　[形]ですか\n\n句子前也可以有给定的范围 (参考[[#最高级]])\n\n![[attachments/Pasted image 20230606221957.png]]\n\n### 动词, 形容词变形 \n\n##### 动词变形总览\n\n- 图\n    ![[attachments/3ed63bee587c4487f47374c75f1d8fa.jpg|L|300]]\n\n##### 动词 过去时\n\n\u003e [动词接续形]+ ました\n\u003e [动词接续形]+ ませんでした\n\n动词接续型\n- 一类: u 行 改 i行\n- 二类: e行る 改 i行\n- 三类: する 改 し\n\n疑问句直接在末尾加か\n\n##### 一类形容词 现在时\n\n以 い 结尾的形容词都是一类\n\n一类形容词直接连接名词\n\n\u003e [一形]  [名]\n\n\u003e [一形]です\n\u003e [一形く]ありません\n\u003e [一形く]ないです\n\n##### 一形く\n\n一形く:  改い为く\n\n##### 一类形容词 过去时\n\n肯定: 去い + かった\n\n否定: 一形く + なかった\n\n##### 二类形容词 现在时\n\n\u003e  [二形]な[名]\n\n肯定句和否定句跟名词的变化一样\n\n### 基础\n\n##### 代名词\n\n\u003e この／その／あの／どの[名]\n\n\u003e これ／それ／あれ／どれ\n\n\u003e だれ／どなた\n\n##### 特殊疑问句(人/物)\n\n\u003e 誰ですか\n\n\u003e 何ですか\n\n##### 地点代名词\n\n\u003e ここ／そこ／あそこ\n\n##### 方向/方位\n\n\u003e 上(うえ)／下(した)／前(まえ)／後ろ(うしろ)\n\n\u003e 隣(となり)／中(なか)／外(そと)\n\n\n##### 从...到...(移动)\n\n\u003e [場所]　から　[場所]　まで　[動]\n\n##### 给予\n\n\u003e [人1]は　[人2]に　[物]を　あげます\n\n- 更郑重: さしあげる\n\n##### 收到\n\n\u003e [人1]は　[人2]に／から　[物]を　もらいます\n\n##### あまり\n\n只接否定\n\n\n##### 为什么和回答\n\n\u003e どうしてですか\n\n\u003e ...から\n\n\n## 表达\n\n\n##### 初次见面\n\n\u003e 初めまして、よろしくおねがいします。\n\n\n##### 礼貌人称(謙譲語1)\n\n\u003e 方(かた)　\n\nあの人 → あの方\n\n##### 询问年龄\n\n\u003e おいくつですか\n\n\u003e 何歳ですか\n\n##### 请(收下/用餐)\n\n\u003e どうぞ\n\n##### 单身生活\n\n\u003e 一人暮らし\n\n\n##### 询问价格\n\n\u003e [名]は　いくらですか\n\n##### 地点代名词(謙譲語2)\n\n\u003e こちら／そちら／どちら\n\n##### 美化语\n\n\u003e お~／ご~\n\n\n##### ね(表确认)\n\n\u003e [句子]ね (升调)\n\n寻求对话者的认同\n\n\n##### 大约(时间)\n\n\u003e ~(时间)ごろ\n\n\n##### たしか~\n\n表示有点不太确信自己的记忆, 大概是... 的感觉\n\n##### うち\n\n和いえ不同, うち更倾向于表达 *我家* 这个抽象概念, 有的时候还带一点 *我方* 的意味\n\n##### お疲れ様です\n\nお疲れ様でした~\n\n##### 末班电车\n\n終電　しゅうでん\n\n\n##### なん 和 なに\n![[attachments/Pasted image 20230605004547.png]]\n\n##### そうですか\n\n最后语调下降, 用作应答, 表示: 这样啊\n\n最后语调上升, 表示轻微的怀疑: 这样的吗\n\n##### そうですね\n\n是的呢~ 可以作为疑问句的回答\n\n##### 一些礼貌用语\n\n\u003e 失礼します／失礼しました\n\n可以用作对尊敬的人的**告别**\n\n\u003e 行ってきます／いってまいります(丁寧)　我走啦\n\u003e いってらっしゃい 走好\n\n出门的时候一套\n\n\u003e たたいま　我回来了\n\u003e お帰り　欢迎回来\n\n回家(回来?)的时候一套\n\n\u003e いらっしゃいませー  欢迎光临\n\n\u003e かしこまりました　好的\n\n比较郑重的语气, 确实了解了, 常用于店员对顾客\n\n\n##### さっき　と　たった今\n- たった今: 非常接近现在的刚才\n- さっき: 稍早一点的刚才\n\n##### 信件\n![[attachments/Pasted image 20230605011350.png]]\n\n\n##### 程度副词\n\n从上到下程度递减\n- とても／たくさん\n- すこし／ちっと\n- あまり~ない\n- 全然~ない\n\n##### 子供用\n\n~用 \n\n##### ちょうどいい\n\n刚刚藏\n\n##### お湯と水\n\n- おゆ 指热水, 开水\n- みず 只用来指凉的水\n\n##### 味道\n酸っぱい　すっぱい\n甘い　あまい\n苦い　にがい\n辛い　からい\n塩辛い　しおからい　／　しょっぱい\n\n\n##### どんな\n\n怎么样的[名]\n\n##### でも／そして\n\n表转折, 但是\n\n通常用于口语, 单独成分句\n\n##### ところで\n\n转换话题时用, 说起来\n\n##### ~中 而不是 ~の中\n![[attachments/Pasted image 20230605211407.png]]\n\n##### 紅葉\n两种读法\n\n- こうよう 阔叶类秋天变红的叶子\n- もみじ 一般特指枫叶\n\n\n##### 表示频率的副词\n![[attachments/Pasted image 20230606194808.png]]\n\n##### 征求同意\n\n- 随意的说法: どうですか\n- 客气的说法: いかがですか／いかがでしょうか\n\n##### 怎么说呢\n\n\u003e そうですね...\n\n##### 表示犹豫\n迷い\n\n\u003e まよいますね\n\n##### 省略谓语\n![[attachments/Pasted image 20230606214012.png]]\n\n##### 気に入りました\n\n表示对什么产生了兴趣, 不是长期以来的喜欢, 而是第一次产生的\n\n对熟人, 朋友可用. 对长辈不适合\n\n\n## 单词拓展\n\n##### 国家/人/语言\n![[attachments/Pasted image 20230603234748.png]]\n\n##### 100 以下的数字\n![[attachments/Pasted image 20230604000206.png]]\n\n##### 亲属的称谓\n![[attachments/Pasted image 20230604000235.png]]\n\n##### 100 以上的数字\n![[attachments/Pasted image 20230604003407.png]]\n\n##### 英文字母\n![[attachments/Pasted image 20230604003939.png]]\n\n##### 建筑设施\n![[attachments/Pasted image 20230604005826.png]]\n\n##### 家\n![[attachments/Pasted image 20230604234532.png]]\n\n##### 时刻\n![[attachments/Pasted image 20230605001331.png]]\n\n##### 星期\n![[attachments/Pasted image 20230605001353.png]]\n\n##### 表示时间的词语\n![[attachments/Pasted image 20230605001413.png]]\n\n##### 日历\n![[attachments/Pasted image 20230605002827.png]]\n\n##### 月份\n![[attachments/Pasted image 20230605003706.png]]\n\n##### 一天的生活\n![[attachments/Pasted image 20230605004354.png|L|400]]\n\n\n##### 食物\n\n![[attachments/Pasted image 20230605194800.png]]\n\n##### 交通标志\n![[attachments/Pasted image 20230605195003.png]]\n\n##### 常见一类形容词\n![[attachments/Pasted image 20230605204517.png]]\n\n##### 常见二类形容词\n![[attachments/Pasted image 20230605211642.png]]\n\n##### 天气\n![[attachments/Pasted image 20230605211632.png]]\n\n##### 日本和中国的主要地名\n![[attachments/Pasted image 20230606222125.png]]","lastmodified":"2023-06-16T19:02:40.2604506+02:00","tags":["jp"]},"/permanent/%E6%97%A5%E8%AF%AD%E8%BE%93%E5%85%A5%E6%B3%95":{"title":"日语输入法","content":"\nsrc: https://zhuanlan.zhihu.com/p/402152402\n\n## Romaji\n![[Pasted image 20230220104851.png]]\n\n## Kana\n\n首先要将输入法设置里的*假名输入*打开, 布局是*英文键盘101/102键*, 重启电脑\n\n一个练习地点, 但这需要你有日语布局的键盘, 否则ro打不出: [假名输入练习](https://typing.twi1.me/game/52191)\n\n另一个练习地点, 可以用US英文布局: [練習道場](https://keyboard-dojo.net/)\n\n#### 英语键盘假名对应图\n![[v2-ed9baf0c437a7ef6d4feb4a1ddd4f135_r.jpg]]\n`alt+caps` 切换到片假名\n`ctrl+caps` 切换到平假名\n\n#### JIS/ISO 布局图\n![[Pasted image 20230501134421.png]]","lastmodified":"2023-06-14T23:46:50.0853202+02:00","tags":["jp"]},"/permanent/%E6%9B%9D%E5%85%89%E6%95%88%E5%BA%94":{"title":"曝光效应","content":"\n曝光效应是指, 某件事情做的次数多了以后, 人就会相信自己对这件事很熟练, 但实际上次数和熟练度并非正相关.\n\n但一件事做多了却又很容易让人产生自己已经熟练了的错觉. 在肌肉记忆的领域可能 不适用, 但此外需格外注意\n\n![[attachments/aa73448ba053a97cc3ffd3dd8fd4e1c.jpg]]\n\n可能导致:\n- [[permanent/擅长多任务处理的错觉|擅长多任务处理的错觉]] (擅长xx的错觉)\n- [[permanent/抄写于记忆或学习的收益很低|抄写于记忆或学习的收益很低]]\n- [[permanent/重复多次阅读的收益不如一次深入思考|重复多次阅读的收益不如一次深入思考]]","lastmodified":"2023-06-15T16:56:43.2346935+02:00","tags":["心理学"]},"/permanent/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0":{"title":"机器学习","content":"\n[[permanent/人工智能|人工智能]]\n\n[[permanent/Data Mining]]\n","lastmodified":"2023-06-16T19:25:42.5166067+02:00","tags":[]},"/permanent/%E6%9F%90%E6%B4%8B%E8%91%B1%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E8%BF%9E%E6%8E%A5":{"title":"某洋葱浏览器的连接","content":"\n内置网桥和请求网桥得到的是公用的\n中国大陆用户可能必须使用私人或未公开的 obfs4 网桥。 请联系 Telegram 机器人 [@GetBridgesBot](https://t.me/GetBridgesBot) 并输入 `/bridges`。 或者发送邮件到 [frontdesk@torproject.org](mailto:frontdesk@torproject.org) 来获取，邮件主题需要包含“private bridge”。\n","lastmodified":"2023-06-15T17:46:44.0685334+02:00","tags":["工具使用"]},"/permanent/%E6%A0%B7%E5%BC%8F%E6%B5%8B%E8%AF%95":{"title":"样式测试","content":"\n`code`\n\n```python\ndef something:\n    a = 0\n    return\n```\n\n\u003e 引用\n\n[[permanent/样式测试|样式测试]]\n[[不存在的链接|不存在的连接]]\n\n\n- 1111111111\n- 22222222\n- 333333333\n- 44444444\n\n1. 没有一\n2. 二也不知道是什么\n3. 事不过三\n4. 但我就是要有四\n\n# h1\n\n讲了一些话\n\n## h2\n\n讲了一些话 讲了一些话\n\n### h3\n\nkljlksajhda;flkjx;clkvj\n\n#### h4\n\n讲了一些话 讲了一些话 讲了一些话 讲了一些话\n\nkljlksajhda;flkjx;clkvj\n\n##### h5\n\n应该很少用上 h6 吧就设置到5\n\n###### h6\n\n还是不能少啊\n\n---\n\n分隔","lastmodified":"2023-06-15T16:25:29.2049583+02:00","tags":[]},"/permanent/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0":{"title":"欧拉函数","content":"\n- 计算一个小于等于正整数 n 并与 n 互质的正整数的个数\n- Euler's phi funcion, 别名 Euler's totient function、φ函数、欧拉商数\n- $\\Phi(n)$\n- $\\Phi(1)=1$\n- $\\Phi(8)=4$  (1,3,5,7)","lastmodified":"2023-06-15T17:47:41.4045012+02:00","tags":["数学"]},"/permanent/%E6%AD%A6%E6%9E%97%E7%AB%8B%E5%BF%97%E4%BC%A0%E9%BE%99%E5%90%9F%E5%89%91":{"title":"武林立志传龙吟剑","content":"\n# 武功推荐(贴吧:魔帝无天)\n### 武林盟主：展雪\n\n技能路线：魔化心法→夜月流→寒云劲→天寒地冻→冰月极光→修罗斩月→魔帝无天（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：大妈的智慧高，可以用56最强智慧装，且冰火魔攻均成长好。大妈走标准魔帝冰攻路线是为了将自身冰火魔攻的性价比发挥至最大，且进一步强化冰攻单杀BOSS能力，让大妈在资料片中更加游刃有余，特定场合（如客栈怪谈既有冰免怪又有火免怪）最好用的人物，无论火系还是冰系单体群体均非常有质量：火系霸天狂单体4W，霸天灭单体2W，霸天绝群攻2W，霸天怒群攻1W；冰系雪晶殇群攻8000，魔帝单体1W5。用大妈可以大大缩减游戏难度和游戏通关时间，因此大妈也被众吧友称为官方作弊器。大妈是整个武林最强的冰火魔导，没有人可以和她抗衡，当之无愧的武林至尊，只学习一个天道都足以血洗整个资料片的恐怖存在。个人推荐用大妈刷装备秘籍和带人坐飞机升级，可以省非常多事情，弊端就是很可能以后每一场战斗你都会情不自禁把大妈摆出来...总结，大妈不光人物造型英气十足，实力也是一等一的强，龙吟剑霸主的地位无人能撼动。（提示：大妈是要通关60关卡武林至尊之后新开档才能收到的，想一周目就收到大妈的可借助战前存档，用别人的存档通关武林至尊之后再开新档即可，三BOSS也可用同样的办法一周目收到）\n\n### 玉兔：    小玉儿\n\n技能路线：太虚心法→梵心诀→晶冰玉结→梵海无边→冰封万里→神渡霜天→赤日神回（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指（共14点）\n\n  素女周天功（共2点）\n\n  达摩心法（共1点）\n\n  共用120点，剩余0点\n\n解析：小玉儿的这套加点是我资料片受启发新研究出的，和以往吧里默认的嫁衣千叶路线相差很远，这里我详细说说我这套加点的思路和老版技能路线的对比：老版技能路线着重在小玉儿的奇术和定性上做文章，小玉儿高达11的奇术出地龙再合适不过，而且前置的嫁衣十八跌也非常契合玉儿140的高定性，加上减物理抗的千叶，小玉儿集控场、减益、补刀等多功能于一体，好用得不行，尤其是BOSS战中会异常出彩。我原来玩资料片玉儿的加点是基于原吧主跑偏之王的加点推荐上稍作修改而成，直到近期，看到吧友新发的剑走偏锋那个帖，很受启发，觉得有些东西其实可以没必要那么局限，可以自行开脑洞发散思维。于是我重新研究了玉儿，发现玉儿因为可以穿56最强智慧装，加上冰火魔攻成长好，有没有一个加点是既能将她的输出能力保证同时又不会埋没她的高定性和奇术呢？经过反复洗点，终于确定了现在这个加点：这套加点相比原来，少了地龙的群睡，少了嫁衣、无上聚力诀、千叶的各种减抗，也少了浩瀚的火攻加成；但是多了一个大范围火系群攻， 多了神渡的加成，大家还注意到没有，减抗部分由原来的单体全部变为群体：梵海无边3范围外加20%冰系减抗，贯虹指5范围15%火系减抗，英仙阵1范围10%物理减抗。虽然减抗力度上比原来有所下滑（嫁衣减冰火抗各20%，千叶减单体物理抗25%，无上聚力减单体冰抗15%,个人感觉除了和原来加点的千叶单体减物理抗相差的有点远之外减冰火抗其实真没隔多少，梵海和贯虹还比原来的无上和嫁衣范围大得多），但是从配合群攻来说玉儿的这套加点更能发挥出她高定性减抗的价值。此套技能里面控制系的也不少，有梵心迷惑，有混元和千仞眩晕，有霞光失血，只比原来地龙的路线少了一个单体昏睡和群体昏睡（说实在的，资料片以后太多怪免疫控制了，多个控制远不如多个输出实在），也不算埋没玉儿的奇术。最后我们综合来看一下，玉儿这套点可赤日群攻，可寒冰烈火单体补刀，可神渡加成，可梵海贯虹减群，可素女走位保命.......真正实战中几乎没有一个回合是没有事情做的，比原来的加点团队适用性更广。特别是波次攻击中，小玉儿可以先贯虹减抗为赤日众铺路，当其他人放完赤日等待CD时，小玉儿保留下来的赤日又可以配合其他补师的贯虹继续输出一波（一般这个时候加成补师要做的事情基本已经做完了，前面要做的事情太多没空闲放贯虹），这个节奏真的是非常非常合理。至于漏掉的物理单体最强减抗千叶可以让其他高定性减益补师学习，要用到地龙的场合也可以由黄甫燕、巫如双、贾芷雪、卜南松等高奇术人物代为发挥，况且英仙阵和达摩心法也有个10%减物理抗，聊胜于无，可用于千叶CD或者无千叶人员上场等应急场合。从整个团队效益的角度看，新加点效益要远高于以往的嫁衣千叶路线，小玉儿也从当初主要减益控场的定位变成了集输出、加成、减益、控场、补刀等多方面的万能钥匙，并且在团队契合度上也比原来高了至少两个档次，比一般的赤日众强了不知道多少倍。和原来的加点相比新加点更加可以发挥小玉儿高冰火魔攻的输出功效，在减抗和控制上的损失不大，可以由其他队友补正，甚至减抗范围比原来还有了很大程度的提高，真正意义上完美发挥了这个人物的最大实力。总结，小玉儿也是和大妈一样超脱于各大门派之外的超然存在，龙吟剑第二140的定性和本身自带的寒冰烈火掌相得益彰，加上第一高的奇术，可控可输出，配上高定性减益，攻击性非凡。也许也只有这种妖孽般的存在才能和大妈归类到一起，她们两个都强得变态。（如果实在是放不下玉儿千叶和地龙的专利，这里还有两个选择：1.天道保留，赤日和贯虹改为出地龙和千叶，共117点，最后3点出素女或十字手都行，这套加点中天道强化了玉儿的单体补刀，同时天道线的前置控制技能正好契合玉儿的奇术；2.天道线完全砍掉，保留贯虹，赤日线出到梵海，多出一个花前月下，加上地龙和千叶，也是刚好117点，剩下的3点出素女或者十字手都可以，这套点最大程度强化了玉儿的高减益，两个单体减加两个群体减，且还多了花前的隐身，加上群睡的地龙，也是非常强大的）\n\n## 英雄门  \n### 展承天\n\n技能路线：破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  尧白功→无极聚元功→霞莲护体功→天形功→玄黄剑罡（共38点）\n\n  长拳→擒拿术→虎罗汉→龙罗汉→睡罗汉（共24点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  共用120点，剩余0点\n\n解析：请把火攻棍子给小展！请把火攻棍子给小展！请把火攻棍子给小展！因为太重要了所以说三遍！拿了火棍的小展和没拿完全是两码事。这套加点是基于小展后期拿到龙吟剑自带减CD特性以及拿上火棍穿上一套神器的前提下考虑的：天道的暴击加成自不用说，睡罗汉的物理无敌以及霞莲和玄黄的双冰火无敌让小展三防无敌成为了可能，并且玄黄无敌的触发比霞莲更容易（后期很多怪不吃眩晕），就算不触发无敌配合玄黄加成的高抗性，再来个雪晶补正冰抗和物抗，加上一身神器，三防全部可以高达几万，比虚空还硬。剩下的点补上花前素女隐身加上一个防束缚解束缚的十字手性价比最高，无论是团队配合还是保证自身走位上都很不错，连1点技能点都没有浪费，刚刚好120点。这里恐怕很多人要问为什么不出个天剑极流补正物理攻击，我的答案是在战斗中换装太麻烦，而且后期的小展因为减CD的缘故，4个霸天放得不亦乐乎，哪有什么时间去兼顾物理输出。物理的好手本身就多的是，真不差小展这一个，小展安安心心放自己的霸天就好，时不时再来个无敌啥的就更美了。这个点下的小展能做的事情也非常多，有防有输出，还能解束缚防束缚，也是每回合忙到死的“累”型。总结，火棍小展是龙吟剑第一火系魔导（王老头空有一身高火攻奈何没霸天，就像有好枪却没有好子弹让他发挥一样），绝对的火系输出至尊，霸天比大妈还要厉害（火棍5W火攻加成，范围加1不说这货还自带减CD，大妈都得甘拜下风）。所以说，大妈的任务是帮儿子快速拿到神器，自己就可以安心走下霸天神坛了，所谓的老盟主带新盟主就是这么个套路。（小展用了火棍即使放了天道暴击也到不了100%，所以建议不要佩戴加火攻太少的雷舞玉，带56级外功最强首饰烟松石增强暴击，达到整体优异效果 ；千万不要以为90%+的暴击就应该是次次暴击了，本人亲测只有96%暴击的小展群攻时不时就要漏掉一两只怪不暴击，非常影响DPS效率，如果不戴烟松石少5%暴击的话情况会更糟糕）\n\n### 金严狮\n\n技能路线：天阳决→怒神吼→战流甲→移相心法→无上玄冥功→混浊玄冥→圣灭冥河（共63点）\n\n  破玉拳→华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝（共39点）\n\n  绵掌→聚元功→斗换星移→鹤心化毒功（共14点）\n\n  狂风怒（共2点）\n\n  十字手（共2点）\n\n  共用120点，剩余0点\n\n解析：狮子的四维非常不错，有三个最终都可以突破432，外攻火攻都很高，也是神魔灭世的强力候选人之一。考虑到灭世的成型太晚（技能书难刷且只在60最后的凯歌中才能爆），加上自身有一定坦度，因此该加点在不埋没狮子本身超高的物理输出的前提下又能兼任一个副T的思路考虑而成：走本门圣灭可以有大范围的物理输出（讲真，狮子是几个外攻人物中最适合走圣灭的），因为没有奇术因此天道线走外攻路线，配合自身已有的BOSS技能加强补刀；本门圣灭那条线肉盾线比外攻武士路线好，有移相心法的副T技能，加上武当的回复路线中的斗转星移（武当的回复线感觉不太适合皮脆的补师，仇恨太高，反而是副T学的话性价比要高很多），这样就有两个拉仇恨的强力副T技能（将自身体力转移给其他队友瞬间会产生大量仇恨），在主T或队友危急的时候可以有效逆转局面。剩下的鹤心化毒和十字手又都是很实用的辅助技能（浪迹有时候只是用来解毒和失血感觉有点浪费，用鹤心就刚好合适，可以把浪迹留下来解其他负面状态），让狮子有充当多面手的可能；120点技能点刚刚好用完，也是1点都没有浪费，同样适合强迫症人群。总结，原来狮子也可以很万金油！（不介意灭世出现晚的可以让狮子走狂龙灭世路线，同样能发挥狮子高外攻和火攻，也还行，但不如这个加点适用性好）\n\n### 纪蓉\n\n技能路线：天阳决→狂风怒→奔雷劲→横扫千军→极上混天功→混浊玄冥（共38点）\n\n  长拳→擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸（共39点）\n\n  狂龙乱世（共20点）\n\n  神魔灭世（共18点）\n\n  洗髓心法→素女周天功（共3点）\n\n  一啸风生（共2点）\n\n  共用120点，剩余0点\n\n解析：蓉儿在吧里以往的评价并不高，甚至归到了板凳角色。怎么说好歹人家也是个主线人物，造型也不错，况且也是灭世的候选人物之一。我原来就说过，大后期能出灭世的都不算差，起码输出不比赤日低，只是出的太晚才导致成型慢所以才尴尬。蓉儿就是属于不出灭世基本上没啥亮点的典型，智慧虽然够穿56智慧法攻装，但是本身的冰攻并不算太高，走魔帝线感觉还是有点不够质量。因为蓉儿在资料片以前就出来了，建议前期和小姑娘走一样的外攻冰攻路线，出华山外攻和魔教冰攻，前期也是相当好用的（特别是出到天道输出会有一个质的飞跃）；中期到资料片可以选择直接洗出狂龙，也可以继续强化魔教冰攻，出魔帝无天（出魔教冰攻连洗点钱都省了，技能树刚好是顺过来的）；到最后刷到灭世就走狂龙灭世路线，补足一个素女走位保命用（至于一啸是紧急时候用来应急用的，聊胜于无）。总结，蓉儿没有以往说得那么废，技能啥的都非常顺，前中期都可以一用，大后期同样非常给力。况且蓉儿笑容那么可爱，我要是小展的话果断去跟狮子提亲娶她，毕竟肥水不流外人田嘛！只怪小展自己不争气，嘴边的肉他都吃不到，活该做个撸一辈子的空头盟主。\n\n### 高夏山\n\n技能路线：一啸风生→回天混元功→灵台五转功→日月大挪移→玄冥之力（共38点）\n\n  长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指→玄门天罡指（共24点）\n\n  太虚心法→梵心诀→晶冰玉结→梵海无边（共14点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  共用120点，剩余0点\n\n解析：经测试，高夏山的真实定性应为120而不是显示的126，但是仍无法改其变即使是随机人物依旧强大的事实，属于随机惊喜人物之一。基于其4点奇术的特性，因此这个点侧重在攻击性上，其他不足的部分由其他队友补正（最好是一个有千叶的防御型补师）：地龙线既有最强大的群控又有减冰火双抗的嫁衣，玄冥线有日月大挪移的减冰火攻，又有最强大的增伤玄冥，并且有单补最给力的性价比技能一啸风生（建议孙碧玲、周镜深、明仁、高夏山4人出玄冥，可以满足所有关卡对玄冥的需求，而且4人的定性在整个龙吟剑也是前茅的存在，出玄冥的性价比最高）；贯虹和梵海是性价比最高的群减技能，加上玄门天罡的冰攻加成，特别是15人以上的超大图时，放在灭世众一侧增幅最为合适（一般狂龙线的灭世人物大多是外攻冰攻强火攻弱，神魔同体线的灭世人物因为自身有神人合一的150%火攻增幅，浩瀚佛光和天海无涯的80%火攻加成会重叠而无效，所以灭世众大多需要的都是增幅冰攻，那么既有玄冥又有天罡指的高夏山放在灭世众中增幅自然再好不过了；而且两个大范围减冰火抗技能又能很好地为灭世众铺路，需要减怪冰抗还是火抗也可以灵活视具体情况而定）。最后的5点给到了自保的素女和解束缚性价比最高的十字手，至此用完所有的点数，也是1点都没浪费。这套技能点完美发挥出了高夏山高定性和4点奇术的特性，联动一个防御型补师即可以补足缺少诸如群补、群解状态、隐身、回血、减物理抗、加成火攻等所有缺点，特别适合3线作战的大图，增幅减抗的同时还具备了强大的控制。总结，高夏山虽然是随机人物，可依旧不影响其主力的地位，比主线的很多人不知道强大多少倍，名副其实的玄冥4天王之一（此配点不唯一，可视队伍补师群具体配招情况灵活搭配，请以团队搭配及发挥人物自身特性性价比为目标活用此人物）。\n\n### 巫如双\n\n技能路线：长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环（共24点）\n\n  洗髓心法→刻玉指→天地变→花前月下→浪迹天涯（共24点）\n\n  太虚心法→玄石功→六出术→金关玉锁功（共14点）\n\n  绵掌→十字手→八卦掌（共6点）\n\n  杀声震天→修罗归元（共5点）\n\n  狂风怒→奔雷劲（共5点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：小巫巫的亮点在于高达7点的奇术，雷属性也很适合挂阵，定性只有98的她不适合走减益路线，加上自身是怜悯成长的补师，因此考虑控制的同时辅以加血和解状态：最强群控地龙无疑是这种专玩奇术的必出技能，加上七星恐惧失血、八卦束缚、奔雷施毒、金关迷惑（因为太多人学了华山的眩晕控制，所以小巫巫就不重复出了），基本上只要能中负面状态的怪全都逃不了她的手掌心。此外她还有花前和素女双隐身，浪迹解各种负面，十字解束缚，杀生补怒气和真气，一啸和修罗归元一个单补一个群补，而且修罗归元还能解恐惧，好吧她把很多正牌补师能干的事也给干了...在怪吃控制的战斗中会非常给力，面对BOSS免疫负面时可解状态可加血可隐身摆阵可帮别人隐身...总之也是闲不下来的主。总结，小巫巫是英雄门第二个有惊喜的随机人物，控制补师的代表，和高夏山都可以成为战场主力，潜力非常大。\n\n## 魔教    \n### 离儿\n\n技能路线：魔化心法→夜月流→寒云劲→天寒地冻→冰月极光→修罗斩月→魔帝无天（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：请把冰龟剑给离儿！请把冰龟剑给离儿！请把冰龟剑给离儿！因为同样很重要所以也说三遍！离儿在资料片中重新回归，原来的初始技能魔化心法没了，只剩下了雪晶，造型也更加漂亮了。她和蓉儿非常相似，外攻冰攻高且都是勇气智慧成长，都适合狂龙灭世路线，区别就在于离儿是勇气最后高于智慧，蓉儿是智慧最后高于勇气，而且最关键的是离儿有雪晶。正是因为雪晶的存在因此离儿其实是最适合拿冰龟剑的人：整个龙吟剑正常可以收到的人物中只有3个会雪晶，即小展、离儿、大妈（冷MM的BOSS专属雪晶是半成品，后期根本不够看）；小展因为有火棍因此安心霸天即可，雪晶殇在他手上发挥不出任何威力；大妈是全龙吟剑最厉害的人，霸天和雪晶在她手上均可以发挥出应有的威力，且大妈智慧高，穿56智慧法攻装就能有很高的冰火魔攻，无需神器就可以最大程度发挥自身的冰火双攻；离儿最后的智慧不够无法穿56智慧法装，穿56智慧平衡装发挥不出雪晶的伤害，所以她和小展其实是一样的，都必须借助神器才能发挥最大价值（整个龙吟剑只有两个人可以大范围冰系AOE，即大妈和离儿，如果离儿拿不到冰龟剑还不如出灭世，那么她的雪晶也就废了）。总结，离儿终于超过了师傅冷无霜，成为了真正的至尊冰系魔导（这里同样注意，离儿最后的饰品不要戴56勇气智慧3攻饰品，戴42级的智慧饰品打狗冰簪效果更好，非常蛋疼的是由于她也只有100定性，拿冰龟剑天道以后暴击同样到不了100%，好在打狗冰簪补正了8%暴击，最终暴击率定格在99%，不是脸非常黑的话基本上都能暴击）。\n\n### 冷无霜\n\n技能路线：魔化心法→夜月流→寒云劲→天寒地冻→冰月极光→修罗斩月→魔帝无天（共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  九阴诀（共2点）\n\n  共用120点，剩余0点\n\n解析：本身冰攻全龙吟剑最高，且自身拥有范围1的5000冰攻雪晶缘，在资料片以前会很牛逼（特别是走金严狮路线的时候，因为狮子火攻无敌，所以小展和大妈都发挥不了用处，这时候冷的冰攻就很有价值了）。资料片以后由于火系的强势和冰系缺少高伤AOE技能，冷的地位会有所下降，但也不妨碍其冰系DPS主力地位，特别是有魔帝无天之后单杀能力会非常强。标准魔帝冰攻路线加上天道是主流冰攻加点无疑问，剩余点出花前素女双隐，由于其还有4点奇术，最后2点出九阴再合适不过了，且华山控制路线在她手上也比较有价值。总结，冰系DPS主力，魔帝代表人物，奈何缺少类似于雪晶殇的高伤大范围AOE，效率上大打折扣。她和大妈一样，都是把后辈送上神坛的使命（大妈是帮儿子小展，冷MM是帮徒弟离儿）。\n\n### 阴九幽\n\n技能路线：天阳决→狂风怒→奔雷劲→横扫千军→极上混天功→混浊玄冥（共39点）\n\n  长拳→擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸（共39点）\n\n  狂龙乱世（共20点）\n\n  神魔灭世（共18点）\n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：老阴是3BOSS中适用性最好的一个，BOSS技能专属的幽毒有力度又有范围（外攻冰攻伤害各3000，范围3），非常契合本身勇气智慧和外攻冰攻成长。和蓉儿一样，走狂龙灭世路线大器晚成，虽然三攻总和没有太乙王重广高，但也低不了多少，是3攻妖剑的最合适人选（王老头还可以赤日，阴虽然智慧也很高，够穿56智慧装，但是强烈不建议以前攻略中说的走魔帝路线，冰系后期疲软是有目共睹的；老阴的幽毒后期同样好用，是3BOSS技能中最有质量的一个，因此3攻剑用来同时强化老阴的幽毒和灭世极具性价比，最大程度能发挥出3攻剑的威力）；剩余的4点出个素女保命走位最实在，配合自身的中毒技能很好用。总结，老阴是3BOSS中后期最出彩的，灭世的伤害很高，补刀力度也不差，稍微有点可惜的是没有奇术，有的话自身的施毒技能会更上一层楼。\n\n### 上官翼\n\n技能路线：达摩心法→虎啸功→铁布衫→百毒不侵→金刚罩体→少林九阳功（共39点）\n\n  绵掌→十字手→八卦掌→乱环诀→两仪乾坤→苍天无极（共39点）\n\n  无量定天（共20点）\n\n  极阳天关（共18点）\n\n  天阳决→一啸风生（共3点）\n\n  共用119点，剩余1点\n\n解析：肥蝙蝠正义和智慧都不错，可以穿56正义智慧装，冰火魔抗都很出色。极阳是蝙蝠的核心，出了以后会发生质的变化（缺点是58级牛头死士才出，有点晚，且爆率还特低）；无量路线中很多技能都是很实用的仇恨技能，百毒、九阳、十字等前后期都非常好用，无量多出的50%血量上限也为补师神渡和以战养伤留出了发挥空间；最后的3点给到一啸，关键时候能救人不说还能拉大量仇恨，极具性价比。总结，肥蝙蝠这个点没啥很大亮点和突破，中规中矩，但是实用价值高，适合新手也同样适合老手；这里吐槽一句，蝙蝠别看长得肥，轻功可一点都不含糊，肉不说还TM跑得快，实乃牛皮糖一样的恶心角色（一般来说龙吟剑默认的3个最好的盾是虚空、上官翼、拳冠青，三人可根据自身特性走不同的盾系路线灵活应对各种关卡，有这三个盾完全够满足所有关卡的要求了）。\n\n### 杨碧凌\n\n技能路线：太虚心法→梵心诀→晶冰玉结→梵海无边→冰封万里→神渡霜天（共39点）\n\n  达摩心法→菩提经→轻身术→无上聚力诀→浩瀚佛光→千叶如来（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指→玄门天罡指（共24点）\n\n  天阳决→怒神吼→以战养伤（共6点）\n\n  杀声震天→修罗归元（共5点）\n\n  绵掌→十字手（共3点）        \n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用120点，剩余0点\n\n解析：碧凌妹子也是随机人物中非常强力的存在，光看她121定性（实际120）和3的奇术就知道这是个能干很多事的人。由于控制在资料片中疲软，且队伍中玩控制的也不少了，因此该加点主要围绕她的高定性来做文章：神渡和玄门一个增幅单体冰攻，一个增幅群体冰攻，且神渡和以战养伤是最好的回血技能；单补最猛的一啸和群补的归元以及补气的杀生让她坐实了补师的位置，归元还可以解恐惧，加上解束缚的十字手，部分补正了因为缺少浪迹而无法解状态的尴尬；浩瀚和玄门一个增幅团队火攻，一个增幅团队冰攻，双加成让无论是火攻手还是冰攻手都能享受到该有的加强BUFF；千叶、无上、贯虹、梵海让她的减益无论是单体还是群体均没有盲点，可以应付所有减抗场合，范围AOE和BOSS战中都是DPS最值得信赖的存在；最后的2点出素女走位保命，没有任何疑问，120点干干净净，让碧凌妹子同时集补给、减益、加成、解控4个强大的功能于一身（其实她还有梵心这个小控制技能），适用于任何场合，玄冥4天王中间任意一个搭配她都可以基本做完辅助应该做的所有事。总结，难怪碧凌妹子要把她白花花的腿现出来，敢情就是让人家抱她大腿的，强成这个样子让其他主线人物情何以堪，就连本门大姐大冷MM也不得不表示压力不小...\n\n## 峨眉\n### 凌萧遥\n\n技能路线：魔化心法→杀声震天→修罗归元→还魂大法→虚无幻海→人魔合一（共39点）\n\n  太虚心法→梵心诀→火神三元→焚火无垠→天火蚀月→神人合一（共39点）\n\n  神魔同体（共20点）\n\n  神魔灭世（共18点）\n\n  素女周天功（共2点）\n\n  夜月流（共2点）\n\n  共用120点，剩余0点\n\n解析：凌MM的加点其实分为两套，上面列出来的是一周目凌MM勇气435情况下的最佳技能路线，二周目以后收到的由于勇气达不到432会穿不了56级勇气智慧装，因此只能走赤日或者魔帝；一周目的凌MM出灭世能最大程度发挥出其高冰火魔攻，其3攻总和已经和杨古泉不相伯仲了，没有奇术加上其实际高达120的高定性（显示有BUG实际测试其定性为120），因此人魔线不走七星而出虚无，由于其怜悯也是很不错的，可以考虑为其准备一些怜悯装替换用来补血补气，这样一来杀生、修罗和还魂也能用得上，分担补师的压力和仇恨（凌MM比一般补师要肉太多了，有时候用她救人有奇效，既能回血回蓝又能拉仇恨）；最后四点给到了素女和夜月，素女走位保命就不多说，夜月有个减10%冰抗也算个不错的减益技能，很配她的120定性。二周目以后的凌MM没有一周目那么厉害，但好在比一周目成型快，同样也是非常强力的存在，走魔帝赤日都行，视队伍情况补正即可；这里个人推荐走赤日路线，和上面我的玉儿技能路线一样（梵海线到赤日，然后天道加贯虹），既不会埋没她的高冰火魔攻又能发挥她的120高定性，比走魔帝要厉害，当然如果队伍实在少冰攻人物走冰攻路线也是不错的。总结，凌MM和她的两位姐姐（大妈和冷MM）比起来，没有大妈的霸天雪晶，也没有冷MM的BOSS技能和奇术，但是凭借自身的高定性，同样是不输前面两个的风采（一周目的凌MM实际综合实用性甚至比大妈和冷MM还要好），也算是对得起她峨眉掌门的身份了。\n\n### 孙碧玲\n\n技能路线：天阳决→怒神吼→以战养伤→倒行逆气→气盖山河→玄冥之力（共39点）\n\n  太虚心法→太乙心经→天归纳气→神渡众生→天海无涯→神渡霜天（共39点）\n\n  刻玉指→天地变→花前月下→浪迹天涯（共23点）\n\n  英仙阵→贯虹指（共11点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：150定性的大玲子坐实了龙吟剑主力地位，加成减益效果都强大到令人发指。因为其最高的定性，出玄冥和霜天无疑是最佳的加成手段：玄冥增伤，霜天加冰攻和回复，以战回复，众生群补，这样两条线加下来已经能做非常多的事了；后续的点数陆续补出浪迹、双隐、一啸、十字，再出一个贯虹补足减益（大玲子的贯虹已经不比其他人的嫁衣效果差多少了），至此大玲子主加成回复的防御型加点已经告成。这套点中，大玲子有双回血，有最强的群体增伤加成、最强的火攻群体加成和最强的冰攻单体加成，双隐既保他人也保自己，浪迹解所有控制，十字防束缚，众生的群补和一啸的单补也让大玲子的回血能力没有遗漏；最画龙点睛的一笔在于那个贯虹，使得大玲子在主防御性的同时也具备了一定的攻击性，而且大玲子高达150的定性也使得她的贯虹比起其他人具备更高的破坏力，这个破坏力居然还是范围的...总结，大玲子就如以往吧友对其的评价一样，主力阵容不可或缺，后期宁少几个输出也不能少了她的加成，150的定性让其轻松笑傲龙吟剑，当之无愧的玄冥四天王之首。难怪最终大玲子继承了峨眉掌门，她的特性实在是太诠释峨眉派了：峨眉也许不是最强的，但却是最少不了的（亲们如果觉得峨眉不强大可以去试试一周目的绝美峨眉，保证让你欲仙欲死...）。\n\n### 柳絮儿\n\n技能路线：天阳决→狂风怒→奔雷劲→横扫千军→极上混天功→混浊玄冥（共39点）\n\n  长拳→擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸（共39点）\n\n  狂龙乱世（共20点）\n\n  神魔灭世（共18点）\n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用120点，剩余0点\n\n解析：絮儿出灭世和蓉儿是一个道理，出其他的都不如出输出实在；不同之处在于絮儿勇气非常高，足够带56纯勇气物攻装，加上其还不错的定性和四维（定性有110，且四维有三项都在435以上），因此也可以考虑走物攻路线或者补刀奶妈路线：纯物攻暴力的絮儿推荐出华山绝学，然后走峨眉外攻路线出到红蝶，剩下的点数至于是出花前隐身还是解控加血啥的就看个人喜好了；补刀奶妈路线的话出绝学天阳无极（华山走外攻天道路线，峨眉走紫玉玄天线），武器用56级的降汝剑，剩下的点数刚好可以够出到峨眉的幻影无形剑。两套点一套注重攻击，一套注重综合，并且都可以减敌方攻击，都很厉害。总结，絮儿的高四维决定了其路线的多样化，110的定性也让她能更好发挥出峨眉外攻的威力，属于你怎么喜欢练就怎么强的人（讲真，絮儿真的好用，而且造型又好，绝对主力啊有木有）。\n\n###  慕容诗\n\n技能路线：素女周天功→回天诀→起死回生→紫玉神功→玄天紫罡→霞红飞燕（共63点）\n\n  刻玉指→天地变→花前月下→浪迹天涯（共23点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指（共14点）\n\n  太虚心法→玄石功→六出术（共6点）\n\n  绵掌→十字手→八卦掌（共6点）\n\n  杀声震天→修罗归元（共5点）\n\n  天阳决→一啸风生（共3点）        \n\n  共用120点，剩余0点\n\n解析：萝莉诗的真实定性只有100，老实说，这萝莉其实真没啥亮点，属于不太推荐练的人物。因为其主线人物的地位加上有萝莉的萌外形，本人很是费了一番心思帮她定制了一套加点，只围绕她的第一慧根和解状态来做文章：本派峨眉绝学加上浪迹，两个强力的群体解控制，又有双隐，安全系数还是很有保证的；其他像什么黑煞、六出、十字都是可以预防负面状态的好技能，最后出修罗和一啸补足奶，基本上已经把萝莉诗的最大价值发挥的淋漓尽致了。总结，萝莉诗为自己代言，即使身轻易推倒，也一样上战场，只为不输主线人物戏份。\n\n### 周采芹\n\n技能路线：达摩心法→菩提经→轻身术→无上聚力诀→浩瀚佛光→千叶如来（共39点）\n\n          长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌（共24点）\n\n  刻玉指→英仙阵→贯虹指→玄门天罡指（共23点）\n\n  太虚心法→梵心诀→晶冰玉结→梵海无边（共14点）\n\n  魔化心法→杀声震天→修罗归元（共6点）\n\n  天阳决→怒神吼→以战养伤（共6点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：采芹妹子和碧凌妹子非常像，有定性有奇术，也是随机人物中强大的存在。为了最大限度发挥出她高定性的价值，和碧凌妹子一样，不过多在奇术上下功夫（3奇术不高不低感觉鸡肋）。这套加点强大之处在于几乎所有减抗的技能她全学了，有千叶嫁衣的单减更有梵海贯虹的群减，加上浩瀚和天罡的双加成，可以说基本上没有她不适合出场的情况；剩余的点数补上一些如修罗、以战、十字什么的补充一些防御性，再来个素女一啸，嗯，完美。采芹妹子任意联动一个玄冥防御补师，就能干完补师应该做的所有事情，是不是不要太给力。总结，采芹妹子很有希望接大玲子的班，只要你也和碧凌妹子一样多露点肉，下一个峨眉掌门就决定是你了！\n\n## 太乙\n### 王重广\n\n技能路线：梵心诀→火神三元→焚火无垠→天火蚀月→神人合一→赤日神回（共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  玄石功（共2点）\n\n  共用120点，剩余0点\n\n解析：作为太乙扛把子，也是整个龙吟剑火攻最高的人，王老头表示自己走本门太乙就能成为顶级法系DPS：标准的赤日线自不用说，赤日众的NO.1代表，同时王老头还表示其实他还是灭世众的NO.1...对，你没有看错，这货出灭世也是攻击力最强的，他就是这么独领风骚。只是，王老头不会顶级火系大法霸天，只好拱手把至尊火系魔导的宝座让给了后生可畏的小展。个人这里还是觉得王老头出本门赤日最好，成型快，相性好，简单粗暴，效果也不比灭世；当然，如果你追求极致DPS，那就把三攻剑给他让他灭世大杀四方吧。总结，王老头主力DPS地位毋庸置疑，四维定性都很出色，只是，他悲愤地发现自己生错了时代：既生双展，何需太乙！\n\n### 赤阳子\n\n技能路线：梵心诀→火神三元→焚火无垠→天火蚀月→神人合一→赤日神回（共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  玄石功（共2点）\n\n  共用120点，剩余0点\n\n解析：整个龙吟剑火攻第二高的人，嗯，用这个名头行走江湖是多么拉风惬意。赤大仙和基友虚空浪迹天涯，行侠仗义，何其快哉，只是，咳咳，经常是基友还龙精虎猛的时候他就已经倒下了...没办法啊，赤大仙表示毕竟身板不像虚空那么瓷实，加上长相风骚拉仇恨，被推倒是很正常的有木有！甭管这些，大仙早些年已经学有所成，早早告别了一帮牛鼻子老道去追随自己的“幸福“，就这种天赋和勇气，哪一点不比小展那怂货强！有输出，有理想，出道早，哪怕他除了太乙绝学之外其他啥也干不了，哪怕他那可怜的小身子骨比姑娘还脆，也同样影响不了他居高不下的出场率；特别是前期，人家会告诉你什么叫真正的火系DPS。总结，赤大仙不愧是王老头手下第一大弟子，完美继承王老头的衣钵，同时也是龙吟剑代表一发男，他会真正告诉你什么叫打不死别人死的就是自己，猛士也！向大仙致敬，一周目感谢有你！\n\n### 刘玄知\n\n技能路线：梵心诀→晶冰玉结→梵海无边→冰封万里→神渡霜天→赤日神回（共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指（共14点）\n\n  素女周天功（共2点）\n\n  玄石功（共2点）\n\n  共用120点，剩余0点\n\n解析：小玄子智慧高，定性又好，为了完美发挥出自身的特性，因此不出神人合一而通过霜天线到达赤日；牺牲一点火系加成但是却换来一个群减和一个强力增益，小玄子简直就是本门梵海霜天线的代表（小玄子和上面小玉儿的推荐加点其实是一样的，真要说有啥不同的话小玄子这个点基本是无可替代的，而玉儿走其他线也同样非常强大）。总结，小玄子凭借120的高定性让其比其他赤日众能多做非常多的事，感觉他也是王重广最得意的弟子，王老头表示，表现好，下一个掌门就是你了！\n\n### 苗德一\n\n技能路线：玄石功→六出术→金关玉锁功→封魔阵法→神人合一→赤日神回（共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  梵心诀（共2点）\n\n  共用120点，剩余0点\n\n解析：整个龙吟剑第一杀马特，看看他的蜡烛，再看看他手上的大锤，王老头都要被他吓哭。杀马特凭借其2点奇术就是不走寻常路，走封魔线到赤日，不是破坏就是要搞事，嗯，骚年你很有前途。总结，杀马特是个将个性进行到底的勇士，他哪怕打不死你，也要吓死你。\n\n### 张智清\n\n技能路线：太乙心经→天归纳气→神渡众生→天海无涯→神渡霜天（共38点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指→玄门天罡指（共24点）\n\n  素女周天功→回天诀→起死回生→紫玉神功（共23点）\n\n  天地变→花前月下→浪迹天涯（共21点）\n\n  梵心诀→晶冰玉结→梵海无边（共13点）\n\n  共用119点，剩余1点\n\n解析：小张和碧凌妹子以及采芹妹子并称为随机定性120中的三个代表，前两个妹子都给我弄的攻击性十足，小张这里为了不和两妹子重复，也为了整体的联动配合，因此小张这套加点偏向防御性：霜天和天罡的双冰加成，紫玉与天海的双火加成，加上双隐、双加血和群解的浪迹，小张的补师联防可谓滴水不漏；不要以为小张就没有攻击性了，贯虹和梵海两个最大性价比的减益技能他可是捏着呢，真正的可谓攻守兼备。总结，小张，你们三个代表的三位一体，就靠你守护了，两个漂亮妹子呢，自己好好把握（亲们可根据自己队伍具体情况给小张配置其他技能，小张很强的，定位和碧凌妹子采芹妹子非常像，将三个代表用好你会发现随机人物原来也可以很变态）。\n\n## 少林\n### 空念\n\n技能路线：绵掌→聚元功→斗换星移→鹤心化毒功→天极聚元功→万卦迷界→无转神极（共64点）\n\n  破玉拳→华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝（共39点）\n\n  柔云劲→以柔克刚（共5点）\n\n  洗髓心法→素女周天功（共3点）\n\n  天阳决→怒神吼（共3点）\n\n  一啸风生（共2点）\n\n  狂风怒（共2点）\n\n  十字手（共2点）\n\n  共用120点，剩余0点\n\n解析：老和尚由于怜悯和勇气好，因此可以考虑走武当回复线出无转，加上华山物攻线补刀，还是很OK的（武器用56级降汝剑加慧根）；由于有万卦，因此出双格挡还是很有必要的（怒神加以柔克刚），剩下的点数补出一些保命和解控制的小技能，这套点让老和尚焕发出惊人的战力（老和尚比一般的外攻武士要厉害，能打能加血，格挡还能创造很多无敌，加上老和尚有不低的9W血，关键时候还能勉强当个副T拉仇恨）。总结，老和尚的归宿原来是武当啊（老和尚走本门外攻同样不俗，只是发挥不出自身的高怜悯，感觉有点浪费）。\n\n### 虚空\n\n技能路线：破玉拳→尧白功→无极聚元功→霞莲护体功→天形功→玄黄剑罡（共39点）\n\n  绵掌→柔云劲→以柔克刚→刚柔并济→纯阳无极功→万卦迷界（共39点）\n\n  长拳→擒拿术→虎罗汉→龙罗汉→睡罗汉（共24点）\n\n  虎啸功→铁布衫→百毒不侵（共13点）\n\n  天阳决→怒神吼（共3点）\n\n  十字手（共2点）\n\n  共用120点，剩余0点\n\n解析：号称耐王的虚空，其坦度自然是毋庸置疑的，龙吟剑第一坦克。这套加点主要围绕两个物理无敌和两个冰火无敌展开：玄黄、霞莲抛开冰火无敌不说，单本身就是很强的技能，玄黄能大量补充虚空的冰火魔抗，就算不无敌加上来的那个坦度也足够让很多敌人绝望了；万卦和睡罗汉一个群体一个单体，视具体情况使用，灵活而又实用，万卦就是单纯用来回血也是不错的选择；接下来的点数补出百毒、十字以及双格挡，补充了异常抗性不说又能保证无敌的触发，点数也是一点也没有浪费，非常之令人赏心悦目的处理。总结，耐王虚空实至名归，是最灵活也是最稳健的超级盾牌，不过也许由于挨打挨多了，以至于脸上是万年苦瓜。祝福他早日摆脱悲惨的往事，和赤大仙终成眷属（虚空走极阳当然也是很强的，如果队伍中的上官翼或者拳冠清出了的话就没必要重复，个人感觉还是这套加点性价比最高，适用于各种场合，而且这套点里面的偷体力技能也完美契合虚空盾的定位）。\n\n---\n我在前面仇恨详解的帖子末尾提到：理论上治疗与无敌结合才是最牛的盾。那么实践为什么不与理论结合呢？所以虚空/蓝彩萦的技能路线是这样的：  \n破玉拳\u003e尧白功\u003e无极聚元功\u003e霞莲护体功\u003e天形功\u003e玄黄剑罡（共39点）  \n绵掌\u003e聚元功\u003e斗换星移\u003e鹤心化毒功\u003e天极聚元功(共24点）  \n长拳\u003e擒拿术\u003e虎罗汉\u003e龙罗汉\u003e睡罗汉(共24点）  \n洗髓心法\u003e刻玉指\u003e天地变\u003e花前月下(共14点）  \n魔化心法\u003e杀声震天（4点）  \n天阳决\u003e一啸风生（3点）  \n总共108点\n### 空清\n\n技能路线：伏虎式→金刚诀→龙爪功→金刚般若拳→少林九阳功→世界大千（共63点）\n\n  破玉拳→华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝（共39点）\n\n  绵掌→聚元功→斗换星移→鹤心化毒功（共14点）         \n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：大胡子空清长的凶，个子却小，实在是很喜感的存在。嗯，既然这货这么凶，就给他来个凶的加点：世界大千和少林九阳的效果都看到了吧，让个武当物攻打手先手一个无转为他铺路，然后他一个世界大千，然后他外攻300%物防500%...接下来再来个金刚般若，怎么样，凶不凶~没有人配合的时候龙爪起手，然后再世界大千，然后这货又雄起了...因为少林九阳和大千的超高防御加成，这货有成为物攻副盾的可能，这样出斗转就很有价值了，后面的鹤心化毒又能解毒解失血，最后再来个素女走位，你有没有觉得这货其实也是个多面手（单杀、补刀、群攻、拉仇恨、解状态...）。总结，大胡子只要能让敌人失血，他就瞬间化身修罗；作为少林首席大弟子，也算是很好继承了老和尚空念的衣钵。老和尚表示，少林有你，我可以安心去武当了。\n\n### 空渡\n\n技能路线：虎啸功→铁布衫→百毒不侵→金刚罩体→少林九阳功→世界大千（共63点）\n\n  破玉拳→尧白功→无极聚元功→霞莲护体功→天形功→玄黄剑罡（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  绵掌→十字手（共3点）\n\n  共用119点，剩余1点\n\n解析：空渡是勇气正义的代表人物，有坦度，也有一定输出，因此该套加点把他打造成一个强力副T和补刀打手：少林盾系路线保证物理坦度，玄黄线补正冰火坦度，大千作为其唯一的攻击手段有着非凡的意义，补刀的同时还能进一步增强自身坦度，不用说这正是副T补刀手最契合的效果了；花前帮队友隐身，十字给队友解束缚，这两个技能是最适合配合队友的，也符合副T定位。总结，空渡表示自己不但身子壮可以挡子弹，偶尔还可以来一发阴别人一把，大家可千万别被他老实的外表给骗了哦（空渡有当主力T的本钱，正义相当高，血量也是很优秀的，可以出纯盾系的技能当主力T培养）！\n\n### 空见\n\n技能路线：太虚心法→梵心诀→火神三元→焚火无垠→天火蚀月→神人合一→赤日神回（共64点）\n\n  长拳→擒拿术→虎罗汉→龙罗汉→睡罗汉（共24点）\n\n  虎啸功→铁布衫→百毒不侵→金刚罩体（共23点）\n\n  披荆斩棘→百步神行（共5点）\n\n  绵掌→十字手（共3点）\n\n  共用119点，剩余1点\n\n解析：整个龙吟剑中火抗最高的胖子。空胖子是正义智慧成长，火攻不低，因此可以考虑当个副火攻手兼副坦：神人线直奔赤日，赤日有一定输出还能拉怪，且神人既加火攻又加火抗，对于空胖子来说是再合适不过了；睡罗汉物理无敌让空胖子有了当盾的本钱，加上本身高火抗，队友扔个人魔合一或者霜天啥的再帮他把冰抗补上去，他的坦度其实已经非常可观了；百毒护身，金刚罩体加防，百步防昏睡配合睡罗汗，加个十字防束缚，空胖子正式成型。总结，空胖子表示他的脂肪就是他的火力，哪怕拼了这身肥肉不要也要混个出场，不然都对不起他主线人物的设计。\n\n### 明智\n\n技能路线：长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环（共24点）\n\n  洗髓心法→刻玉指→天地变→花前月下→浪迹天涯（共24点）\n\n  太虚心法→玄石功→六出术→金关玉锁功（共14点）\n\n  绵掌→十字手→八卦掌（共6点）\n\n  杀声震天→修罗归元（共5点）\n\n  狂风怒→奔雷劲（共5点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：6点奇术，怜悯成长，嗯，这是和巫如霜一样的定位，出和小巫巫一样的路线就可以很厉害（理由请去看英雄门巫如霜的路线解析）。当然，如果你不想路线重复，也可以把魔教那条恐惧线换成华山的眩晕也是可以的，反正控制的技能一共就那么多，把群控最强的地龙保留下来其他你自由搭配，再补上一些补师的加血和解控技能基本上就很OK的了。总结，围绕6点奇术做文章你就很明智了。\n\n### 明仁\n\n技能路线：天阳决→怒神吼→以战养伤→倒行逆气→气盖山河→玄冥之力（共39点）\n\n  太虚心法→梵心诀→晶冰玉结→梵海无边→冰封万里→神渡霜天（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下→浪迹天涯（共24点）\n\n  英仙阵→贯虹指（共11点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用120点，剩余0点\n\n解析：明仁和英雄门高夏山是相互呼应的，连定性BUG都一样，真实定性都只有120而不是显示的126（很有意思的是高夏山是最终怜悯高过智慧，而明仁则刚好相反）。明仁由于没有奇术，因此主防御加点为主：他的点和大玲子的其实差不多，理由可以参照峨眉孙碧玲的；唯一有变动的在于明仁霜天线走的是梵海，多了一定的攻击性（这也是结合明仁智慧怜悯成长而定的，加上明仁冰攻还不错，这样明仁在前期既能当补师的同时还能有一定冰系输出，而且冰火双群减也更利于他配合冰火法师大范围输出，适用性更强）。总结，玄冥四天王之中输出能力最强的，有发展DPS的潜力，当然，前提是把智慧提上850（此配点不唯一，视其他补师而定，个人感觉这套加点最符合明仁本身的特性和定位，也更容易搭配其他人）。\n\n### 见义\n\n技能路线：菩提经→普陀功→金刚伏魔功→如来神功→千叶如来→世界·大千（共63点）\n\n  洗髓心法→金雁功→芙蓉剑→峨嵋紫英剑→幻影无形剑→红蝶真剑（共39点）\n\n  刻玉指→天地变→花前月下（共13点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  共用120点，剩余0点\n\n解析：小光头见义是勇气怜悯成长，适合56级勇气怜悯装，因此可以走半奶半物理输出路线：本门的如来大千线既有大千的输出和加成，又有诸如金刚伏魔的单补和如来神功的群补，并且还有强大的减益千叶，实在是太契合小义子了；这里又要说一下，小义子的真实定性和黄晓蓉一样有BUG，实际都只有110，这种高不高低不低的鸡肋定性，出个红蝶幻影啥的减减怪的攻击是最合适的。剩下的15点补出花前、素女以及十字手，功能性进一步增强。总结，小义子定性要是能突破120，他可以起飞。\n\n### 见轩\n\n技能路线：太虚心法→梵心诀→火神三元→焚火无垠→天火蚀月→神人合一（共39点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环→人魔合一（共39点）\n\n  神魔同体（共20点）\n\n  神魔灭世（共18点）\n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：又一个厉害的小光头，小轩子比小义子还要更出彩：本身自带火属性，且勇气智慧成长，嗯，这是标准的魔攻灭世路线的属性；由于火攻成长高，因此神人合一給与他的火攻加成也是很可观的，为后面他的灭世打出伤害奠定了基础；灭世众到后期都能有很不错的输出，小光头在灭世众中还属于比较靠前的，就因为他是火属性，可以享受的加成多；小轩子短板在于真气不太够，不到4000，且轻功也不算高（不过比华山杨瘸子要好多了，杨瘸子是没有魔影迷踪根本不能用...），最好能在鞋子上打个涣息补真气；最后的素女不用说，通用保命补走位，用剩下的4点出出来没有问题。总结，小轩子和小义子这两个光头小和尚属于随机人物里面比较出彩的存在，他俩为少林挣足了面子，也让老和尚空念见识到了什么叫做后生可畏，英雄出少年。\n\n## 武当\n### 吴尘风\n\n技能路线：长拳→擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸→ 苍龙·无悔（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：自带CD减1，光是这一条就注定了小吴童鞋BUG般的地位，更不用说这货四维成长也贼好，还尼玛有4点奇术...龙吟剑中高富帅中的高富帅，总算知道为啥武当当年被阴得那么惨还那么强，看看，随便出个少年当掌门一样震慑整个武林。要说龙吟剑中有三个妖孽般的存在，大妈算一个，小玉儿算一个，第三个不用想就是这货了（小展和离儿完全是凭借主角光环和神器才能出场的，否则连很多随机人物都能完爆他俩）。因为有CD减1的BUG属性，小吴其实走很多路线都可以：可以苍龙背刺，可以本门无转束缚，可以圣灭物理群攻，甚至还可以灭世...我从整体团队需要及搭配上来考虑，选择把小吴打造成龙吟剑第一刺客来发挥他的特性（当然，前提是把外攻拳套给他）：因为有减1CD属性，所以可以实现龙凌和苍龙的无缝连接，这意味着他每回合都有强力背刺招式输出（不要以为龙凌4千背伤很低，有外攻拳套的小吴外攻能达到恐怖的7W，打脆皮一个龙凌下去就能秒了，根本用不到苍龙）；走华山控制路线能发挥他4点奇术的功效，比单纯走华山外攻路线更有性价比；剩下的点数补出双隐，让这个刺客能游走得更风骚。总结，自从有了小吴，咱打BOSS腰也不酸了腿也不疼了，老想着去爆BOSS的菊花了。（如果你的团队需要小吴去做其他事情，你同样可以把他打造成其他神兵利器，没办法，他本钱厚...）\n\n### 杨古泉\n\n技能路线：太虚心法→梵心诀→火神三元→焚火无垠→天火蚀月→神人合一（共39点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环→人魔合一（共39点）\n\n  神魔同体（共20点）\n\n  神魔灭世（共18点）\n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：武当又放出了一个帅气又厉害的人物，泉哥那四维，那三攻，简直就是为灭世量身定做的一样。泉哥不像其他人，他无论是几周目，无论是什么阵容搭配，他都绝对是灭世人物核心代表。由于其泽属性，可以搭配享受的阵系加成也非常多，对他的3攻增幅自不用说，从这方面说，他是灭世众里最佳挂阵人选，也是理论上经过增幅能打出最高灭世伤害的人。泉哥的短板在于血量有些少，前期真气也有些不太够用，可能和他的泽属性有关吧（好在他四维好，鞋子可以穿最好的防装，稍微弥补了下他血量的不足；前期真气不够可以在鞋子上打个涣息，后期感觉够用了可以再换成龙息）。总结，龙吟剑里永远大器晚成的男人。\n\n### 孤成允\n\n技能路线：柔云劲→神门十三式→太极玄法→天极八卦→苍天无极→无转·神极 （共63点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  长拳→擒拿术→游龙出水→飞龙在天（共14点）\n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：刀哥是勇气怜悯成长高，且还有5点奇术，因此走本门无转是最佳选择：无转前置的天极八卦、苍天无极都是很不错的技能，有伤害又带控制束缚；天道线不走外攻线，走控制线更能发挥刀哥的奇术，然后用剩下的点数补出飞龙和素女。这样我们来看一下，刀哥其实已经具备了非常多的控制技能了，有晕眩，有束缚，有失血，还有睡眠，控制面非常的广；因为有天道，所以物理输出方面也是有保证的，无论是单还是群刀哥都能有一定输出。这个点下的刀哥主要是围绕他的奇术做文章，把他打造成一个带控制的物理输出手，效果比一般的纯物理打手要理想很多。总结，刀哥不是一般的打手，他有毒。\n\n### 张清玄\n\n技能路线：太虚心法→太乙心经→天归纳气→神渡众生→天海无涯→神渡霜天→赤日·神回（共64点）\n\n  长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  天阳决→狂风怒→奔雷劲（共6点）\n\n  十字手→八卦掌（共5点）\n\n  洗髓心法→素女周天功（共3点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：张天师有着不错的怜悯和智慧，加上还有6点奇术，围绕这两个点做文章即可：走太乙医生路线到赤日，中间的两个神渡和天海都是非常不错的技能，有加血，有回复，有冰火攻加成，赤日的存在也令张天师有一定的补刀能力；6点奇术出最强控制地龙是没有什么疑问的，中间的前置技能也都是很有用的技能；剩下的点数依次补出八卦掌、素女、奔雷、一啸，张天师已经超神了。拥有强大的控制的同时他还有一发输出，并且他还有奶，还能增益减抗，张天师表示这些都不在话下，反而被掌门小吴看扁了那就大大不妙了，毕竟一把年纪了脸上也挂不住。总结，信天师得永生，张天师带你畅游龙吟剑！\n\n### 卜南松\n\n技能路线：长拳→披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  柔云劲→以柔克刚→刚柔并济→纯阳无极功→万卦迷界（共38点）\n\n  洗髓心法→刻玉指→天地变→花前月下→浪迹天涯（共24点）\n\n  魔化心法→杀声震天→修罗归元（共6点）\n\n  天阳决→狂风怒→奔雷劲（共6点）\n\n  素女周天功（共2点）\n\n  十字手（共2点）\n\n  一啸风生（共2点）\n\n  共用119点，剩余1点\n\n解析：7点奇术，怜悯成长，又是一个优秀的控制补师。和巫如双明智等人定位相同，这里有变动的是出了本门万卦，多了偷体和拉人；保留了奔雷施毒，并且有双隐，有浪迹，还有十字等解控制的招式，这是个既能控制别人也可以解别人控制的角色。总结，南松有着你看不懂的潜力。\n\n### 周镜深\n\n技能路线：天阳决→一啸风生→回天混元功→灵台五转功→日月大挪移→玄冥之力（共39点）\n\n  达摩心法→菩提经→轻身术→无上聚力诀→浩瀚佛光→千叶如来（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指→玄门天罡指（共24点）\n\n  太虚心法→梵心诀→晶冰玉结→梵海无边（共14点）\n\n  十字手（共2点）\n\n  素女周天功（共2点）\n\n  共用120点，剩余0点\n\n解析：真实定性高达130，玄冥四天王老二，整个龙吟剑中定性第三，其强大是毋庸置疑的：玄冥走日月线，有一啸的回血，又多了日月的减攻击，攻守兼备；千叶线、天罡线以及梵海线让小周具备了双群加和双群减，无论是单体还是群体增益和减益都是发指的强；最后4点补出十字和素女，120点干干净净（当然，此配点不唯一，还是要视队伍具体阵容而定，小周这个点联动一个防御补师基本完美了）。总结，小周为随机人物代言，随机也有随机的风采。\n\n---\n周镜深技能路线：  \n天阳决\u003e怒神吼\u003e以战养伤\u003e倒行逆气\u003e气盖山河\u003e玄冥之力（共39点）  \n绵掌\u003e聚元功\u003e斗换星移\u003e鹤心化毒功\u003e天极聚元功\u003e万卦迷界（共39点）  \n洗髓心法\u003e刻玉指\u003e天地变\u003e花前月下\u003e浪迹天涯（共24点）  \n魔化心法\u003e杀声震天（共3点）  \n怒神吼之后万卦 可以创造9人外功无敌2回合 还可以回复体力15%强\n\n### 吴婷佳\n\n技能路线：魔化心法→夜月流→寒云劲→天寒地冻→冰月极光→修罗斩月→魔帝无天（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：冷MM做梦都没想到冰攻老二居然在武当，武当真是万年产妖孽的地方...作为龙吟剑冰攻第二，智慧又那么高，小佳佳出魔帝是没啥好说的了，属于冰攻民工点。佳佳外形好，声音萌，特别是一周目里，冷MM不在场的情况她就是冰攻BOSS，其存在对整个团队而言有着非凡的意义。总结，冷MM表示只要小佳佳能去魔教，立马收为首席大弟子，并传授雪晶等全部冰攻奥义，对此，小吴掌门表示小佳佳已经是他的人了（废话，没看到连姓都一样吗），想动他的人先问过他的外攻拳套答不答应，看样子武林又要有一场腥风血雨了...\n\n### 房晓琳\n\n技能路线：太虚心法→梵心诀→火神三元→焚火无垠→天火蚀月→神人合一→赤日神回（共64点）\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：小房子智慧好，且还是火属性，火攻也还OK，那么赤日民工点没啥争议了。和师姐吴婷佳号称武当冰火双娇，只是和师姐比起来有些萌蠢萌蠢的。总结，小房子强烈要求和赤阳子赤大仙对换属性，怎么说自己的师姐也是冰攻第二，自己为什么就不能火攻第二；而且换了属性赤大仙身板也更硬了，起码多个1W多血不是。对此，赤大仙吓得当场发飙：尼玛火攻给你了老子还混个屁啊，好歹现在凭借火攻还能混个一发男出场，换了火攻估计板凳坐穿老子都别想上场一次！你还别说，赤大仙真是个明白人，这么简单就识破了小房子的阴谋，真不愧是老江湖啊。\n\n## 华山  \n### 邱玉清\n\n技能路线：魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环→人魔合一→魔帝无天（共64点）\n\n  混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共38点）\n\n  太虚心法→玄石功→六出术→金关玉锁功（共14点）\n\n  洗髓心法→素女周天功（共3点）\n\n  共用119点，剩余1点\n\n解析：华山派真是个悲剧的门派，掌门是个瘸子，二当家也是个很平庸的角色，本来我是不想把他写出来的，看了看他的水属性加上还有3点奇术，还是勉为其难让他露个脸：出魔教恐惧控制线到魔帝，有控制，也有魔帝的冰系输出；出天道让二当家好歹能算是个冰攻手，然后出个太乙的金关，他能做的事基本也就这么多了。总结，二当家本不想出面，奈何瘸子太坑，只好硬着头皮上了。\n\n### 焦剑恩\n\n技能路线：华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝→天剑极流（共63点）\n\n  长拳→擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  逍遥游（共2点）\n\n  共用120点，剩余0点\n\n解析：小恩子虽然个子小，脾气倒是很大，属性方面也是典型的物理打手。出本门的绝学对他来说最为合适，当然也可以出苍龙，看队伍的需要和搭配。这货属于民工物理打手，没什么很大的亮点，但是可堪一用。总结，希望小恩子快快长大，早点把杨瘸子换下来，华山已经悲剧的不行了有木有。\n\n### 宇向华\n\n技能路线：华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝→天剑极流（共63点）\n\n  洗髓心法→金雁功→芙蓉剑→峨嵋紫英剑→幻影无形剑→红蝶真剑（共39点）\n\n  刻玉指→英仙阵→贯虹指（共13点）\n\n  绵掌→十字手（共3点）\n\n  素女周天功（共2点）\n\n  共用120点，剩余0点\n\n解析：华山总算是出个能看的人物了（还是个随机的），但是很可惜，小华子也是有定性BUG，真实定性只有115左右。鉴于其物理攻击还是很高的，因此出本门天剑加上峨眉的外攻减益对他而言是最适合的（讲真，如果小华子定性上了120，我更倾向于把峨眉外攻改成少林千叶减益那条线，会更强）。剩下的点数出个性价比最高的减益贯虹，点个十字手和素女，小华子已经具备了首发的实力。总结，也是个被定性BUG坑了的主，定性更高点的话，嗯，杨瘸子可以下岗了。\n\n### 白若芙\n\n技能路线：太虚心法→梵心诀→晶冰玉结→梵海无边→冰封万里→神渡霜天→赤日·神回（共64点）\n\n  达摩心法→菩提经→普陀功→金刚伏魔功→如来神功→千叶如来（共39点）\n\n  洗髓心法→刻玉指→英仙阵→贯虹指（共14点）\n\n  素女周天功（共2点）\n\n  共用119点，剩余1点\n\n解析：华山的第二个随机亮点人物，怎么感觉华山的亮点全在随机了...小若芙的真实定性大概在116-120这个范围内，还算是不错，至少比那些有定性BUG的好太多了。我看了下小若芙是怜悯智慧成长，结合她不错的定性，让她半奶半输出兼减益是再适合不过了：走梵海霜天线到赤日，一方面梵海霜天线中既有强大的梵海减益，又有强大的霜天增益，还有赤日的补刀，这条线太具性价比了；因为小若芙有慧根，出伏魔千叶线既有奶又有千叶的物理抗减益，也是非常厉害的；最后补个贯虹和素女走位，小若芙正式成型（当然，亲们同样可以放弃赤日的那点输出，补出其他的增益减益或者医生技能，千叶线也可以走无上那条，选择搭配只要在这个思路范围内都是可以的）。总结，小若芙你要是不想跟杨瘸子了，小吴童鞋表示随时愿意接纳你，另外像狮子、老乞丐、老王头好像也都有此意向，什么，老和尚你也想收个女弟子了？！卧槽这个世界太疯狂！\n\n## 丐帮    \n### 洪熙公\n\n技能路线：擒拿术→游龙出水→飞龙在天→降龙有悔→龙凌九啸→ 苍龙·无悔（共63点）\n\n  破玉拳→华山剑→太岳三清峰→夺命三仙剑→孤行九剑→天道剑绝（共39点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  素女周天功（共2点）\n\n  逍遥游（共2点）\n\n  共用120点，剩余0点\n\n解析：老乞丐虽然自带8%最高暴击，只是在这个只要是个攻击手就人手一本天道的时代，好像没什么卵用...撇开这个不说，老乞丐的外攻肯定不是盖的，非常高，他出圣灭、无转、苍龙、天剑都是可以的，看每个人的喜好和想法了。我这里是选了本门绝学，感觉更契合老乞丐一些，也为了BOSS战多个单体物理高输出。总结，老乞丐作为民工物理打手的扛把子，哪条物理线他都能够驾驭，要不然怎么当民工王。\n\n### 黄甫燕\n\n技能路线：披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天→苍龙·无悔（共63点）’’\n\n  破玉拳→混元掌→云台指→千仞指→霞光连剑诀→天道剑绝（共39点）\n\n  擒拿术→游龙出水→飞龙在天（共13点）\n\n  绵掌→十字手（共3点）\n\n  华山剑（共2点）\n\n  共用120点，剩余0点\n\n解析：本来是起飞到爆炸的角色，看看那定性，看看那奇术，加上勇气智慧成长，这是个可以做非常多事情的人。可是，他的定性有BUG，实际只有110，让他的实力有很大下滑。看了看他7点奇术，我想了下还是没让他出灭世，感觉发挥不出他的特性：走地龙线到苍龙既有最强的控制，又有最强背刺单体物理输出，天道的前置控制技能也非常契合他的髙奇术；剩下的点数补个飞龙强化一下单体输出，也多个昏睡的控制手段，这套点已经基本将燕老头的特色发挥出来了。总结，燕老头本来是超一线的实力，直到他膝盖中了一箭。\n\n### 黄晓蓉\n\n技能路线：绵掌→聚元功→斗换星移→鹤心化毒功→天极聚元功→万卦迷界→无转神极（共64点）\n\n  洗髓心法→金雁功→芙蓉剑→峨嵋紫英剑→幻影无形剑→红蝶真剑（共39点）\n\n  柔云劲→以柔克刚（共5点）\n\n  天阳决→一啸风生→回天混元功（共5点）\n\n  素女周天功（共2点）\n\n  十字手（共2点）\n\n  怒神吼（共2点）\n\n  共用119点，剩余1点\n\n解析：上梁不正下梁歪的典型！老爹那么多好的方面不像，唯一一个定性BUG不好的地方倒给像过来了。本来也是可以起飞的人物，又是这个定性BUG给弄的人不像人鬼不像鬼。110定性不高不低，加上勇气怜悯成长，出无转加峨眉外攻效果最优：走医生路线的万卦到无转，加上峨眉的外攻，无论是单体还是群体物理补刀都还OK，也有峨眉的减益；为了万卦无敌的出发，把两个格挡都给出出来，最后补一些素女十字的小技能，最终弄了个物理补刀补师的定位。总结，晓蓉儿比她老爹膝盖多中了一箭。\n\n### 拳冠青\n\n技能路线：达摩心法→虎啸功→铁布衫→百毒不侵→金刚罩体→少林九阳功（共39点）\n\n  绵掌→十字手→八卦掌→乱环诀→两仪乾坤→苍天无极（共39点）\n\n  无量定天（共20点）\n\n  洗髓心法→刻玉指→天地变→花前月下（共14点）\n\n  聚元功→斗换星移（共5点）\n\n  天阳决→一啸风生（共3点）\n\n  共用120点，剩余0点\n\n解析：和虚空、上官翼并为龙吟剑最给力的三面盾，为了三面盾能在不同场合发挥出各自的特色，冠青大叔选择在无量之后学习花前和斗换：花前把仇恨高的角色隐藏起来，斗换和一啸能加血的同时又能拉大量仇恨，特别符合本身盾的定位。总结，长得壮不见得是好事，一天到晚总要挨打有木有。\n\n### 贾芷雪\n\n技能路线：披荆斩棘→百步神行→散功掌→嫁衣十八跌→地龙震天（共39点）\n\n  魔化心法→九阴决→魔影迷踪→黑煞灵指→七星连环（共24点）\n\n  洗髓心法→刻玉指→天地变→花前月下→浪迹天涯（共24点）\n\n  太虚心法→玄石功→六出术→金关玉锁功（共14点）\n\n  绵掌→十字手→八卦掌（共6点）\n\n  杀声震天→修罗归元（共5点）\n\n  狂风怒→奔雷劲（共5点）\n\n  素女周天功（共2点）\n\n  一啸风生（共2点）\n\n  共用120点，剩余0点\n\n解析：这货又有定性BUG，真实定性只有100，感觉丐帮是不是有定性BUG传统，怎么能用的几个人里面老是有这种问题，纯粹恶心人是不是？本来也是可以小起飞的人，因为定性BUG，只好围绕7点奇术做文章了，路线参照巫如双的就好，走控制补师路线。总结，你自己好好反省吧！\n\n至此，龙吟剑主要战力技能路线解析全部完毕。以上的这些配招只供参考，且很多方案不唯一，有讨论的空间，欢迎斧正。另外，像苏起、林千蓉、周永萍、赵之柱、洪文谷等还是有练的价值的，这里不一一列出一是因为太麻烦，二是很多配招其实和我列出的很多人物的基本一致。如果亲们有更好的方案，也大可把你们的思路秀出来，补充到这个帖子里。以上，致敬所有热爱武林立志传的吧友，感谢大家一直对这个游戏的热爱。\n\n这里吐槽一下，除去大妈和玉儿两个超然怪物不算，八大门派武当少林大获全胜，华山最悲剧，丐帮最恶心人，其中武当更是传说中盛产妖孽的地方...\n\n# 技能书出处\n![[★武林立志传龙吟剑技能树+介绍+出处.doc]]\n\n# 装备出处\n![[eq1.html]]\n\n# 人物60级属性表\n![[武林立志传人物60级属性.xlsx]]\n\n# 武功选择模拟器\n![[武林立志传武功选择表bycsb01421v20190426m.xlsx]]\n# 阵法\n神风印      动物增伤10%  \n属性：天*1、风*1  \n范围2人数2  \n  \n神皇印      动物增伤10%  \n属性：火*1、风*1  \n范围2人数2  \n  \n神帝印      动物增伤10%  \n属性：水*1、风*1  \n范围2人数2  \n  \n雷动印      人型增伤10%  \n属性：天*1、雷*1  \n范围2人数2  \n  \n雷天印      人型增伤10%  \n属性：火*1、雷*1  \n范围2人数2  \n  \n雷霸印      人型增伤10%  \n属性：水*1、雷*1  \n范围2人数2  \n  \n降魔印      鬼怪增伤10%  \n属性：天*1、山*1  \n范围2人数2  \n  \n封魔印      鬼怪增伤10%  \n属性：火*1、山*1  \n范围2人数2  \n  \n无魔印      鬼怪增伤10%  \n属性：水*1、山*1  \n范围2人数2  \n  \n菩提印      慧根增加200%  \n属性：泽*2  \n范围2人数2  \n  \n霸龙阵      外功增加300%  \n属性：天*2、泽*1  \n范围3人数3  \n  \n火龙阵      火功增加300%  \n属性：火*2、泽*1  \n范围3人数3  \n  \n水龙阵      冰功增加300%  \n属性：水*2、泽*1  \n范围3人数3  \n  \n金刚阵      防御增加300%  \n属性：地*2、山*1  \n范围3人数3  \n  \n火淩阵      火抗增加300%  \n属性：火*1、山*1、地*1  \n范围3人数3  \n  \n玉水阵      火抗增加300%  \n属性：水*1、山*1、地*1  \n范围3人数3  \n  \n十全阵      药品冷却时间减少40%  \n属性：天*1、泽*1、火*1、雷*1  \n范围3人数4  \n  \n华陀阵      药品冷却时间减少40%  \n属性：风*1、水*1、山*1、地*1  \n范围3人数4  \n  \n红莲阵法      体力增加5%  \n属性：天*1、雷*1、山*1、地*1  \n范围4人数4  \n  \n金莲阵法      怒气增加5%  \n属性：天*2、风*1、地*1  \n范围4人数4  \n  \n紫莲阵法      真气增加5%  \n属性：泽*1、火*1、雷*1、水*1  \n范围4人数4  \n  \n华仙境      晕眩免疫  \n属性：天*1、雷*1、山*1、地*1  \n范围4人数4  \n  \n罗汉境      昏睡免疫  \n属性：泽*1、风*1、山*1、地*1  \n范围4人数4  \n  \n太极境      束缚免疫  \n属性：火*1、雷*1、山*1、地*1  \n范围4人数4  \n  \n全真境      迷惑免疫  \n属性：风*1、水*1、山*1、地*1  \n范围4人数4  \n  \n修罗境      恐惧免疫  \n属性：天*1、雷*1、山*1、地*1  \n范围4人数4  \n  \n天痕境      失血免疫  \n属性：泽*1、风*1、山*1、地*1  \n范围4人数4  \n  \n神圣境      施毒免疫  \n属性：风*1、水*1、山*1、地*1  \n范围4人数4  \n  \n天道乾坤      受人型攻击减伤30%  \n属性：天*1、泽*1、雷*2、山*1、地*1  \n范围5人数6  \n  \n灭龙圣印      受动物攻击减伤30%  \n属性：天*1、泽*1、风*2、山*1、地*1  \n范围5人数6  \n  \n天魔幻境      受鬼怪攻击减伤30%  \n属性：天*1、泽*1、火*1、水*1、山*1、地*1  \n范围5人数6  \n  \n疾风仙印      招式冷却时间减少40%  \n属性：天*1、雷*1、火*1、水*1、风*1、地*1  \n范围5人数6","lastmodified":"2023-06-15T21:37:40.9666676+02:00","tags":[]},"/permanent/%E6%B3%95%E5%B8%88%E7%9A%84%E8%AF%BB%E4%B9%A6%E9%98%81":{"title":"法师的读书阁","content":"\n[[permanent/西汉的三公九卿|西汉的三公九卿]]\n\n[[permanent/诸葛亮的北伐|诸葛亮的北伐]]\n\n[[permanent/南蛮DLC地名|南蛮DLC地名]]","lastmodified":"2023-06-15T17:07:22.4136167+02:00","tags":["读书"]},"/permanent/%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91-Test-Driven-Devlopment":{"title":"测试驱动开发 Test-Driven Devlopment","content":"\n### TDD 的规则\n1. 先写测试用例(失败), 再开始写代码\n2. 在单元测试中不要写多余的提示内容.\n\n### TDD 的影响\nin other words, 为什么要使用 tdd\n- 改变视角. TDD 强迫开发人员变成用户\n- 可测试性. 如此开发的软件是一个完全「可测试」的软件, 并具有积极的耦合特性.\n- 文档示例. 测试用例也可以被看作文档的一部分, 展示了应该如何正确使用类.\n","lastmodified":"2023-06-15T12:55:02.9425947+02:00","tags":[]},"/permanent/%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E5%AD%98%E5%82%A8":{"title":"浮点数的存储","content":"\n- ![[attachments/Pasted image 20230314111717.png#inl|src: wikipedia]]\n| 精度    | Sign(S) | Exponent(E) | Significand(M) |\n| ------- | ------- | ----------- | -------------- |\n| 32 bits | 1       | 8           | 23             |\n| 64 bits | 1       | 11          | 52             |\n\n##### Sign\n- 符号位, 0 表示正, 1 表示负\n\n##### Exponent\n- 指数部分, 表示 2 的多少次方\n- 需要减去偏移量 $2^{|E|} - 1$\n\n##### Significand\n- 小数部分, 也叫 fraction, Mantisse\n- 要表示 1.xxxxx, 其中 1. 省略, 只存储 xxx 部分\n\n#### 规范化\n- 为了使农示法的固定部分统一，科学计数法(用于十进制)和浮点表示法(用于二进制), 都在小数点左边使用了唯一的非零数码，这称为规范化","lastmodified":"2023-06-15T17:17:19.2462187+02:00","tags":["计组"]},"/permanent/%E7%89%A9%E7%90%86%E5%B1%82%E4%BC%A0%E8%BE%93%E4%BB%8B%E8%B4%A8":{"title":"物理层传输介质","content":"\n#### 物理层的传输介质分类\n物理层的传输介质有:\n- 导向介质(即有线): 双绞线, 同轴电缆, 光纤电缆\n- 非导向介质(即无线): 无线电波, 微波或红外波\n\n#### 术语\n- trasmision medium 传输介质\n- guided media 导向介质\n- unguided media 非导向介质\n- fiber-optic cable 光纤电缆\n- coaxial cable 同轴电缆\n- twisted-pair cable 双绞线\n\n#### 导向介质\n\n#### 非导向介质\n\n##### 无线电波\n- 3 kHz - 1GHz\n- 无线电通信\n\n##### 微波\n- 1 - 300GHz\n\n##### 红外波\n- 300 GHz - 400 THz\n- 高频, 低穿透\n- 比如用在遥控器","lastmodified":"2023-06-15T21:38:11.4244641+02:00","tags":["计组","计网"]},"/permanent/%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D":{"title":"电子签名","content":"\n#### 电子签名技术\n![[attachments/Pasted image 20230222083903.png|L|400]]\n- checksum: hash 算法如 MD5\n- 加密 checksum 用非对称私钥\n- 解密 要公钥\n- 成功保证 A, I\n- 不保证 C","lastmodified":"2023-06-15T13:50:24.7745849+02:00","tags":["安全"]},"/permanent/%E7%9F%A2%E9%87%8F%E5%9B%BE":{"title":"矢量图","content":"\n- vector graphic\n- 会将图片拆解成几何图形\n- 存储的数据是如何描绘这些几何图形\n    - 如, 记录圆心位置, 半径, 线型和颜色, 填充和颜色\n- 通常没有[[permanent/位图]]精细, 矢量图的质量与算法相关","lastmodified":"2023-06-15T21:32:31.0733295+02:00","tags":["计组"]},"/permanent/%E7%9F%A5%E8%AF%86%E5%A2%9E%E5%BC%BA%E5%A4%A7%E6%A8%A1%E5%9E%8B":{"title":"知识增强大模型","content":"\n#### 大规模预训练模型\n简称大模型, 主要类型有:\n- NLP语言处理大模型: 处理文本内容, 如 ChatGPT, 百度文心一言\n- 计算机视觉大模型: 主要处理图像内容, 如购物软件的搜图\n- 跨模态大模型: 多模态, 如 AI作画\n- 科学计算大模型: 能够更好地发现规律, 如蛋白质形态预测\n\n#### 知识增强大模型\n整合了知识图谱的大模型, 对歧义内容的处理能力更强","lastmodified":"2023-06-15T17:23:39.933982+02:00","tags":["AI","ML"]},"/permanent/%E7%A3%81%E4%BB%8B%E8%B4%A8%E5%AD%98%E5%82%A8%E8%AE%BE%E5%A4%87":{"title":"磁介质存储设备","content":"\n#### 磁盘\n- 硬盘, 磁盘\n- 有磁表示1, 无磁表示0\n- 两面可读写, 分磁道(轨道和扇区)\n- ![[attachments/Pasted image 20230316124504.png|L|500]]\n\n##### 磁盘数据读取的速度\n- 定位盘: 通常3ms\n- 旋转时间: 根据转速而定(7200转 最多8.2ms(1/120), 平均4.1ms)\n- 传输时间: 根据扇区长度而定, 1扇区(512 Bytes) 2.5μs\n\n#### 磁带\n- ![[attachments/Pasted image 20230316125044.png]]","lastmodified":"2023-06-15T13:12:46.3799521+02:00","tags":["计组"]},"/permanent/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%912209":{"title":"科学上网2209","content":"\n#### vultr\nxenonl.proton\ncloud compute, regular performance\ndebian 10\n5$\n\n#### ProxySU\nProgram tools\nv2ray模板库\nTCP\n\n#### v2rayN\n粘贴\n\n","lastmodified":"2023-06-15T17:45:31.3727035+02:00","tags":["工具使用"]},"/permanent/%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95":{"title":"笔记方法","content":"\n[[permanent/卡片盒笔记法|卡片盒笔记法]]\n\n### Tips\n[[permanent/记笔记的目标|记笔记的目标]]\n\n[[permanent/抄写于记忆或学习的收益很低]]","lastmodified":"2023-06-15T12:57:15.296165+02:00","tags":[]},"/permanent/%E7%AE%97%E6%B3%95":{"title":"算法","content":"\n[[permanent/B 树|B 树]]\n\n[[permanent/B+ 树|B+ 树]]\n\n[[permanent/Clustering#聚类算法|聚类算法]]","lastmodified":"2023-06-16T19:18:37.4036161+02:00","tags":[]},"/permanent/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0":{"title":"线性代数","content":"\n[[permanent/Linear Algebra Concepts 线性代数概念|Linear Algebra Concepts 线性代数概念]]\n\n[[project/3Blue1Brown - 线性代数的本质|3Blue1Brown - 线性代数的本质]]\n\n[[project/Project Asteria|Project Asteria]]","lastmodified":"2023-06-14T23:47:11.4513505+02:00","tags":[]},"/permanent/%E7%BB%9F%E8%AE%A1%E5%AD%A6":{"title":"统计学","content":"\n#### 统计指标\n[[permanent/平均指标|平均指标]]\n\n[[permanent/F1 Metrics|F1 Metrics]]","lastmodified":"2023-06-15T21:23:27.4989045+02:00","tags":["数学"]},"/permanent/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80":{"title":"编程语言","content":"\n#### 语言\n[[permanent/C++|C++]]\n\n[[permanent/Dafny|Dafny]]\n\n[[permanent/Java|Java]]\n\n[[permanent/Python|Python]]\n\n[[permanent/Smali|Smali]]\n\n#### 概念\n[[permanent/多态|多态]]","lastmodified":"2023-06-16T20:04:23.7950758+02:00","tags":[]},"/permanent/%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95":{"title":"网站更新记录","content":"\n-\u003e 指 Obsidian-Hugo 笔记部分的更新记录\n\n[[permanent/Ob发布到Hugo的尝试|Ob发布到Hugo的尝试]]\n\n##### 2023-06-14\n- 修改了 code, blockquote的样式\n- 改动了首页的样式\n- 修改了 footer 放上自己的信息\n- 修改了 site-title, page-title 样式\n- 增加了 `#content` 的蓝色边框\n- 修改了 template, 可以直接附上时间\n\n##### 2023-06-15\n- 修改了 h1 到 h6 的字体大小\n- 修改了 tag 页面的样式\n- 修改了 contact\n- 继续改首页\n\n##### 2023-06-16\n- 把所有旧md做了 quartz 的兼容, 就差发布了. 另外就是 projects 里的内容是应该整理起来的","lastmodified":"2023-06-16T20:20:24.5579963+02:00","tags":[]},"/permanent/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8":{"title":"网络安全","content":"\n## 病毒事件\n- [[permanent/1988 Internet Wurm|1988 Internet Wurm]]\n- [[permanent/2003 SQL Slammer|2003 SQL Slammer]]\n- [[permanent/2009~ Stuxnet|2009~ Stuxnet]]\n- [[permanent/2020 SolarWinds|2020 SolarWinds]]\n\n- [[permanent/蠕虫和蓝宝石的对比|蠕虫和蓝宝石的对比]]\n- [[permanent/Staatstrojaner|Staatstrojaner]]\n\n## 攻击/威胁种类\n- [[permanent/Access Token Manipulation|Access Token Manipulation]]\n- [[permanent/Buffer Overflows|Buffer Overflows]]\n- [[attachments/Project Asteria.pdf|Project Asteria]]\n- [[permanent/DOS, DDOS|DOS, DDOS]]\n- [[permanent/Mirai Botnet|Mirai Botnet]]\n- [[permanent/Phishing|Phishing]]\n- [[permanent/return-to-libc|return-to-libc]]\n- [[permanent/Rootkit|Rootkit]]\n- [[permanent/XSS|XSS]]\n- [[permanent/蠕虫|蠕虫]]\n\n## 概念, 模型, 技术方案\n- [[permanent/Bell LaPadula 模型|Bell LaPadula 模型]]\n- [[permanent/C2 C\u0026C|C2 C\u0026C]]\n- [[permanent/CVE]]\n- [[permanent/CVSS|CVSS]]\n- [[permanent/DNS|DNS]]\n- [[permanent/Dropper|Dropper]]\n- [[permanent/DRM|DRM]]\n- [[permanent/EPP, EDR, XDR|EPP, EDR, XDR]]\n- [[permanent/Kerberos|Kerberos]]\n- [[permanent/SIEM|SIEM]]\n- [[permanent/POC|POC]]\n- [[permanent/TTP(Tastics,Techniques and Procedures)|TTP(Tastics,Techniques and Procedures)]]\n- [[permanent/TTP(Trusted Third Party)|TTP(Trusted Third Party)]]\n- [[permanent/电子签名|电子签名]]\n- [[permanent/数字证书|数字证书]]\n- [[permanent/彩虹表|彩虹表]]\n- [[permanent/加盐|加盐]]\n- [[permanent/网络安全界张三|网络安全界张三]]\n\n\n## 项目\n- [[permanent/lmu - IT Security|lmu - IT Security]]\n- [[permanent/Security Code Review 101|Security Code Review 101]]\n\n## 软件, 资源\n- [[permanent/dig|dig]]\n- [[permanent/LOIC|LOIC]]\n- [[permanent/MITRE ATT\u0026CK|MITRE ATT\u0026CK]]\n- [[permanent/shodan.io|shodan.io]]\n- [[permanent/MITRE ATT\u0026CK|MITRE ATT\u0026CK]]\n- [[permanent/信息安全的原则|信息安全的原则]]","lastmodified":"2023-06-16T20:13:38.1299578+02:00","tags":[]},"/permanent/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%95%8C%E5%BC%A0%E4%B8%89":{"title":"网络安全界张三","content":"\n##### Alice\n发送方, 协议启动者\n\n##### Bob\n接收方\n\n##### Carol, Dave\n事件参与者\n\n##### Trend\ntrusted third party\n\n##### Walter\nA, B 的管理者, 看守者\n\n##### Eve\neavsdropper, 窃听者, 被动攻击者\n\n##### Mallory, Mallet\nmalicious attacker, 主动攻击者\n","lastmodified":"2023-06-15T21:32:09.806358+02:00","tags":["安全"]},"/permanent/%E8%84%B1%E5%A3%B3":{"title":"脱壳","content":"\n## 找OEP\n\n### 通用方法汇总\n#### 0、 概述\n- OEP通常在基址附近，经过较大的跳转来到\n#### 1、单步法\n- 一步一步跟踪，规则：\n    - 向上 `jxx` 不让实现，直接f4运行到 `jxx` 的下一行\n    - 如果跳转的下一行是 `call` 或者还是`jxx`(无论是向上还是向下), 则运行到再下一行\n    - 如果跑飞，在跑飞的地方不要f8，f7进去\n    - 其他一步一步往下，向下跳转也继续f8, 看到popad通常离OEP不远了\n#### 2、ESP突变\n**ESP突变**指关键句如(push)的下一句只有ESP一个寄存器变红(发生变化)\n\n1. 单步到ESP突变\n2. 在**数据窗口**跟随此时ESP的值(这是一个地址)，方法有三种：\n    1. 在ESP的值上`右键 - 在数据窗口跟随`\n    2. 在命令窗口: `dd 地址`\n    3. 在命令窗口: `hr 地址`\n3. 此时数据窗口中，会显示该地址的值，右键值，`断点 - 设置硬件访问断点 - Word/Dword`(两者都可)\n4. 运行（然后记得删除硬件断点`调试-硬件断点`）\n5. 再单几步就到了\n\n#### 3、两次内存镜像法\n1. 打开内存（`查看-内存`或`M`标记）\n2. 在程序的`.rsrc` 段 `f2`(右键-设置访问中断) (你知道，程序的段就是基址和后面一点那些)\n3. 运行\n4. 再打开内存，在 `401000`位置的段下一个段（也就是第二个段(?)），运行\n5. 然后按单步法的规则单几步就到了\n\n#### 4. 一步直达法\n- 据说只有UPX和ASPACK能用\n- 带壳程序的入口是pushad，那就查找`ctrl+f`popad(`ctrl+L`下一个查找结果), f4过去\n- 剩下的单步\n\n#### 5、 模拟跟踪法\n- 让OD自行查找\n- 在内存中找到 `SFX,imports,..`  一行，在命令行输入:`tc eip\u003c该行地址`\n- 此时左上叫显示跟踪，此方法比较慢，等一会就好\n\n#### 6、SFX模拟跟踪\n- 也是让OD自行查找\n- `选项-调试选项-SFX`, 选块方式跟踪或字节方式跟踪\n- ![image.png](../attachments/image_1641292424139_0.png)\n### ASPACK (2)\n- 前六种\n### NSPACK(北斗) (3)\n- 前六种\n- ximo有1.3, 2.4, 3.7版本的示例，2.4, 3.7 用PEID查不出, 但可以看到EP区段是`nsp0`或`nsp1`\n- *北斗专用的一个特殊方法\n    - 据说因为是VC++写的\n    - 命令`at GetVersion` 回车\n    - 运行到下面的`retn`\n    - 然后向上滚动\n- 2.4很怪，一开始是个jmp, 单步，就到了push\n### UPX (1)\n- 前四种（六种？）\n\n## 脱壳\u0026修复入口点\n### 1. OD自带的OllyDump\n- 见于UPX\n- 在OEP右键，`用OllyDump脱壳调试进程`\n- 方式一方式二都行\n### 2. LordPE + ImportREC\n- 见于UPX（在教程中两者都是OD菜单里工具里有的）\n- （在OD中运行到了OEP的状态下）在LordPE程序列表里找到目标，修正镜像大小并完整转存\n- *如果没脱干净(用查壳软件看，还是带壳)\n    - 用ImportREC附加在OD中加载了的程序\n    - 手动输入OEP地址(记得要减基址)，`自动修复IAT`\n    - `获取输入表`，(显示一下无效函数，没有),  `修复转存文件`，选择没脱干净的程序","lastmodified":"2023-06-15T21:25:45.6444643+02:00","tags":["逆向"]},"/permanent/%E8%87%AA%E5%9B%9E%E5%BD%92%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B":{"title":"自回归语言模型","content":"自回归语言模型 Autoregressive LM\n\n通常的语言模型是单向的, 比如从左到右去预测下一个单词. 因为有时候除了考虑上文的信息还要考虑下文, 所以又诞生了从右到左预测的反向语言模型. 自回归模型指的就是这种只能利用上文或下文, 不能同时利用两者的模型.\n\n典型的自回归语言模型如使用 Transformer 的 GPT, ELMo 这种将上文和下文的 LSTM 拼接的也算变形的自回归语言模型.\n\n对应: [[permanent/自编码语言模型|自编码语言模型]]\n\n参考: [自回归语言模型 VS 自编码语言模型 - 知乎](https://zhuanlan.zhihu.com/p/163455527)\n\n[预训练语言模型综述(中) -- GPT \u0026amp; BERT - 知乎](https://zhuanlan.zhihu.com/p/441359003)\n","lastmodified":"2023-06-16T19:02:47.338311+02:00","tags":["AI"]},"/permanent/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86":{"title":"自然语言处理","content":"\n[[project/lmu - Syntax of natural language(Germany)|lmu - Syntax of natural language(Germany)]]\n\n\ntechs:\n[[permanent/NLTK|NLTK]]\n\n[[permanent/spaCy|spaCy]]\n\n[[permanent/Standford Parser|Standford Parser]]\n\n[[permanent/Tagsets|Tagsets]]","lastmodified":"2023-06-16T20:06:33.6103284+02:00","tags":["NLP"]},"/permanent/%E8%87%AA%E7%BC%96%E7%A0%81%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B":{"title":"自编码语言模型","content":"\n自编码语言模型 Autoencoder LM\n\n自编码语言模型在预训练时, 会随机 Mask 掉输入 X 的一些单词, 然后训练的任务就是根据上下文预测这些单词.\n相比于单向的[[permanent/自回归语言模型|自回归语言模型]], 做阅读理解的能力会更好. 但因为在 Fine-Tuning 阶段是看不到 Mask 标记的, 可能会导致预训练和FT阶段的不一致.\n\n\n参考: [自回归语言模型 VS 自编码语言模型 - 知乎](https://zhuanlan.zhihu.com/p/163455527)\n\n[预训练语言模型综述(中) -- GPT \u0026amp; BERT - 知乎](https://zhuanlan.zhihu.com/p/441359003)","lastmodified":"2023-06-16T17:24:52.0298641+02:00","tags":["AI"]},"/permanent/%E8%A0%95%E8%99%AB":{"title":"蠕虫","content":"\n#### 蠕虫\nWorm de. Wurm\n不需要寄主程序的有害程序\nSelbstreplikation, 自分离, 自我复制\n单个被感染的机器被称为蠕虫段 Worm-Segment\n\n\n#### 蠕虫的扫描方式\n\n##### Random Scanning\n- 最简单\n- 不可预测\n- 容易重复\n\n##### Permutation Scanning\n- 蠕虫必须能够确定主机是否已经被感染\n- 所有蠕虫共享全球IP地址空间的随机排列\n- 不重复的原理: 每个新的蠕虫从排列中的一个随机点开始扫描主机，如果发现一个已经被感染的主机，它就从一个新的随机点开始扫描，因此，整个地址空间可以被非常有效地扫描。\n\n##### Hit-List Scanning\n- 有一份原始的 hitlist\n- 每次新感染的蠕虫会得到清单中剩余条目的一半\n- 二分法\n\n##### Topological Scanning\n- 感染新的主机后, 在主机上寻找新目标\n- 容易感染某一范围的主机, 但也容易形成孤立闭环\n\n\n\n#### Warhol Worm\nWarhol 蠕虫是一种能快速复制的计算机蠕虫病毒, 可能在15分钟内感染互联网中的大片计算机.\n\n先 Hitlist 精准攻击容易攻破的目标, 再用 Permutation 继续传染\n\n","lastmodified":"2023-06-15T17:48:08.9875932+02:00","tags":["恶意软件","安全"]},"/permanent/%E8%A0%95%E8%99%AB%E5%92%8C%E8%93%9D%E5%AE%9D%E7%9F%B3%E7%9A%84%E5%AF%B9%E6%AF%94":{"title":"蠕虫和蓝宝石的对比","content":"\n[[permanent/1988 Internet Wurm|1988 Internet Wurm]]\n\n[[permanent/2003 SQL Slammer|2003 SQL Slammer]]\n\n| | Wurn | Slammer|\n|---|---|---|\n|时间|1988|2003|\n|主机|SUN, VAX, UNIX|WIN, SQL服务器|\n|损害方式|高负载, 网络拥堵|极高负载, 网络拥堵|\n","lastmodified":"2023-06-15T17:48:32.110343+02:00","tags":["恶意软件"]},"/permanent/%E8%A1%A5%E7%A0%81%E7%B3%BB%E7%BB%9F%E6%9C%89%E7%AC%A6%E5%8F%B7%E6%95%B4%E6%95%B0%E5%AD%98%E5%82%A8":{"title":"补码系统(有符号整数存储)","content":"\n- ![[attachments/Pasted image 20230313225402.png]]\n\n#### 补码的转换\n- 正数转补码: 直接取二进制\n- 负数转补码: 取反加一\n- 补码转:\n    - 若最高位为0, 直接求十进制\n    - 若最高位为1, 取反加一\n\n#### 补码的加减法\n- A - B = A + B补\n- 两正相加: 直接加, 需要处理上溢\n- 一正一负: 直接加! 溢出无视\n- 两负相加: 直接加, 需要处理下溢","lastmodified":"2023-06-14T23:43:19.2958926+02:00","tags":["计组"]},"/permanent/%E8%A5%BF%E6%B1%89%E7%9A%84%E4%B8%89%E5%85%AC%E4%B9%9D%E5%8D%BF":{"title":"西汉的三公九卿","content":"\n ![image.png](../attachments/image_1640858080870_0.png)\n## 三公\n- 三公：丞相，太尉（/大司马），御史大夫（/大司空）\n    - **丞相**又改称过相国，有时分设左右丞相，金印紫绶（萧何绿绶更高）\n    - 汉朝**太尉**不常设，汉初年到武帝60年间，只有5位太尉：卢绾，周勃，灌婴，周亚夫，田蚡。金印紫绶\n    - 武帝**大司马**为加官，加在将军上\n    - **御史大夫**，银印青绶，位上卿，但实际上会被人们称为三公，副官有两丞，御史中丞和御史丞。\n- 将军比公者四：大将军，次骠骑将军，次车骑将军，次卫将军。又有前后左右将军，杂号将军\n- 印的质料有金、银、铜、玉等。\n- 太师，太傅，太保位三公上，，金印银绶，实是虚职\n## 九卿\n西汉九卿是一个统称，可能不只九个人，也可能不只九个官。\n\n东汉后汉书中，有些官会明确卿几人。九卿在东汉是执金吾前面九人。\n- **太常**：原称奉常，景帝时改称太常，掌宗庙礼仪。每年的祭祀活动很庞大，相关人员上十万，耗费众多。多次有上书减少宗庙消耗。\n  三辅：京兆尹，左冯翊，右扶京\n- **光禄勋**：郎中令，掌宫殿掖门户（前殿宫内总管）。属官有大夫，郎，谒者，期门，羽林。\n    - 大夫掌论议（顾问官员）：太中大夫/光禄大夫，中大夫，谏大夫\n    - 郎掌门户（皇帝的随从）：议郎，中郎（有五官、左右中郎将），侍郎\n    - 谒者治礼（司仪工作）\n    - 期门掌执兵送从，后改称虎贲，置中郎将\n    - 羽林置中郎将。羽林和期门是皇帝的卫队\n- **卫尉**：景帝时更名中大夫令，又改回。卫戍部队。与光禄勋同样负责宫门警戒，但更外围。\n  不只一个。\n- **太仆**：掌舆马（宫中车马和军马）。有时也驾车。第一任夏侯婴，滕公。\n- **廷尉**：掌刑辟，又称大理。最高司法官员。\n- **大鸿胪**：原称典客，改大行令，又改大鸿胪，王莽改典乐。掌归义蛮夷（的接待）（原本由典属国负责，后来典属国归并大鸿胪。也负责进京地方官的接待和外交接待。\n- **宗正**：又称宗伯，掌亲属。管理皇室和外戚，由皇族担任，西汉时多是楚元王后代。\n- **大司农**：治粟内史，改大农令，后改大司农，掌谷货，财政官员。\n- **少府**：掌山海池泽之税。皇帝的财政官和大管家。又叫小府。下有六丞（一般只有一丞）。\n- **执金吾**（通御音御）：又称中尉，掌徼循京师。负责京城治安，还是皇帝的仪仗队。\n\n## 内朝/中朝\n- 皇帝身边的一群人，有的是顾问，有的是掌实权的。\n\n## 加官\n- 加在别的官衔之上的，不能单独存在的官职。\n- 西汉有：大司马，侍中，左右曹，诸吏，散骑，中常侍，给事中等。内朝官大多有加官。","lastmodified":"2023-06-15T17:06:06.7290182+02:00","tags":["读书"]},"/permanent/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%83%BD%E5%8A%9B":{"title":"解决问题的能力","content":"\n解决问题需要根据任务和需求灵活地改变应对策略\n\n相似地: [[permanent/创造力的关键|创造力的关键]]\n![[attachments/a12bdb0ce1f02dd58a176bb99918619.jpg]]","lastmodified":"2023-06-15T12:58:25.6987952+02:00","tags":[]},"/permanent/%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%BC%80%E5%85%B3%E5%A4%B1%E6%95%88%E4%BA%8B%E4%BB%B6":{"title":"触摸板开关失效事件","content":"\n11.25 这次的 BUG 告一段落了, 原因是改了扫描码\n触摸板开关的功能是通过发送键盘事件实现的, 大概是 LWIN + LCTRL + F24, 不过应该有读不到的键名\n\n![[Pasted image 20221125010339.png]]\n\n但……还是会出现开关的时候带上大小写锁定的问题\n\n也许可以给 \\*LCtrl 加个判断 LWin 键的状态, 如果 LWin 按下则不发送 CapsLock ==成功了== ver1.ahk\n\n下一个想法是继续改扫描码, 然后通过ahk的脚本来解决bug\n写完了但其实不是很理解 \n==但终于圆满落幕了== sc.ahk\n","lastmodified":"2023-06-14T23:32:34.0686092+02:00","tags":["WIN"]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84":{"title":"计算机体系结构","content":"\n#### CISC\ncomplex instruction set computer(CISC, 读作\\[sisk], 复杂指令集计算机), 指令多, 电路复杂\n\n一个减少复杂性的解决方案是:\n- 将程序分成两个层级\n- CPU 不直接执行机器语言, 只执行所谓的*微操作*, 复杂指令会被转化为简单操作后执行\n- *微程序*指由*微操作*设计的程序\n\n#### RISC\nreduce instruction set computer(RISK, 读作 \\[risk], 精简指令集计算机), 指令少, 复杂指令用简单指令模拟\n\n#### 流水线\n- 通常的指令执行需要 取指令→译码→执行指令\n- ![[attachments/Pasted image 20230316150205.png|L|500]]\n\n#### 并行处理\n通过增加控制单元, 算术逻辑单元, 内存单元的数量, 达到增加计算机效率的目的\n\n- 单指令流单数据流 SISD\n- 单指令流多数据流 SIMD\n- 多指令流单数据流 MISD(只是为了整齐而有的类)\n- 多指令流多数据流 MIMD(真正并行)\n\n","lastmodified":"2023-06-15T17:25:27.1741557+02:00","tags":["计组"]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8D%8F%E8%AE%AE":{"title":"计算机协议","content":"\n[[permanent/ICMP 协议|ICMP 协议]]\n\n[[permanent/IPv4|IPv4]]\n\n[[permanent/IEEE 802.1X|IEEE 802.1X]]\n\n[[permanent/TCP|TCP]]\n\n[[permanent/邮件系统协议简述|邮件系统协议简述]]\n\n[[permanent/NTP 协议|NTP 协议]]\n\n[[permanent/Kerberos|Kerberos]]","lastmodified":"2023-06-16T19:54:54.9585645+02:00","tags":[]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%8E%86%E5%8F%B2":{"title":"计算机的历史","content":"\n#### 第一代计算机\n- 1950-1959\n- 体积庞大\n- 以真空管作为电子开关\n- 需要专业的人操作\n\n#### 第二代计算机\n- 1960-1965\n- 晶体管代替真空管, 减小了体积\n\n#### 第三代计算机\n- 1965-1975\n- 集成电路(Integrated Circuit, IC) 出现, 即晶体管, 导线和其他部件都集成在一块电路板上\n- 市面上已经出现软件包\n\n#### 第四代计算机\n- 1975-1985\n- 微型计算机出现\n- 计算机网络诞生\n\n#### 第五代计算机\n- 1985至今\n- 掌上计算机, 新存储技术, VR技术等","lastmodified":"2023-06-15T17:25:04.8349179+02:00","tags":["计组"]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86":{"title":"计算机组成原理","content":"\n#### 计算机模型\n- [[permanent/图灵机|图灵机]]\n- [[permanent/冯·诺依曼模型|冯·诺依曼模型]]\n\n#### 计算机的历史\n- [[permanent/计算机的历史|计算机的历史]]\n\n#### 计算机中数据的存储\n- [[permanent/位置化数字系统|位置化数字系统]]\n- [[permanent/补码系统(有符号整数存储)|补码系统(有符号整数存储)]]\n- [[permanent/浮点数的存储|浮点数的存储]]\n- [[permanent/ASCII|ASCII]]\n- [[permanent/Unicode|Unicode]]\n- [[permanent/音频文件|音频文件]]\n- [[permanent/位图|位图]]\n- [[permanent/矢量图|矢量图]]\n\n#### 数据运算\n- [[permanent/逻辑运算|逻辑运算]]\n- [[permanent/位移运算|位移运算]]\n\n#### 计算机硬件组成\n![[attachments/Pasted image 20230316150328.png|L|400]]\n- [[permanent/CPU|CPU]]\n- I/O设备\n- [[permanent/存储器|存储器]]\n- [[permanent/子系统的互连|子系统的互连]]\n- [[permanent/计算机体系结构|计算机体系结构]]","lastmodified":"2023-06-16T20:10:36.8155903+02:00","tags":[]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C":{"title":"计算机网络","content":"\n[[permanent/计算机网络基础|计算机网络基础]]\n\n[[permanent/IEEE 802.1X|IEEE 802.1X]]\n\n[[permanent/IPv4|IPv4]]\n\n[[permanent/TCP|TCP]]\n\n[[permanent/WiFi 技术|WiFi 技术]]","lastmodified":"2023-06-16T20:13:16.9401438+02:00","tags":[]},"/permanent/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80":{"title":"计算机网络基础","content":"\n#### 因特网\n- 因特网是成千上万个互联的网络(网络: 局域网, 广域网)\n- 客户网络通常会接入供应商网络([[permanent/Internet Service Provider(ISP)|Internet Service Provider(ISP)]]), 而供应商网络会接入骨干网\n- 供应商网络之间, 供应商网络和骨干网之间会通过**peering point**(网络对等交汇点)这个交换系统相互连接\n\n#### TCP/IP 五层模型\n- [[permanent/TCPIP 五层模型|TCPIP 五层模型]]\n- 应用层\n- 传输层\n- 网络层\n- 数据链路层\n- 物理层\n\n##### 物理传输介质\n[[permanent/物理层传输介质|物理层传输介质]]","lastmodified":"2023-06-16T20:07:15.6934111+02:00","tags":["计网"]},"/permanent/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA":{"title":"计算理论","content":"\n[[permanent/量子计算|量子计算]]","lastmodified":"2023-06-15T17:46:11.5051016+02:00","tags":[]},"/permanent/%E8%AE%B0%E7%AC%94%E8%AE%B0%E7%9A%84%E7%9B%AE%E6%A0%87":{"title":"记笔记的目标","content":"\n记笔记的目的是在以后需要的时候能够**重现**\n\t- 所以保留来源但不突出来源\n\t- 想在什么主题中重现，就与之链接\n再好的内容，如果没有**记录**下来，就不能成为笔记\n\t- 所以，首先是记录，是否结构清晰内容精致是次要的\n","lastmodified":"2023-06-14T22:54:00.6156398+02:00","tags":[]},"/permanent/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F":{"title":"设计模式","content":"#todo ","lastmodified":"2023-06-15T17:52:18.3835443+02:00","tags":["开发"]},"/permanent/%E8%AE%BF%E9%97%AE%E9%A3%8E%E9%99%A9%E7%BD%91%E9%A1%B5":{"title":"访问风险网页","content":"\n- 火狐: 忽略风险\n- chromium: 直接在网页上敲 thisisunsafe 回车","lastmodified":"2023-06-15T17:08:24.1068311+02:00","tags":["工具使用"]},"/permanent/%E8%AF%B8%E7%A5%9E%E9%BB%84%E6%98%8F":{"title":"诸神黄昏","content":"\n![[诸神黄昏规划器.xlsx]]\n\n","lastmodified":"2023-06-15T21:52:15.290748+02:00","tags":[]},"/permanent/%E8%AF%B8%E8%91%9B%E4%BA%AE%E7%9A%84%E5%8C%97%E4%BC%90":{"title":"诸葛亮的北伐","content":"\n### 策反孟达（1）\n- 孟达已经降魏，当上了新城郡太守，又被诸葛亮策反\n- 诸葛亮怕他拖延不反，派人诈降，把孟达要反的消息知会魏国\n- 孟达反的时候以为司马懿一个月后才会攻过来，谁知道八日至城下\n- 叛乱被镇压，孟达被斩\n### 子午谷奇谋（1）\n- 魏延提出精兵五千走子午谷袭取长安（认为能吓走太守夏侯楙）\n- 诸葛亮觉得冒险没采用\n- 法师：应该是建立在孟达投降的基础上提出的，孟达被镇压后，看到司马对这一带的严防死守，应该不会只带一小队人马\n### 姜维（1）\n- 天水太守马遵害怕，不守天水\n- 天水投降了诸葛亮\n- 姜维在马遵手下，建议马遵不成，家在冀县，只能自己回去\n### 街亭之战（1）\n- 打祁山\n- 诸葛亮不听大家的派马谡守街亭，带走大量精兵\n- 马谡不听诸葛亮的，在山里扎营，不去占领城池\n- 张郃断了马谡的水源，大败马谡\n- 只有王平率领手下两千人，阵形不乱，张郃怕有埋伏没有追\n### 第一次北伐（1）\n- 第一次北伐失败，除了王平全都降职\n- 诸葛亮很得民心，魏国南安，天水，安定都响应了诸葛亮（后来都被血腥镇压）\n- 第一次北伐失败，四镇百姓失去了信心，后来响应的人也越来越少\n- 失败的关键可能就是马谡吧/诸葛亮的用人\n","lastmodified":"2023-06-15T17:06:35.031722+02:00","tags":["读书"]},"/permanent/%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%BA%94%E7%94%A8%E5%92%8C%E8%BD%AE%E5%AD%90":{"title":"软件和应用和轮子","content":"\n[[permanent/Jupyter Notebook|Jupyter Notebook]]\n\n[[permanent/VIM|VIM]]\n\n[[permanent/LOIC|LOIC]]\n\n[[permanent/Obsidian|Obsidian]]\n\n[[permanent/LaTeX|LaTeX]]\n\n[[permanent/Git|Git]]","lastmodified":"2023-06-16T20:11:38.1601117+02:00","tags":["工具使用"]},"/permanent/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B":{"title":"软件工程","content":"\n## 技术\n[[permanent/重构技术 Refactoring|重构技术 Refactoring]]\n\n[[permanent/设计模式|设计模式]]\n\n[[permanent/测试驱动开发 Test-Driven Devlopment|测试驱动开发 Test-Driven Devlopment]]\n\n[[permanent/Mock|Mock]]\n\n[[permanent/Git|Git]]\n\n[[permanent/CRC 卡片|CRC 卡片]]\n\n[[permanent/UML 图|UML 图]]\n\n## 概念\n[[permanent/SaaS|SaaS]]\n\n[[permanent/Version Controll System(VCS)|Version Controll System(VCS)]]\n\n## 项目\n[[project/lmu - Software Engineering]]","lastmodified":"2023-06-16T20:11:27.6103654+02:00","tags":[]},"/permanent/%E8%BF%9C%E7%A8%8B%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%88%96%E8%AE%BE%E5%A4%87%E5%B0%86%E4%B8%8D%E6%8E%A5%E5%8F%97%E8%BF%9E%E6%8E%A5":{"title":"远程计算机或设备将不接受连接","content":"\nWindows 网络诊断: 远程计算机或设备将不接受连接\n造成原因大概是 VPN 没关, 或者挂着 VPN 的时候强制关机了\n\n解决方法: 控制面板 - Internet 选项 - 局域网设置, 把代理关了","lastmodified":"2023-06-15T21:52:05.0288847+02:00","tags":["WIN","工具使用"]},"/permanent/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B":{"title":"逆向工程","content":"[[permanent/JVM, Dalvik, Art|JVM, Dalvik, Art]]\n\n[[permanent/控制流混淆|控制流混淆]]\n\n[[permanent/Smali|Smali]]\n\n[[permanent/HarmonyPatch|HarmonyPatch]]\n\n[[permanent/脱壳|脱壳]]\n\n### 概念\n[[permanent/DRM|DRM]]\n\n### 项目\n[[project/会飞的丑小鸭 - 教我兄弟学安卓逆向|会飞的丑小鸭 - 教我兄弟学安卓逆向]]\n\n[[project/正己 - 安卓逆向这档事|正己 - 安卓逆向这档事]]\n\n[[permanent/宵夜97 - 太吾绘卷 Mod 制作|宵夜97 - 太吾绘卷 Mod 制作]]","lastmodified":"2023-06-16T20:04:23.8042888+02:00","tags":[]},"/permanent/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97":{"title":"逻辑运算","content":"\n#### 一元\n- not ~\n\n#### 二元\n- and \u0026\n- or |\n- xor ^\n\n#### 掩码\n- 指定位复0: 指定位 and0\n- 指定位置1: 指定位 or1\n- 指定位反转: 指定位 xor1","lastmodified":"2023-06-15T17:46:26.1932054+02:00","tags":["计组"]},"/permanent/%E9%82%AE%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%8D%8F%E8%AE%AE%E7%AE%80%E8%BF%B0":{"title":"邮件系统协议简述","content":"\n## SMTP\n\nSMTP全称是Simple Mail Transfer Protocol,直译过来就是简单邮件传输协议, 由RFC5321定义.主要的工作就是把邮件信息从发件人的邮件服务器中传送到接收人的邮件服务器中,偶尔我们使用MUA来发送邮件的话,也承载传输用户邮件到发件服务器的功能, 因而也称作`推`协议,顺带提一下,SMTP协议的出现是比HTTP还早的,最早在1982年中发布第一版的RFC.  \n因而因为提出的年代久远,所以在当时有许多问题都考虑不全面并且也有这许多的限制,例如SMTP要求信息内容需要是7位的`ASCII`来承载,因而我们在发送以及接受的时候,都需要将其编码解码.  \n另外,SMTP还存在一个问题就是没有对发送方进行一个身份验证,虽然在早期的互联网环境没有很大问题,但是在垃圾邮件满天飞的今天,这却是一个明显的短板.因而衍生出了`SPF`, `DKIM`, `DMARC`等一系列用来验证发件人身份的方法.\n\n## POP3\n\nPOP3,Post Office Protocol Version 3,直译就是邮局协议第三版,由RFC1939进行定义.这个协议的主要服务于用户管理邮件服务器上面的电子邮件.具体过程是:当外来邮件发送到收件人的邮件服务器上时,收件人可以使用邮件客户端连接邮件服务器,把未阅读的邮件服务器以及部分信息拉取回本地进行处理.在拉取的过程中,我们可以选择`拉取完删除`以及`拉取完不删除`两种方式,不过现在默认一般都是拉取完不删除,方便我们在其他的地方也能对邮件进行阅读以及管理.\n\n## IMAP\n\nIMAP, Internet Message Access Protocol, 直译过来就是网络信息访问协议,可能和现在主流的翻译不太一致,不过能理解其意思就好.相对于pop3协议所有邮件的管理都需要下载下来进而管理,IMAP提供了用户远程访问邮件服务器的途径,因而通过IMAP,用户可以直接管理邮件服务器上的邮件.\n\n作者：YusenMeng  \n链接：[https://www.jianshu.com/p/610d9bf0ae8b](https://www.jianshu.com/p/610d9bf0ae8b)\n来源：简书  \n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","lastmodified":"2023-06-15T21:49:12.83919+02:00","tags":["协议","计网"]},"/permanent/%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D":{"title":"配置一个二级域名","content":"\n## 1. 添加 DNS 解析记录\n在 DNS 解析商里添加记录。\n\u003e**记录类型**是 A\\\n\u003e二级域名叫 a.example.com, **主机记录**就填 a\\\n\u003e**记录值**是服务器IP\n\n## 2. 配置 nginx.conf\n\u003evim /etc/nginx/nginx.conf\n\nhttp 中：\n\n```nginx\nserver {\n    listen  80;\n    server_name     www.tongluoshao.space tongluoshao.space;\n\n    location / {\n            index index.html;   # 主页文件\n            root /www/tongluoshao/blogs/public;  # 主页所在目录\n    }\n}\n```\n\n## 3. 配置 HTTPS 证书\n\u003ecertbot --nginx\n\n选择新添加的二级域名。","lastmodified":"2023-06-14T23:46:34.9858559+02:00","tags":["个站"]},"/permanent/%E9%87%8D%E5%A4%8D%E5%A4%9A%E6%AC%A1%E9%98%85%E8%AF%BB%E7%9A%84%E6%94%B6%E7%9B%8A%E4%B8%8D%E5%A6%82%E4%B8%80%E6%AC%A1%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83":{"title":"重复多次阅读的收益不如一次深入思考","content":"\n重复多次阅读, 特别是只阅读, 或者读的时候划划线, 收益很可能不如仅一次的深入思考. \n除非你的目的就只是读完很多次而不考虑理解和掌握.\n而重复多次可能会让自己误以为自己已经掌握了\n\n\n原理: [[permanent/曝光效应|曝光效应]]","lastmodified":"2023-06-15T12:56:55.5324553+02:00","tags":[]},"/permanent/%E9%87%8D%E6%9E%84%E6%8A%80%E6%9C%AF-Refactoring":{"title":"重构技术 Refactoring","content":"\nrefactoring techniques\nsrc: [Source Making](https://sourcemaking.com/refactoring/refactorings)\n\n## Composing methods\n\n#### Extract Method\n一个方法内的语句应该是应该是在同一层级的, 这样有利于代码结构的清晰.\n```java\n// Before\nvoid printOwing() {\n  printBanner();\n\n  // Print details.\n  System.out.println(\"name: \" + name);\n  System.out.println(\"amount: \" + getOutstanding());\n}\n// After\nvoid printOwing() {\n\tprintBanner();\n\tprintDetails();\n}\n\nvoid printDetails() {\n  System.out.println(\"name: \" + name);\n  System.out.println(\"amount: \" + getOutstanding());\n}\n```\n\n实践: \n1. 将原本的方法的任务划分成几个小任务\n2. 根据小任务的内容提取出新的方法\n\n#### Inline Method\n如果一个方法的内容比取方法名还简单, 那就不应该单独作为一个方法\n```java\n// Before\nclass PizzaDelivery {\n  // ...\n  int getRating() {\n    return moreThanFiveLateDeliveries() ? 2 : 1;\n  }\n  boolean moreThanFiveLateDeliveries() {\n    return numberOfLateDeliveries \u003e 5;\n  }\n}\n// After\nclass PizzaDelivery {\n  // ...\n  int getRating() {\n    return numberOfLateDeliveries \u003e 5 ? 2 : 1;\n  }\n```\n\n实践:\n1. 首先, 子方法不能在子类中被重写. 如果是, 则这样情况不适用于本重构技巧.\n2. 然后改就是了\n\n#### Extract Variable\n理由: to make a (long) statement more readable\n```java\n// Before\nvoid renderBanner() {\n  if ((platform.toUpperCase().indexOf(\"MAC\") \u003e -1) \u0026\u0026\n       (browser.toUpperCase().indexOf(\"IE\") \u003e -1) \u0026\u0026\n        wasInitialized() \u0026\u0026 resize \u003e 0 )\n  {\n    // do something\n  }\n}\n// After\nvoid renderBanner() {\n\tboolean isMac = platform.toUpperCase().indexOf(\"MAC\") \u003e -1;\n\tboolean isIE = browser.toUpperCase().indexOf(\"IE\") \u003e -1;\n\tboolean wasResized = resize \u003e 0;\n\n\tif (isMac \u0026\u0026 isIE \u0026\u0026 wasInitialized() \u0026\u0026 wasResized) {\n\t\t// do something\n\t}\n}\n```\n\n#### Inline Temp\n如果一个本地变量只被用来计算一个简单的表达式, 那么其实使用表达式本身就足够易懂了.\n\n```java\n// Before\nboolean hasDiscount(Order order) {\n  double basePrice = order.basePrice();\n  return basePrice \u003e 1000;\n}\n// After\nboolean hasDiscount(Order order) {\n\treturn order.basePrise() \u003e 1000;\n}\n```\n\n#### Replace Temp with Query\n用简单的函数取代本地变量, 好处是代码更简洁和可读\n\n```java\n// Before\ndouble calculateTotal() {\n  double basePrice = quantity * itemPrice;\n  if (basePrice \u003e 1000) {\n    return basePrice * 0.95;\n  }\n  else {\n    return basePrice * 0.98;\n  }\n}\n// After\ndouble calculateTotal() {\n\tif (basePrice() \u003e 1000) {\n\t\treturn basePrice() * 0.95;\n\t}\n\telse {\n\t\treturn basePrice() * 0.98;\n\t}\n}\n\ndouble basePrice() {\n\treturn quantity * itemPrice;\n}\n```\n\n#### Split Temporary Variable\n使用暂时的变量的时候, 不要一个 temp 走天下, 可以使用不同名称的本地变量. 更易读, 也不容易发生意外的错误\n\n```java\n// Before\ndouble temp = 2 * (height + width);\nSystem.out.println(temp);\ntemp = height * width;\nSystem.out.println(temp);\n// After\ndouble perimeter = 2 * (height + width);\nSystem.out.println(perimeter);\narea = height * width;\nSystem.out.println(area);\n```\n\n#### Remove Assignments to Parameters\n不要直接修改传入的实参, 这个习惯不好. 用一个新的本地变量获得它的值.\n\n```java\n// Before\nint discount(int inputVal, int quantity) {\n  if (quantity \u003e 50) {\n    inputVal -= 2;\n  }\n  // ...\n}\n// After\nint discount(int inputVal, int quantity) {\n  int result = inputVal\n  if (quantity \u003e 50) {\n    result -= 2;\n  }\n  // ...\n}\n```\n#### Replace Method with Method Object\n如果方法太长难以提取方法, 那就提取成方法对象(一个新的内部类, 在新类的内部实现方法), 从而在主类中节省空间, 提高可读性\n\n```java\n// Before\nclass Order {\n  // ...\n  public double price() {\n    double primaryBasePrice;\n    double secondaryBasePrice;\n    double tertiaryBasePrice;\n    // Perform long computation.\n  }\n}\n// After\nclass Order {\n\tdouble price() {\n\t\treturn new PriceCalculator(this).compute();\n\t}\n\n\tclass PriceCalculator {\n\t    double primaryBasePrice;\n\t    double secondaryBasePrice;\n\t    double tertiaryBasePrice;\n\n\t\tpublic PriceCalculator(Order order) {\n\t\t\t// ...\n\t\t}\n\n\t\tpublic double compute() {\n\t\t\t// Perform long computation.\n\t\t}\n\t}\n}\n```\n\n实践:\n1. 新建内部类, 将要提取的方法相关的变量和参数移动到类中\n2. 类的初始化方法的参数为主类\n3. 主类调用方法时, 新建内部类, 传入主类自身作为参数, 并调用内部类的方法\n\n\n## Moving Features between Objects\n\n#### Move Method\n如果一个方法在另一个类中用得更多, 就把它移动到另一个类里\n\nBefore\n```mermaid\nclassDiagram\n\tclass Class1 {\n\t\tmethod1()\n\t}\n\tclass Class2 {\n\t}\n```\n\nAfter\n```mermaid\nclassDiagram\n\tclass Class1 {\n\t}\n\tclass Class2 {\n\t\tmethod1()\n\t}\n```\n\n## Organizing Data\n\n## Simplifying Conditional Expressions\n\n\n## Simplifying Method Calls\n\n## Dealing with Generalisation\n\n\n\n\n\n\n\n\n\n\n\n\n","lastmodified":"2023-06-15T21:51:21.5494493+02:00","tags":["开发"]},"/permanent/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97":{"title":"量子计算","content":"\n##### Qubit\n- 量子比特\n- 两种状态: $|0\\rangle$, $|1\\rangle$\n- 量子中一个 bit 的变化会引起另一个的变化\n\n##### Superposition\n- 叠加意味着一个 Qubit $|\\Psi\\rangle$ 可以承担任何叠加状态\n- $|\\Psi\\rangle = \\alpha |0\\rangle + \\beta |1\\rangle$\n- 其中 $\\alpha, \\beta$ 表示比例, $|\\alpha|^2 + |\\beta|^2 = 1$\n- $|\\alpha|^2$ 表示 0 的几率\n- 在测量过程中, 叠加态会崩溃, 即变成 0/1\n- 因为叠加态, 可以同时呈现和计算所有状态\n![[attachments/Pasted image 20230222165005.png|L|400]]\n\n##### Quanten gate\n- 量子门\n- 可以映射逻辑运算\n\n","lastmodified":"2023-06-15T17:46:09.9495281+02:00","tags":[]},"/permanent/%E9%94%AE%E7%9B%98%E4%B8%8A%E7%9A%84%E8%BD%B4%E8%AE%B0%E5%BD%95":{"title":"键盘上的轴记录","content":"\n\n金粉: WIN\n浅云: \\`\n静音月白: esc, backspace\n冰魄: enter\n\nIns 灰木v3\ndel ttc烈焰雪轴\nPrtSc G黄Pro2.0\n\nrCtrl ttc快银\nFn 爱心\nrAlt 高特水晶\n\nHome BOX白\nEnd 凯华知夏\nPgUP 凯华极地狐\nPgDN ttc金兰\n\n其他 ttc冰静","lastmodified":"2023-06-15T17:34:13.794386+02:00","tags":[]},"/permanent/%E9%94%AE%E7%9B%98%E8%BD%B4%E4%BD%93%E5%8F%82%E6%95%B0":{"title":"键盘轴体参数","content":"\nhttps://docs.qq.com/sheet/DT0NYT0dBenJVUWlo?tab=BB08J2","lastmodified":"2023-06-15T17:34:21.2377492+02:00","tags":[]},"/permanent/%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95":{"title":"阅读方法","content":"\n[[permanent/阅读时的心态|阅读时的心态]]\n\n[[permanent/阅读时的提问法|阅读时的提问法]]\n\n### Tips\n[[permanent/重复多次阅读的收益不如一次深入思考|重复多次阅读的收益不如一次深入思考]]","lastmodified":"2023-06-14T22:57:56.5312106+02:00","tags":[]},"/permanent/%E9%98%85%E8%AF%BB%E6%97%B6%E7%9A%84%E5%BF%83%E6%80%81":{"title":"阅读时的心态","content":"\n- 读一本书是与作者对话, 作者讲的是书的内容, 而我的思考则是我的表达\n- 读书时对内容产生怀疑, 不要急着找书评, 尝试独立思考和判断.","lastmodified":"2023-06-14T22:57:03.5184465+02:00","tags":[]},"/permanent/%E9%98%85%E8%AF%BB%E6%97%B6%E7%9A%84%E6%8F%90%E9%97%AE%E6%B3%95":{"title":"阅读时的提问法","content":"\n- 作者想说明什么?支持什么和反对什么?\n- 作者在和什么对比?(例如提到「人权」, 那么对比的是没有人权的情况还是义务的情况?)\n\n![[attachments/6129beb581071fd03b4ab83bdb07f71.jpg]]","lastmodified":"2023-06-14T22:57:24.0348864+02:00","tags":[]},"/permanent/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81":{"title":"非对称密码","content":"\n#### 非对称密码\n- 每个通信者持有 private key, public key 各一份\n    - 私钥不公开, 用于解密\n    - 公钥公开, 用于加密(用接受者的公钥加密)\n- 加密发给 Bob: c = e(m, $k^{Bob}_e$)\n- Bob 解密: m = d(c, $k^{Bob}_d$)\n- 把加密解密反过来, 就能用作数字签名\n\n#### 非对称密码种类\n- [[permanent/RSA|RSA]]\n- DSA, ElGamal","lastmodified":"2023-06-15T17:13:28.1878286+02:00","tags":["安全","密码学"]},"/permanent/%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6":{"title":"音频文件","content":"\n#### 音频在计算机世界的存储\n- 在现实中, 声音是连续不断的.\n- 而在计算机世界中, 音频文件是通过在单位时间内取足够多的样本来模拟这种连续的声音.\n\n#### 音频文件术语\n\n##### 采样率 sampling rate\n指的是每秒采集多少个声音样本\n\n##### 位深度 bit depth\n- 又称每样本位\n- 对于每个声音样本要分配多少位\n \n##### 比特率 bit rate\n- 又称位率, 码率, 位速\n- 对于无损音频压缩格式: 比特率 = 位深度 \\* 采样率 \\* 声道数\n    - 例: 单声道, 采样率 40k, 位深度 16 bit, 位率 = 64000 bps = 640 kbps\n    \n#### 采样\n- 声音与时间的关系通过波形图呈现\n- 44.1kHz 是专业音频的最低标准, CD级音质\n\n#### 量化\n- 根据波形图的最大值和最小值标准化\n- 通常会将值截取为整数\n\n#### 编码\n- 将采集到的样本转化为位模式\n- 无损音频格式: wav, ape, flac\n\n","lastmodified":"2023-06-15T21:48:29.7692268+02:00","tags":["计组"]},"/permanent/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6":{"title":"高等数学","content":"\n[[project/Project Asteria#微积分|微积分]]\n\n[[project/Project Asteria#微分方程|微分方程]]","lastmodified":"2023-06-15T17:18:38.6738321+02:00","tags":["高数"]},"/permanent/%E9%AD%94%E6%96%B9%E6%94%BB%E7%95%A5%E6%9C%AC":{"title":"魔方攻略本","content":"\n## N 阶\n\n### 中心块带方向\n\n##### U 180\n(URL U2R'L')2\n或\n(RUR'U)5\n\n##### U, F 90\n顺: (RU'R'B')7\n逆: (RUR'B')7\n\n## 异形\n\n### 斜转 Skewb\n斜转魔方, 角块叫角块, 中间的叫棱块\n#### 斜转公式定义\n来源:[GAN斜转魔方还原教程](https://www.gancube.com/zh/gancube-tutorials-skewb)\n![[attachments/Pasted image 20230114231403.png|500]]\n认为这个图展示的是 ULF 面\n\n#### 一面\n这一步的目的是, 有一面颜色完全相同(不管侧面)\n\n先对好一面的位置, 角块方向不管\n\n然后翻角块, 两个公式很简单, 实际操作一下大概就能明白原理.\n正面角顺120: L'D'LD\n正面角逆120: RDR'D'\n\n#### 底面\n此处开始教程来自:[【震我一下魔方宅】斜转魔方入门还原教程(Skewb)](https://www.bilibili.com/video/BV1Lx411j7P5/) 5:38\n摆法底面图(上方接F面):\n![[attachments/Pasted image 20230114234402.png|400]]\n公式: RD'R'D\n魔方宅管这个叫上上下下\n\n#### 换棱\n换棱块也就是换中间的块\n先把底面调好, 然后调侧面即可\n\n##### 三心换\nRD'R'D y2 RD'R'D\n这个公式会完成斜转魔方的 FBD 三心换\n然后这个公式, 斜着做更顺手\n\n### 魅龙枫叶斜转\n在 [[#斜转 Skewb]] 的基础上多多中心部分, 就叫叶子块和三角块吧\n\n#### 中心部分\n[枫叶飘零-枫叶斜转魔方还原教程](https://www.bilibili.com/video/BV14J411D7tM/)\n![[attachments/Pasted image 20230115000402.png|400]]\n这三块三循环公式([[#斜转公式定义]])\n所有的字母都是转60度, 「转」字表示中心块180\n顺: (R'转R L'转L)2\n逆: (L'转L R'转R)2\n\n然后还有一组公式, 换的是图中白色对称位的(其实自己根据上面一组想想也能推出来)\n顺: (R转R' L转L')2\n逆: (L转L' R转R')2\n\n建议先不要用公式, 先用直觉换到差不多, 很难再推进了, 再开始用公式. 如果最后只剩下两个叶子块互换, 那就用setup制造一个三循环, 最后reverse\n\n### 粽子\n棕子的难点在于看清面和会调方向\n\n#### 前两层\n一个方法是直接靠三阶的基础悟\n另一个也许简单点的方法是二层的中心块先不管方向只确保位置, 然后用转向公式\n\n![[#U 180]]\n\n![[#U, F 90]]\n\n\n#### 顶面棱\n按公式来翻棱然后换棱,\n又因为棱的方向很不好看, 所以更简单的方法是先换棱, 然后看好哪些棱要换(具体到棱不是色), 再翻棱(会打乱位置), 再换棱\n\n##### UF, UB 翻棱\nFRUR'U'F'\n\n##### 粽子顶面三棱换(除UF逆时针)\nRUR'URU2R'\n\n#### 顶面角\n先换角, 再翻角\n换角用三阶的一个正面小鱼, 翻角用盲拧的一个公式\n\n##### 正面除UFL逆时针\nRU'RD2R'URD2R2\n\n##### UFL逆, UFB顺\nRUR'URU2R' L'U'LU'L'U2L\n\n### 五魔方\n\n#### 除最后一层\n请用三阶的知识解决\n\n#### 顶面棱\n先翻棱, 后换棱\n\n单点对着顶面左上: 公式U2公式\nW字正面右面放没放好的: 公式\\*2 (或者直接R'U'F'UFR)\nY字尖对着右面: 公式\n\n##### 五魔方顶面翻棱\nFRUR'U'F'\n\n然后换棱\n\n##### 五魔方 UF, UR, UL 顺时针\nR'U'RU'R'U2R\n\n#### 顶面角\n先换角再翻角\n\n##### 五魔方 UFR 和旁边两个角顺时针\nR'ULU' RUL'U'\n\n翻角过程中保持魔方朝向, 只能转动 U面 来调整要翻的角\n翻角未完成时会把前面几层的打乱, 但不是真的乱, 完成后会复原\n\n##### 五魔方 UFR 翻角\n顺: (RF'R'F)2\n逆: (F'RFR')2\n\n## 类三阶异形","lastmodified":"2023-06-15T16:39:13.6901511+02:00","tags":["说明书"]},"/permanent/%EF%BC%B7IN-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8":{"title":"ＷIN 开机自启动","content":"\n把exe放在\n\u003e C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\n","lastmodified":"2023-06-14T23:52:56.2102197+02:00","tags":["WIN"]},"/permanent/1988-Internet-Wurm":{"title":"1988 Internet Wurm","content":"\n起因:\n\t1988 年的「蠕虫」病毒使得美国大面积的计算机(尤其是校园网络)阻塞. 事情的起因是23岁的康奈尔大学学生莫瑞斯, 希望自己写的这个程序悄悄保存在一些机密计算机上.\n原理:\n\tsendmail BUG\n\tfinger BUG, buffer overflow\n\tremote execution(rsh, rexec)\n受影响的账号:\n\t无密码, 简易密码等\n受影响的主机:\n\t路由表(Routing-Table), 随机地址, Sun, VAX等\n\n\n蠕虫并没有\n- 试图获取 root\n- 攻击(主动)知名账号\n- 毁坏数据\n- 留下定时炸弹(Zeitbomben)\n\n```C\nmain Routine\n\targv[0] := “sh”; /* rename process */\n\tIs there already a worm? /* faults here causes mass infection */\n\tInitialize clock;\n\twhile (true) {\n\t\tcracksome(); /* attack accounts, try to find hosts */\n\t\tsleep(30); /* hide the worm */\n\t\tListen for other worms /* faults here causes mass infection */\n\t\tcreate a new process, kill the old /* Camouflage */\n\t\ttry to attack some machines;\n\t\tsleep(120); /* hide the worm */\n\t\tif (running \u003e 12 hours)\n\t\tcleaning host List; /* reduce memory consumption */\n\t\tif (pleasequit \u0026\u0026 wordcheck \u003e 10)\n\texit\n\t}\n```\n\n\n![[attachments/Pasted image 20221020151731.png]]\n\n\n啊对了, 还有事情的结果:\n\t- 10000刀和400小时社区服务(在我国的版本里是250k刀和5年监禁)\n\t- 大学停学","lastmodified":"2023-06-14T23:42:09.6685895+02:00","tags":["恶意软件"]},"/permanent/2003-SQL-Slammer":{"title":"2003 SQL Slammer","content":"\n2003年爆发的Slammer病毒(又称蓝宝石Sapphire)是一个针对服务器的攻击程序, 以传播速度快闻名.\n\n- 每8.5秒感染多一倍的计算机\n- WINDOWS 2000 SERVER, port 1434, buffer overflow BUG, 未打补丁的都会被迅速感染\n- UDP 转发, 包大小一共才404Byte\n- 攻击随机地址\n- (主要是美国, 欧洲) 90%的脆弱系统在10分钟里被感染, 产生了庞大的数据流量, 服务器不得不被关闭\n\n","lastmodified":"2023-06-14T23:41:46.3460966+02:00","tags":["恶意软件"]},"/permanent/2009~-Stuxnet":{"title":"2009~ Stuxnet","content":"\n[事件经过和分析](https://www.britannica.com/technology/computer-wor)\n\n- 针对可编程工业控制系统(programmable logic device controller, PLCs), 如西门子程序\n- 替换中央DLL, s7otbxdx.dll\n- 目标疑似伊朗的核设施\n- Suche nach WinCC oder Siemens Step7 Software in Registry","lastmodified":"2023-06-15T21:27:24.8762283+02:00","tags":["恶意软件"]},"/permanent/2020-SolarWinds":{"title":"2020 SolarWinds","content":"\n### a. 研究并描述SolarWinds攻击的顺序 \n1. 从 FireEye 获取 pentesting 软件\n2. 用 pentesting 软件攻击 Orion\n3. 在网管软件 Orion 的更新(可能是代码仓库)中植入木马\n4. 用户下载 Orion 软件更新包后被植入木马\n\n\n### b. 攻击者利用了哪些漏洞？为什么攻击会蔓延并在如此长的时间内未被发现？\n- build 过程(Quellcode -\u003e ausführbares Programm)\n- \"Sunburst\" 特洛伊木马植入到更新, 并发布给用户\n- 安静期(Ruhezeit)14天, 之后与 C\u0026C 服务器联系\n\n### c. 受攻击影响的公司如何恢复其正常的IT运作？ \n- 发布没有木马的更新 Neues Update den ohne Trojaner verteilt\n- (完全清除了吗?只能防止已发现的木马继续发挥作用)\n\n### d. 什么是供应链攻击(Supply-Chain-Attack)？ \n通过供应商Lieferanten(Zulieferer、Drittanbieter)或供应链 Lieferkette 访问受害者\n\n### e. 什么预防或检测措施可以使这种攻击在未来更加困难？\n- 难以发现，因为错误在于人们实际信任的所购软件。反病毒程序没有帮助，因为SolarWinds将其软件放在了病毒程序的白名单上 \n- 要怀疑，即使是买来的软件也要怀疑! \n- 趋势：零信任的方法？\n","lastmodified":"2023-06-14T23:42:20.2957847+02:00","tags":["恶意软件"]},"/permanent/AES":{"title":"AES","content":"\n#### AES\n- Advanced Encryption Standard\n- 1997 年美国商务部公开招标的算法, Rijndael 中标\n- diffusion 也比较高\n\n#### AES 算法\n- 可变块长度 32*$N_b$ bits, 可变密钥长度 32*$N_k$ bits, $N_k$ 和 $N_b$ 4, 6, 8\n- 轮数推导出: $N_r$ = max($N_b$, $N_k$) + 6\n\n##### 总体流程\n- ![[attachments/Pasted image 20230220142314.png|L|400]]\n\n##### input -\u003e state\n- 初始变换: 与第0轮密钥异或\n- ![[attachments/Pasted image 20230220142756.png|L|400]]\n\n##### Bytesubstitution(SB)\n- ![[attachments/Pasted image 20230220142645.png|L|400]]\n\n##### ShiftRows(SR)\n- ![[attachments/Pasted image 20230220142707.png|L|400]]\n\n##### MixColumns(MC)\n- 将输入的矩阵左乘一个给定的 4\\*4 矩阵\n- 对每一项, 比如下二图的 02\\*b4, 乘完还要 ^ 给定的 多项式(GF(2$^8$)), 然后各项相加\n- 那个加号代表异或! 不是相加!\n- ![[attachments/Pasted image 20230220144932.png|L|400]]\n- ![[attachments/Pasted image 20230220214634.png|L|400]]\n\n##### AddRoundKey(ARK)\n- AddRoundKey() 异或!\n- ![[attachments/Pasted image 20230220145202.png|L|400]]\n\n##### 计算下一轮密钥\n- if i%n_k == 0: \n    - temp = Subword(Rotword(w\\[i-1])) xor RCON\\[1] \n    - i 当前列数\n- else: temp=Subword\n- 然后每一列 与 temp 异或\n- ![[attachments/Pasted image 20230220221420.png|L|400]]\n- ![[attachments/Pasted image 20230220145507.png|L|400]]\n- ![[attachments/Pasted image 20230220221020.png|L|400]]\n- ![[attachments/Pasted image 20230220221110.png|L|400]]\n","lastmodified":"2023-06-15T17:03:06.745336+02:00","tags":["安全","密码学"]},"/permanent/AI%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2":{"title":"AI的发展历史","content":"\n一\n- 1970, 理论基础\n- 第一次低谷, 受限于当时计算机的性能, 无法实现\n\n二\n- 1996 IBM 深蓝出现, 1997, 依靠专家系统(人类专家为计算机构建的数据库), 深蓝战胜国际象棋棋王卡斯帕罗夫\n- 但这类 AI 极其依赖人类提供的知识, 不具备自我学习的能力, 第二次低谷\n\n三\n- 2016, 深度学习(和算法)打破了以往两次低谷的限制, AlphaGo 战胜李世石和柯洁\n- 此时的 AI 只有下棋厉害, 加上 2017-2022 经济衰退, 第三次低谷\n\n四\n- OpenAI 基于 Google 的 Transformer, 将 [[permanent/GPT]] 从 1 迭代到 4, 将 [[permanent/LLM]] 这条路走通了, ChatGPT 横空出世\n- 大模型时代([[permanent/知识增强大模型]]), 通用人工智能的开始","lastmodified":"2023-06-16T19:44:17.8733986+02:00","tags":["大模型时代"]},"/permanent/ANSI":{"title":"ANSI","content":"\nAmerican National Standards Institute 美国国家标准化组织\n","lastmodified":"2023-06-16T19:03:16.0490683+02:00","tags":[]},"/permanent/ASCII":{"title":"ASCII","content":"\n- 128 个编码, 用 8 bits 存储\n- 现在已是 [[permanent/Unicode]] 的一部分\n\n#### ASCII 表\n\n|  Bin(二进制)     |  Oct(八进制)     |  Dec(十进制)     |  Hex(十六进制)      |  缩写/字符                        |  解释                        |\n|:--------------|:--------------|:--------------|:----------------|:------------------------------|:---------------------------|\n|  0000 0000    |  00           |  0            |  0x00           |  NUL(null)                    |  空字符                       |\n|  0000 0001    |  01           |  1            |  0x01           |  SOH(start of headline)       |  标题开始                      |\n|  0000 0010    |  02           |  2            |  0x02           |  STX (start of text)          |  正文开始                      |\n|  0000 0011    |  03           |  3            |  0x03           |  ETX (end of text)            |  正文结束                      |\n|  0000 0100    |  04           |  4            |  0x04           |  EOT (end of transmission)    |  传输结束                      |\n|  0000 0101    |  05           |  5            |  0x05           |  ENQ (enquiry)                |  请求                        |\n|  0000 0110    |  06           |  6            |  0x06           |  ACK (acknowledge)            |  收到通知                      |\n|  0000 0111    |  07           |  7            |  0x07           |  BEL (bell)                   |  响铃                        |\n|  0000 1000    |  010          |  8            |  0x08           |  BS (backspace)               |  退格                        |\n|  0000 1001    |  011          |  9            |  0x09           |  HT (horizontal tab)          |  水平制表符                     |\n|  0000 1010    |  012          |  10           |  0x0A           |  LF (NL line feed, new line)  |  换行键                       |\n|  0000 1011    |  013          |  11           |  0x0B           |  VT (vertical tab)            |  垂直制表符                     |\n|  0000 1100    |  014          |  12           |  0x0C           |  FF (NP form feed, new page)  |  换页键                       |\n|  0000 1101    |  015          |  13           |  0x0D           |  CR (carriage return)         |  回车键                       |\n|  0000 1110    |  016          |  14           |  0x0E           |  SO (shift out)               |  不用切换                      |\n|  0000 1111    |  017          |  15           |  0x0F           |  SI (shift in)                |  启用切换                      |\n|  0001 0000    |  020          |  16           |  0x10           |  DLE (data link escape)       |  数据链路转义                    |\n|  0001 0001    |  021          |  17           |  0x11           |  DC1 (device control 1)       |  设备控制1                     |\n|  0001 0010    |  022          |  18           |  0x12           |  DC2 (device control 2)       |  设备控制2                     |\n|  0001 0011    |  023          |  19           |  0x13           |  DC3 (device control 3)       |  设备控制3                     |\n|  0001 0100    |  024          |  20           |  0x14           |  DC4 (device control 4)       |  设备控制4                     |\n|  0001 0101    |  025          |  21           |  0x15           |  NAK (negative acknowledge)   |  拒绝接收                      |\n|  0001 0110    |  026          |  22           |  0x16           |  SYN (synchronous idle)       |  同步空闲                      |\n|  0001 0111    |  027          |  23           |  0x17           |  ETB (end of trans. block)    |  结束传输块                     |\n|  0001 1000    |  030          |  24           |  0x18           |  CAN (cancel)                 |  取消                        |\n|  0001 1001    |  031          |  25           |  0x19           |  EM (end of medium)           |  媒介结束                      |\n|  0001 1010    |  032          |  26           |  0x1A           |  SUB (substitute)             |  代替                        |\n|  0001 1011    |  033          |  27           |  0x1B           |  ESC (escape)                 |  换码(溢出)                    |\n|  0001 1100    |  034          |  28           |  0x1C           |  FS (file separator)          |  文件分隔符                     |\n|  0001 1101    |  035          |  29           |  0x1D           |  GS (group separator)         |  分组符                       |\n|  0001 1110    |  036          |  30           |  0x1E           |  RS (record separator)        |  记录分隔符                     |\n|  0001 1111    |  037          |  31           |  0x1F           |  US (unit separator)          |  单元分隔符                     |\n|  0010 0000    |  040          |  32           |  0x20           |  (space)                      |  空格                        |\n|  0010 0001    |  041          |  33           |  0x21           |  !                            |  叹号                        |\n|  0010 0010    |  042          |  34           |  0x22           |  \"                            |  双引号                       |\n|  0010 0011    |  043          |  35           |  0x23           |  #                            |  井号                        |\n|  0010 0100    |  044          |  36           |  0x24           |  $                            |  美元符                       |\n|  0010 0101    |  045          |  37           |  0x25           |  %                            |  百分号                       |\n|  0010 0110    |  046          |  38           |  0x26           |  \u0026                            |  和号                        |\n|  0010 0111    |  047          |  39           |  0x27           |  '                            |  闭单引号                      |\n|  0010 1000    |  050          |  40           |  0x28           |  (                            |  开括号                       |\n|  0010 1001    |  051          |  41           |  0x29           |  )                            |  闭括号                       |\n|  0010 1010    |  052          |  42           |  0x2A           |  *                            |  星号                        |\n|  0010 1011    |  053          |  43           |  0x2B           |  +                            |  加号                        |\n|  0010 1100    |  054          |  44           |  0x2C           |  ,                            |  逗号                        |\n|  0010 1101    |  055          |  45           |  0x2D           |  -                            |  减号/破折号                    |\n|  0010 1110    |  056          |  46           |  0x2E           |  .                            |  句号                        |\n|  0010 1111    |  057          |  47           |  0x2F           |  /                            |  斜杠                        |\n|  0011 0000    |  060          |  48           |  0x30           |  0                            |  字符0                       |\n|  0011 0001    |  061          |  49           |  0x31           |  1                            |  字符1                       |\n|  0011 0010    |  062          |  50           |  0x32           |  2                            |  字符2                       |\n|  0011 0011    |  063          |  51           |  0x33           |  3                            |  字符3                       |\n|  0011 0100    |  064          |  52           |  0x34           |  4                            |  字符4                       |\n|  0011 0101    |  065          |  53           |  0x35           |  5                            |  字符5                       |\n|  0011 0110    |  066          |  54           |  0x36           |  6                            |  字符6                       |\n|  0011 0111    |  067          |  55           |  0x37           |  7                            |  字符7                       |\n|  0011 1000    |  070          |  56           |  0x38           |  8                            |  字符8                       |\n|  0011 1001    |  071          |  57           |  0x39           |  9                            |  字符9                       |\n|  0011 1010    |  072          |  58           |  0x3A           |  :                            |  冒号                        |\n|  0011 1011    |  073          |  59           |  0x3B           |  ;                            |  分号                        |\n|  0011 1100    |  074          |  60           |  0x3C           |  \u003c                            |  小于                        |\n|  0011 1101    |  075          |  61           |  0x3D           |  =                            |  等号                        |\n|  0011 1110    |  076          |  62           |  0x3E           |  \u003e                            |  大于                        |\n|  0011 1111    |  077          |  63           |  0x3F           |  ?                            |  问号                        |\n|  0100 0000    |  0100         |  64           |  0x40           |  @                            |  电子邮件符号                    |\n|  0100 0001    |  0101         |  65           |  0x41           |  A                            |  大写字母A                     |\n|  0100 0010    |  0102         |  66           |  0x42           |  B                            |  大写字母B                     |\n|  0100 0011    |  0103         |  67           |  0x43           |  C                            |  大写字母C                     |\n|  0100 0100    |  0104         |  68           |  0x44           |  D                            |  大写字母D                     |\n|  0100 0101    |  0105         |  69           |  0x45           |  E                            |  大写字母E                     |\n|  0100 0110    |  0106         |  70           |  0x46           |  F                            |  大写字母F                     |\n|  0100 0111    |  0107         |  71           |  0x47           |  G                            |  大写字母G                     |\n|  0100 1000    |  0110         |  72           |  0x48           |  H                            |  大写字母H                     |\n|  0100 1001    |  0111         |  73           |  0x49           |  I                            |  大写字母I                     |\n|  01001010     |  0112         |  74           |  0x4A           |  J                            |  大写字母J                     |\n|  0100 1011    |  0113         |  75           |  0x4B           |  K                            |  大写字母K                     |\n|  0100 1100    |  0114         |  76           |  0x4C           |  L                            |  大写字母L                     |\n|  0100 1101    |  0115         |  77           |  0x4D           |  M                            |  大写字母M                     |\n|  0100 1110    |  0116         |  78           |  0x4E           |  N                            |  大写字母N                     |\n|  0100 1111    |  0117         |  79           |  0x4F           |  O                            |  大写字母O                     |\n|  0101 0000    |  0120         |  80           |  0x50           |  P                            |  大写字母P                     |\n|  0101 0001    |  0121         |  81           |  0x51           |  Q                            |  大写字母Q                     |\n|  0101 0010    |  0122         |  82           |  0x52           |  R                            |  大写字母R                     |\n|  0101 0011    |  0123         |  83           |  0x53           |  S                            |  大写字母S                     |\n|  0101 0100    |  0124         |  84           |  0x54           |  T                            |  大写字母T                     |\n|  0101 0101    |  0125         |  85           |  0x55           |  U                            |  大写字母U                     |\n|  0101 0110    |  0126         |  86           |  0x56           |  V                            |  大写字母V                     |\n|  0101 0111    |  0127         |  87           |  0x57           |  W                            |  大写字母W                     |\n|  0101 1000    |  0130         |  88           |  0x58           |  X                            |  大写字母X                     |\n|  0101 1001    |  0131         |  89           |  0x59           |  Y                            |  大写字母Y                     |\n|  0101 1010    |  0132         |  90           |  0x5A           |  Z                            |  大写字母Z                     |\n|  0101 1011    |  0133         |  91           |  0x5B           |  \\[                           |  开方括号                      |\n|  0101 1100    |  0134         |  92           |  0x5C           |  \\\\                           |  反斜杠                       |\n|  0101 1101    |  0135         |  93           |  0x5D           |  ]                            |  闭方括号                      |\n|  0101 1110    |  0136         |  94           |  0x5E           |  ^                            |  脱字符                       |\n|  0101 1111    |  0137         |  95           |  0x5F           |  _                            |  下划线                       |\n|  0110 0000    |  0140         |  96           |  0x60           |  \\`                           |  开单引号                      |\n|  0110 0001    |  0141         |  97           |  0x61           |  a                            |  小写字母a                     |\n|  0110 0010    |  0142         |  98           |  0x62           |  b                            |  小写字母b                     |\n|  0110 0011    |  0143         |  99           |  0x63           |  c                            |  小写字母c                     |\n|  0110 0100    |  0144         |  100          |  0x64           |  d                            |  小写字母d                     |\n|  0110 0101    |  0145         |  101          |  0x65           |  e                            |  小写字母e                     |\n|  0110 0110    |  0146         |  102          |  0x66           |  f                            |  小写字母f                     |\n|  0110 0111    |  0147         |  103          |  0x67           |  g                            |  小写字母g                     |\n|  0110 1000    |  0150         |  104          |  0x68           |  h                            |  小写字母h                     |\n|  0110 1001    |  0151         |  105          |  0x69           |  i                            |  小写字母i                     |\n|  0110 1010    |  0152         |  106          |  0x6A           |  j                            |  小写字母j                     |\n|  0110 1011    |  0153         |  107          |  0x6B           |  k                            |  小写字母k                     |\n|  0110 1100    |  0154         |  108          |  0x6C           |  l                            |  小写字母l                     |\n|  0110 1101    |  0155         |  109          |  0x6D           |  m                            |  小写字母m                     |\n|  0110 1110    |  0156         |  110          |  0x6E           |  n                            |  小写字母n                     |\n|  0110 1111    |  0157         |  111          |  0x6F           |  o                            |  小写字母o                     |\n|  0111 0000    |  0160         |  112          |  0x70           |  p                            |  小写字母p                     |\n|  0111 0001    |  0161         |  113          |  0x71           |  q                            |  小写字母q                     |\n|  0111 0010    |  0162         |  114          |  0x72           |  r                            |  小写字母r                     |\n|  0111 0011    |  0163         |  115          |  0x73           |  s                            |  小写字母s                     |\n|  0111 0100    |  0164         |  116          |  0x74           |  t                            |  小写字母t                     |\n|  0111 0101    |  0165         |  117          |  0x75           |  u                            |  小写字母u                     |\n|  0111 0110    |  0166         |  118          |  0x76           |  v                            |  小写字母v                     |\n|  0111 0111    |  0167         |  119          |  0x77           |  w                            |  小写字母w                     |\n|  0111 1000    |  0170         |  120          |  0x78           |  x                            |  小写字母x                     |\n|  0111 1001    |  0171         |  121          |  0x79           |  y                            |  小写字母y                     |\n|  0111 1010    |  0172         |  122          |  0x7A           |  z                            |  小写字母z                     |\n|  0111 1011    |  0173         |  123          |  0x7B           |  {                            |  开花括号                      |\n|  0111 1100    |  0174         |  124          |  0x7C           |  \\                            |                            |\n|  0111 1101    |  0175         |  125          |  0x7D           |  }                            |  闭花括号                      |\n|  0111 1110    |  0176         |  126          |  0x7E           |  ~                            |  波浪号                       |\n|  0111 1111    |  0177         |  127          |  0x7F           |  DEL (delete)                 |  删除                        |  ","lastmodified":"2023-06-16T20:10:36.7969637+02:00","tags":["标准"]},"/permanent/Access-Token-Manipulation":{"title":"Access Token Manipulation","content":"\n#### Access Token Manipulation\n通过操纵访问令牌(Access Token), 以另一个用户/系统进行交互, 绕过访问控制验证, 以此获得未经授权的访问能力\n\n#### Access Token Manipulation 分类\n- Token Impersonation/Theft\n- Create Process with Token\n- Make and Impersonate Token\n- Parent PID Spoofing\n- SID-History Injection\n\n#### 防御措施\n检测\n- 监视命令 `runas`\n- Win API(如 DuplicateToken(EX)) 监视\n- 与可疑行为相关联(以减少误报)\n\n缓解/补救措施\n- 权限账户/普通用户账户管理","lastmodified":"2023-06-16T19:03:06.1086329+02:00","tags":["安全"]},"/permanent/B+-%E6%A0%91":{"title":"B+ 树","content":"\n#### B+ 树\n- 内部节点不保存数据, 只保存值, 所有的数据只保存在叶子节点\n- 数据磁盘块之间加入了连接\n\n在 B 树的基础上:\n- 分离 Directory 和 Datei\n- 在有序作业时提升了效率\n\t- 有序作业(de. sequentielle Verarbeitung) e.g. “Nenne mir alle Studierenden, deren Nachname im Bereich \\[Be ... Brz\\] liegt.”\n\n![[attachments/Pasted image 20221219155102.png|600]]\n(最左叶子节点的那个10应该不存在)\n\n#### 分离值 Separator\n指在 directory 层的值, 这个值符合以下规则:\n- 其值 $\\gt$ 左子节点的所有值\n- 其值 $\\leq$ 右子节点的所有值(也就是说其数据在右子节点)\n\n","lastmodified":"2023-06-16T19:13:42.9506756+02:00","tags":["数据结构","数据库"]},"/permanent/B-%E6%A0%91":{"title":"B 树","content":"\n#### B 树\n- 数据在硬盘上存储在硬盘块(如4kb block)\n- 每一个非叶子节点都有指针 =\u003e 很贵\n- 在内部可以用二分法快速查找\n![[attachments/Pasted image 20221219143812.png|600]]\n\n\n#### B 树的阶 m\n1. 每个节点最多有 2m key\n2. 每个非根节点最少有 m key, 根节点最少 1 key\n3. 一个节点如果有 k key, 就有 k+1 子节点\n4. 所有叶子节点在同一层级\n\nmax height: $h \\leq \\lfloor \\log_{m+1}(\\frac{n+1}{2}) \\rfloor + 1$\n(n=#key)\n\n\n#### B 树的插入\n插入一个 key k\n- 找到合适的节点 N\n1. 若节点 N 的 key 少于 2m, 则直接插入到 N\n2. 若节点 N 的 key 等于 2m, 则将 N 中的第 m+1 个节点升级为高一级节点(插入到高一级), 原先的 2m 个节点和新来的 k 一起分成两个节点, 作为子节点\n\t![[attachments/Pasted image 20221219153142.png|500]]\n\n#### B 树的删除\n- 找到对应的节点 N, 并需要观察相邻节点 N+1\n1. 若删除后有 \\#key $\\geq$ m , 直接删除\n2. 若删除后 \\#key \u003c m, \n\t1. 若相邻节点 N+1 的 \\#key \u003e m, 那就 N 和 N+1 匀一下\n\t2. 若相邻节点 N+1 的 \\#key $\\leq$ m, 则合并 N 和 N+1\n","lastmodified":"2023-06-16T19:13:57.2135336+02:00","tags":["数据结构","数据库"]},"/permanent/Bell-LaPadula-%E6%A8%A1%E5%9E%8B":{"title":"Bell LaPadula 模型","content":"\n- 又名多层安全模型\n- 主体(用户)对客体(数据)的访问规则\n\n#### Simple security property 简单安全规则\n- no read up\n- 主体对于比自己安全级别**高**的客体不可读\n\n#### Star property 星属性安全规则\n- no write down\n- 主体对于比自己安全级别**低**的客体不可写\n\n#### Strong star property 强星属性安全规则\n- 主体可以对与自己安全级别相同的客体可读可写","lastmodified":"2023-06-15T17:36:43.3635368+02:00","tags":["模型","安全"]},"/permanent/Buffer-Overflows":{"title":"Buffer Overflows","content":"\n#### Buffer Overflows\n目的\n- 程序崩溃 Absturz\n- 损毁数据\n- 操纵程序运行时的环境, 尤其是返回地址\n\n#### stack smashing\n 1) to write/over-allocate too much data in a given part of the stack, thereby overwriting another part of the stack, and \n \n 2) where some external source (malicious or not) overwrote another program’s stack, though this is much less common.\n\n比如内存不安全的C, 用`strcpy`复制字符串的时候就可能改写超出给定字符串的长度\n```C\n\tchar c[12];\n\tstrcpy(c, bar);\n```\n![[Pasted image 20230117160703.png|500]]\n\n![[Pasted image 20221120152831.png|500]]\n\n**Shellcode**\n- 模仿程序call `system(\"/bin/sh\")\n- 壳程序不允许 0x00, 因此不能中断例如 `strcpy`\n\n\n#### 防御措施\n- Executable space protection, NX位 阻止执行堆栈\n- ASLR 随机选择 Text, Data, Heap, Stack 的地址, 使得地址不能被确定地访问\n- Canaries(Terminator, Random, Random XOR)\n- Bounds Checking\n- Testing/Fuzzing\n- C lang: `strncpy`取代`strcpy`\n\n#### 其他方式\n- Heap Corruption\n- Format String Attacks\n- ...\n\n\n类似的攻击方式: [[permanent/return-to-libc]]\n","lastmodified":"2023-06-16T20:00:43.6325966+02:00","tags":["安全"]},"/permanent/C++":{"title":"C++","content":"\n## 磨刀\n[VScode环境配置官方文档](https://code.visualstudio.com/docs/languages/cpp)\n\n## 基础\n[[permanent/C++基础|C++基础]]","lastmodified":"2023-06-16T19:15:45.6490836+02:00","tags":[]},"/permanent/C++%E5%9F%BA%E7%A1%80":{"title":"C++基础","content":"\n你可以看看你 `D:\\编程\\洛谷书练习` 的代码和注释\n","lastmodified":"2023-06-16T19:15:42.1858323+02:00","tags":[]},"/permanent/C2-CC":{"title":"C2 C\u0026C","content":"\n- command and control infrastructure\n- a set of tools to maintain communications with the compromised(attacked) devices (following the initial explotation)","lastmodified":"2023-06-16T19:16:00.7390741+02:00","tags":["安全"]},"/permanent/CPU":{"title":"CPU","content":"\n#### 算术逻辑单元 ALU\n- Arithmetic and Logic Unit\n- 对数据进行算术或逻辑运算\n\n#### 控制单元\n- Control Unit\n- 对存储器, ALU 和输入输出子系统进行控制\n\n#### 寄存器\n\n##### 数据寄存器 R\n保存输入输出数据和运算结果\n\n##### 指令寄存器 IR\n存储整条指令(e.g. add M R2)\n\n##### 指令计数器 PC\n存储下一条指令的地址\n\n\n","lastmodified":"2023-06-15T17:15:45.1724461+02:00","tags":["计组"]},"/permanent/CRC-%E5%8D%A1%E7%89%87":{"title":"CRC 卡片","content":"\n- class, resonsibility, collaberation cards\n- 软件结构设计的一种方式\n- ![[attachments/Pasted image 20230219152252.png|L|300]]\n- ![[attachments/Pasted image 20230219152444.png|L|300]]\n","lastmodified":"2023-06-16T19:19:11.6317868+02:00","tags":["开发"]},"/permanent/CSRF":{"title":"CSRF","content":"\n#### CSRF\ncross-site request forgery 跨站请求伪造\n具有此漏洞的程序允许攻击者以受害者的权限执行操作\n\n#### CSRF 攻击流程\n1. 要求: 受害者在 Web 服务器上有一个活动会话\n2. 攻击者诱使受害者点击特定链接, 这个链接被修改过, 会触发特定操作. 比如表面上是正常页面, 实际发起一个修改密码的请求\n3. Web 服务器会执行请求, 因为该请求是合法用户发起的\n![[attachments/Pasted image 20230117154621.png|300]]\n\n","lastmodified":"2023-06-16T19:22:43.3236832+02:00","tags":["安全"]},"/permanent/CVE":{"title":"CVE","content":"\nCommon Vulnerability and Exposures\n","lastmodified":"2023-06-16T19:23:10.1429427+02:00","tags":["安全"]},"/permanent/CVSS":{"title":"CVSS","content":"\n#### CVSS\nCommon Vulnerability Scoring System v3\n- 是可免费商用的漏洞威胁度评估标准, 量化范围\\[0. 10\\]\n- 由 CMU(NIST) 建立, 现在由 FIRST(Forum of Incident Response and Security Teams) 维护, v3 是目前事实上(de-facto)的标准\n\n**Input**\n预先准备好的问题和选项\n\n**Output**\nCVSS Score: \\[0, 10\\]\nCVSS Vector: compact string, 对 Input 的整体小结\n\n#### CVSS 三组指标\n\n##### Base Metrics\n- Exploitability metrics\n\t- Attack vector: 入侵途径\n\t- Attack complexity: 入侵复杂性\n\t- Privileges required: 权限需求\n\t- User interaction: 是否需要受害者交互\n - Impact metrics\n\t - Confidentiality impact 机密性影响\n\t - Integrity impact 完整性影响\n\t - Availability impact 可用性影响\n- Scope: 波及范围, i.e. 会影响其他系统吗\n\n##### Temporal Metrics\n- Exploit code maturity: 理论阶段/理论证明/可用的exp/蠕虫或者其他可能造成大量入侵的\n- Remediation level: 无解/正在处理/官方临时修复/官方长期修复\n- Report confidence: 传闻/document/官方认证\n\n##### Environmental Metrics\n是涉及到实际使用情况的指标, 在不同组织不一样\n- Confidentiality Requirement\n- Integrity Requirement\n- Availability Requirement\n- Modified Base Metrics\n\n\n#### CVSS Calculator\n https://nvd.nist.gov/CVSS/v3-calculator \n https://www.first.org/cvss/calculator/3.1\n\n#### CVSS 示例\n```\nCVSS:3.0/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:X/RL:X/RC:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:X/MS:X/MC:X/MI:X/MA:X  \nCisco: CVSS v3 Base Score: 8.8\n```\n\n![[attachments/Pasted image 20230111224307.png|500]]\n\n![[attachments/Pasted image 20230111224429.png|500]]","lastmodified":"2023-06-16T19:23:53.4282405+02:00","tags":["安全","标准"]},"/permanent/Clustering":{"title":"Clustering","content":"\n## Clustering\n聚类\n\n\n## 聚类算法\n\n### K-Mean\n- 很常见的聚类算法\n\n##### 输入\n- n 维向量的点集\n\n##### 输出\n- 每个点的类标签\n\n##### 算法\n1. 确定初始的类中心点 $\\mu_1, \\ ..., \\ \\mu_k$ (e.g. 随机)\n2. 计算点集中的每个点与哪个中心最近, 则这个点标上此类的标签\n3. 重新计算类中心点, 使该类所有点到该点的总距离最小\n4. 重复2,3步, 直到无变化或到达精度要求\n\n\n### DBSCAN\n- 基于密度的聚类算法\n- 动画: [DBSCAN - bilibili](https://www.bilibili.com/video/BV17L4y147W2/?spm_id_from=333.337.search-card.all.click\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n\n##### 概念\n- 核心点 core point/core object: 辐射半径内至少有 n 个其他点\n- 非核心点\n- 辐射半径: 一个自定义的半径\n- 离群点: 辐射半径内一个其他点都没有\n\n##### 输入\n- 辐射半径 \n- n: 成为核心点需要周围有 n 个点\n\n##### 输出\n- 每个点的簇\n\n##### 算法\n1. 找到所有核心点\n2. 从任意一个核心点开始, 将其与其半径内的所有核心点加入第一个簇\n3. 重复2直到对所有核心点处理完成\n4. 将所有核心点周围的非核心点加入该簇(没说冲突怎么处理)\n5. 剩下的点是离群点","lastmodified":"2023-06-16T19:16:10.7480431+02:00","tags":["ML"]},"/permanent/Cryptoanalyse":{"title":"Cryptoanalyse","content":"\n## 密码破译技术\n#### Bruteforce\n- 128 bit -\u003e 3.4e+38 种密码可能(如果计算机每秒尝试30亿次, 1000台电脑最多需要尝试3.6e+18年)\n- 256 bit -\u003e 配置同上, 1.2e+57年\n\n#### 撞库\n- 先 MD5散列时代 的攻击技术\n- 所以要[[permanent/加盐|加盐]]啊喂\n\n#### 彩虹表\n- [[permanent/彩虹表|彩虹表]]\n- 后 MD5散列时代 的爆破用表\n\n## 对抗密码破译\n#### 加盐\n- [[permanent/加盐|加盐]]\n- 预防撞库攻击, 安全地存储用户密码","lastmodified":"2023-06-16T19:21:00.5450915+02:00","tags":["安全","密码"]},"/permanent/Cryptography":{"title":"Cryptography","content":"\n## 密码系统\n\n#### Cryptosystem\n$$ S = (M,K,C,e,d)$$\n- **M**essage 明文\n- **K**ey 密钥\n- **C**ipher 密文\n- **e**ncrypt function $e = M \\times K \\rightarrow C$\n- **d**ecrypt function $d = C \\times K \\rightarrow M$\n\n## 密码分类\n- [[permanent/对称密码|对称密码]] 与 [[permanent/非对称密码|非对称密码]]\n- 区块密码 与 流密码\n\n## 密码结构\n[[permanent/Feistel 密码结构|Feistel 密码结构]]\n\n## 分组方式\n- ECB, CBC, CFB, CTR, 印象里说只有 CTR 和哪一种是比较好的\n\n#### ECB\n- Electronic CodeBook mode\n- 最简单的方式\n- 每个密码块用同样的密钥进行加密\n- 缺点: 容易用统计学特性分析\n\n#### CBC\n- Cipher Block Chaining\n- 每个密码块在加密前与前一个块进行 XOR(需要一个初始化向量 Initialization Vector)\n- 优点: 没有 ECB 的缺点\n- 缺点: 没有随机访问\n\n","lastmodified":"2023-06-16T19:29:20.2353989+02:00","tags":["安全","密码学"]},"/permanent/DES":{"title":"DES","content":"\n- Data Encryption Standard\n\n#### 历史\n- 1977NBS(前NIST), 第一个广泛使用的标准化加密方法\n- 2002年被 AES 取代\n- 98年 EFF 耗资 250k 美金, 搞了个 Deep Crack 针对, 直接给干碎了\n\n#### 特点\n- substitution, permutaion, modolo 2\n- 密钥 64bit, 有效 56bit(8bit奇偶校验), 从现代角度看很容易破解. 改进: 3DES\n- 16 次迭代\n- [[permanent/Feistel 密码结构]]\n\n- 高 diffusion: 每 bit 的明文平均导致 50% 明文变化\n- 对抗分析能力强: 差分分析需要 2^58 次操作\n\nDouble-DES, 3DES\n![[attachments/Pasted image 20230220122024.png|L|400]]\n","lastmodified":"2023-06-16T19:29:20.2456601+02:00","tags":["安全","密码学"]},"/permanent/DNS":{"title":"DNS","content":"\nDomain Name System","lastmodified":"2023-06-16T19:26:57.7871093+02:00","tags":["计网"]},"/permanent/DOS-DDOS":{"title":"DOS, DDOS","content":"\n##### DOS, DDOS\nDenial of Service\nDistributed Denial of Service\n\n#### (D)DOS 常见原因\n- 超负荷 (de. Überlastung)\n- 引导 Exception\n- 引导死机(代码的漏洞或协议的漏洞)\n\n#### (D)DOS 常见类型\n- 请求受限的或不可同时使用的资源 (beschränkte/unteilbare)\n- 更改或毁坏配置\n- 物理毁坏\n\n#### (D)DOS 例子\n- 邮件轰炸\n- 内存溢出 e.g. Ping of Death\n- 利用程序的缺陷\n- 耗尽带宽或操作系统资源\n- [[permanent/Mirai Botnet]]\n\n#### DOS 原理\n向指定服务器发送超过负荷的请求, 使其瘫痪\n\n#### DDOS 基础流程\n1. 寻找可渗透的机器(主站)\n\t- Scanner, Rootkits, 工具包\n2. 主站自动尝试渗透其他机器，安装 DDOS 软件(Daemon)\n3. 开始攻击，在预定时间启动主站的程序，通知肉鸡的Daemon, 发动 DDOS\n\n#### DDOS 相关工具\n[[permanent/LOIC]]\n\n#### DDOS 防御措施\n通常来说，一般保护是不可能的，只能针对特定的攻击种类\n- DDoS 防御供应商\n- 软件更新和配置调整\n- 防暴力 DDoS: \n\t- 防火墙规则\n\t- 在上行链路尽可能早地阻断攻击者\n\t- Blackholing/Null route\n- 一般方法：\n\t- Overprovisioning/Load Balansing\n\t- 流量检测/监视开放端口\n\t- 遵循错误和安全警告(e.g. CERT)\n\n#### Smurf 攻击\n将 ICMP 数据包(ping包)的应答地址改成受害主机 IP,\n再将数据包发送给某个网络的广播地址(放大攻击Amplifiction attack),\n于是网络中所有主机都对受害主机作出应答，导致网络拥堵\n解决思路：\n- 设置路由不回答目标为广播地址的 Broadcast\n- 设置服务器不回答 Broadcast Ping\n\n#### DNS 放大攻击\n[[permanent/DNS]] Amplification Attack\n核心: 将很小的查询变成很大的负载\n\n将查询请求的发送地址改成受害地址，\n用 UDP 发送小数据包(约60B)给 DNS 服务器,\n可以特意去找有长字段的服务器(e.g. TXT-Feld)\n回答可以很大(理论上能到3000B)\n数据包放大的倍数叫**放大因子**(de. Verstärkungsfaktor)\n\n解决思路：\n- 不回答外部的递归请求\n-  限制来自同一推定 Client 的阈值 (de. Schwellenwerte)\n\n相似: [[permanent/NTP 协议#NTP Amplification|NTP Amplification]]\n\n#### SYN泛洪\nSYN Flooding\n\n利用 TCP 三次握手, \n发送编号不连贯的 SYN 报文，造成 SYN+ACK 回复丢失的假象\n使得受害机器不断回复“丢失”报文\n需要伪造大量不同的源地址，这些源地址最好不能响应 SYN+ACK\n\n解决思路：\n- 定义关闭半连接的 Timer(作用有限)\n- 占用满时随机关闭半连接/设置半连接上限(作用有限)\n\n#### SYN Cookies\n- SYN Cookies: 记录回文的 SYN 值 y, 只有收到 y+1 回复才继续保留连接\n- 特殊的 Sequence number\n\t- 1-5 Timecounter t mod 32, t 每64秒增加\n\t- 6-8 Max Segment Size\n\t- 9-32 套接字和 t 的加密哈希\n\n缺点:\n- MSS 只有 8bit\n- 服务器必须拒绝包含某些TCP选项的连接请求（例如，选择性ACK，TCP window scaling）。\n- extra costs\n\n#### RST Cookies\n服务器在SYN ACK中回应一个不正确的序列号（没有分配资源）\n（好）客户回应RST（因为序列号不正确）\n（坏）客户不向服务器发送RST包。\nsrc: itsec U2\n","lastmodified":"2023-06-16T19:54:55.0532917+02:00","tags":["安全"]},"/permanent/DRM":{"title":"DRM","content":"\nDigital Rights Management 数字版权管理","lastmodified":"2023-06-16T19:27:42.1135771+02:00","tags":[]},"/permanent/Dafny":{"title":"Dafny","content":"\n属于 [[project/lmu - FSV1|lmu - FSV1]]\n\n### method验证框架\nmethod关键字 函数名(变量名: 变量类型)\n- returns关键字(可无)\n- requires关键字(可无)\n- ensures关键字(可无)\n  \nassert关键字\n```Dafny\nmethod abs(i: int)\n    returns (j: int)\n    requires true\n    ensures j == i || j == -i\n{\n    if i \u003c 0 { j := -i; }\n    else     { j :=  i; }\n\n    assert j \u003e= 0;\n}\n```\n\n## 函数头拓展操作\n```dafny\nmethod toInt(b: bool)\n    returns (i: int)\n    ensures  b ==\u003e i == 1\n         // !b || i == 1\n\n    ensures !b ==\u003e i == 0\n{\n    if(b) { i := 1; }\n    else  { i := 0; }\n    assert 0 \u003c= i \u0026\u0026 i \u003c= 1;\n}\n```\n\n- implement \\==\u003e\n- 传入的数组想要修改，需要在函数头加上`modifies`关键字\n- 函数名(变量名?: 变量类型) 表示一个指针类型可以为null\n \n### Variables\n- 定义变量\n    - var i:= 0;\n    - 没有类型\n- 赋值用`:=`\n- 数组\n```\n    var a: array\u003cint\u003e;\n    a[0] == 0;\n    a.Length\n    modifies a\n```\n\n```dafny\nmethod init(a: array\u003cint\u003e)\n    modifies a\n    ensures forall k:int ::\n        0 \u003c= k \u003c a.Length ==\u003e a[k] == 0\n{\n    var i := 0;\n\n    while i \u003c a.Length\n        modifies a\n        invariant 0 \u003c= i \u003c= a.Length\n        invariant forall k:int ::\n            0 \u003c= k \u003c i ==\u003e a[k] == 0\n    {\n        a[i] := 0;\n        i := i + 1;\n    }\n}\n```\n\n### invariant\n- 写在循环里面，这个是在循环内必须满足的条件\n- FSV1 Project2的作业里的示例不错\n\n- 例：loop\n```dafny\nmethod loop(n: int)\n    requires n \u003e= 0\n{\n    var i: int;\n    i := 0;\n\n    assert 0 \u003c= n;\n\n    while i \u003c n\n        invariant 0 \u003c= i \u0026\u0026 i \u003c= n\n    {\n        assert i \u003c n;\n        i := i + 1;\n        assert i \u003c= n;\n    }\n\n    assert i == n;\n}\n```\n\n- 例：gauss\n```dafny\nmethod gauss(n: nat)\n    returns (s: nat)\n    requires n \u003e= 0\n    ensures s == n*(n+1)/2;\n{\n    s := 0;\n\n    var i := 0;\n    while i \u003c n\n        invariant 0 \u003c= i \u003c= n;  //可以写多个\n        invariant s == i*(i+1)/2;\n    {\n        i := i + 1;\n        s := s + i;\n    }\n\n    assert i \u003e= n;\n    assert i == n;\n    assert s == n*(n+1)/2;\n}\n```\n\n- 例: linear_search (forall写法)\n```dafny\nmethod linear_search(a: array\u003cint\u003e, x: int)\n{\n    var i := a.Length -1;\n    var b := false;\n\n    while i \u003e= 0\n        invariant forall k: int::\n            i \u003c k \u003c a.Length \u0026\u0026 k \u003e= 0 ==\u003e a[k] != x\n    {\n        if a[i] == x {\n            b := true;\n            break;\n        }\n        i := i - 1;\n    }\n\n    // Nichtdeterministische Auswahl eines gültigen Indizes\n    // der stellvertretend für alle Indizes geprüft wird.\n    var k: int;\n    assume 0 \u003c= k \u003c a.Length -1; // hier ok: Spezifikationsmechanismus!\n\n    assert  b ==\u003e a[i] == x;\n    assert !b ==\u003e a[k] != x;       // Gesamtziel der Verifikation\n}\n```\n\n### model\n- ![image.png](../attachments/image_1645037881743_0.png)","lastmodified":"2023-06-16T19:24:46.0068546+02:00","tags":[]},"/permanent/Data-Mining":{"title":"Data Mining","content":"\n#### tasks of data mining\n- supervised:\n    - Classification  \n    - Regression  \n- unsupervised:\n    - [[permanent/Clustering]]\n    - Outlier Detection\n\n#### techniques\n[[permanent/KDD]]\n","lastmodified":"2023-06-16T19:42:20.4886427+02:00","tags":["ML"]},"/permanent/Dictate":{"title":"Dictate","content":"\n##### Surprising Facts About Anime\nIn Japanese's(Japanese) culture, anime is a revered artistic media(medium), enjoyed by men and women, young and old. And more recently in(on) every continent.\nAnime transent(transcends) country(cultural) boundaries, and can be used as a vehicle to tell any story imaginable.\n// Great anime aren't just quality entertainment, they can also offer cutting social commentary, philosophical musings and much much more.\n// Not your grandfather's Saturday morning cartoons, to be sure.\nThanks to Japanese artists, who are determine(d) to show you, just how (thematically) deep the well-made Animation can be.\nLet's take a look at some interesting facts you might not already know about anime.\nAround 60% percent of the world's cartoon animation entertainment, is Japenese produced anime.\nThe first wildly popular anime was (Osamu Tezuka's) (Astro Boy) in 1963.\nAstro Boy was also the first anime to television (series) in Japan.\nTezuka's was greatly influenced by Disney during the golden age of animation, as well as(many of) Tezuka's comtenparies(contemporaries).\n// He followed up with another hit, Kimba the White Lion, which in turn, is seen by many to have inspired the Disney classic The Lion King.\nInspiration could be in(coming) full circle.\nEarly example is Japanese animation in the 20th centery(century), was inspired by //  nimators in America and Europe, and most were adaptations of Asian folklore and legends intraditional Japanese art styles.\nScience fiction based (mecha) anime, also known as giant robot anime, was one of the first genres to really catch on the(with viewers) during the anime boom in(of) the 70th.\nFoundational mecha shows such as Mobile Suit Gundam pave the way of morden anime industry, and (blazed a broad trail) for (others) to follow.\nThough anime has a reputation of not (catering to) western sensibility regarding violent(violence) and sexuality, // the mid 90's series Neon Genesis Evangelion certainly tested the limits of what was considered accaptable.\nDue to the often shocking against(and) contrivercial content to(of) Evangelion, TV Tokyo became heavily sensoring(censoring) subsequent anime like the // acclaimed Cowby Bebop resulting in only half of the episodes produced for the space western ever airing on television.\nAkira's widely considered to be one of the most influential (works of) animes(anime) ever created, introducing anime to the western world // when it bursts onto the screen in 1988.\n19\n","lastmodified":"2023-06-14T23:51:41.8951925+02:00","tags":["en"]},"/permanent/Dropper":{"title":"Dropper","content":"\n#### Dropper\n一种木马, 功能是将嵌入的恶意软件下载到受害者的计算机上, payload 通常是加密存储的\n\n#### 多阶段 Dropper\n为了规避反恶意软件的检测, 附带了更多的伪装, 比如下载器功能, 在受害机器 active 时才下载 payload. 比如 dropper 通过 SFTP 加载又一个 dropper.\n\n","lastmodified":"2023-06-16T19:28:00.2584103+02:00","tags":["恶意软件","安全"]},"/permanent/EPP-EDR-XDR":{"title":"EPP, EDR, XDR","content":"\n#### EPP, EDR, XDR\n- Endpoint Protection Platform 终端防护平台\n- Endpoint Detection \u0026 Respense 终端检测和响应\n- Extended Endpoint Detection \u0026 Reaction\n\n可以理解为新一代终端安全解决方案(之前是传统杀毒软件)\n\n- EPP 预防已知威胁\n- EDR 解决未知威胁\n- XDR 防止域内传播\n\n#### EDR \n**EDR 的任务和目标**\n- 持续监控终端行为和网络流量\n- 收集安全数据, 分析, 识别异常并报告\n- 对威胁的快速反应\n\t- 基于规则的应对行为\n\t- 状况提醒\n\t- 黑名单生成\n\t- 来自意外响应团队的支援\n\n#### XDR\nXDR 是基于 [[permanent/SaaS|SaaS]], 特定于供应商的安全威胁检测和事件响应工具, 它相比 EDR 的特别之处在于将多个安全产品(如邮件系统, 云应用)原生地集成到一个统一的安全运营系统中.\n- 开箱即用的通用安全产品集合\n- 多种安全产品协同, 提高检测灵敏度\n- 集中和规范化中央存储库中的数据以进行分析和查询\n\nXDR 会接管部分 [[permanent/SIEM|SIEM]] 的功能","lastmodified":"2023-06-16T20:02:40.9637945+02:00","tags":["安全"]},"/permanent/F1-Metrics":{"title":"F1 Metrics","content":"\n#### F1 Metrics\nTP = true positive, 实为 pos, 预测为 pos\nTN = true negative, 实为 neg, 预测为 neg\nFP = false positive, 实为 neg, 预测为 pos\nFN = false positive, 实为 pos, 预测为 neg\n\n##### Accuracy\n- A = (TP +TN) / all\n\n##### Precision\n- 预测为 pos 的样本中, 有多少是正确的\n- P = TP (TP + FP)\n- P(neg) = TN (TN + FN)\n\n##### Recall\n- 所有的 pos 样本中, 有多少被准确预测为 pos\n- R = TP / (TP + FN)\n- R(neg) = TN / (TN + FP)\n\n##### F1-score\n- 是 [[#Precision|Precision]] 和 [[#Recall|Recall]] 的 [[permanent/平均指标#调和平均数|调和平均数]]\n- F1 = 2 * P * R / (P + R)\n","lastmodified":"2023-06-15T16:31:14.9080558+02:00","tags":[]},"/permanent/Feature-Branch-Workflow":{"title":"Feature Branch Workflow","content":"\n是 Git 的一种工作流.\n\n### Benifits\n- pull requests\n- isolated experiments\n- efficient collaboration","lastmodified":"2023-06-16T19:29:07.6358574+02:00","tags":["Git"]},"/permanent/Feistel-%E5%AF%86%E7%A0%81%E7%BB%93%E6%9E%84":{"title":"Feistel 密码结构","content":"\nFeistel 密码结构，在密码学研究中，Feistel 密码结构是用于 分组密码 中的一种对称结构.\n\n#### 特点\n- 将输入分成两个部分\n- n 轮迭代\n- 通过 Permutation, Substitution 实现 高 diffusion\n- 函数 f 不一定可逆","lastmodified":"2023-06-16T19:29:18.4591515+02:00","tags":["密码学"]},"/permanent/GPT":{"title":"GPT","content":"\n- Generative Pre-trained Transformer","lastmodified":"2023-06-16T19:33:24.9362676+02:00","tags":["ML","AI"]},"/permanent/Git":{"title":"Git","content":"\n### Git 概念\n\n##### HEAD\n指向当前签出的分支\n\n##### 3-Way-Merge\n在目标分支上创建一个新的提交, 包括源分支和目标分支的修改.\n\n##### Fast-Forward-Merge\n只有当源分支和目标分支在历史中在同一路径时才可用, 会将目标分支推到源分支\n\n##### Rebase\n变基. 将源分支的 commit 路程在目标分支里也复制一遍.\n例如, 在 feature 执行 git rebase origin, 就会将 feature 的历史复制到 origin.\n如果你想让源分支历史看起来像没有经过任何合并一样, 就用 rebase 吧\n\n##### Pull\npull = fetch + merge\npull 将远程的修改同步到本地\n因为 pull 使用频率高, 频繁的 merge 会扰乱历史路径, 因此 pull 时通常会使用 rebase 选项.\n\n##### Merge Conflict\n指两个版本的代码无法自动合并的情况. 比如说两个版本的代码在同一个位置进行修改了.\n\n### Git 命令\n\n#### 修改\n##### 直接修改上一次 commit\n改完后 add, \n```git\ngit commit --amend\n```\n\n##### 查看当前修改状态\n```git\ngit status -s\n```\n\n#### 分支\n\n##### 创建分支\n```git\ngit branch refactoring\ngit checkout refactoring\n// 或\ngit checkout -b refactoring\n```\n\n##### 查看当前分支\n```git\ngit branch --show-current\n```\n\n##### 查看所有分支\n```git\ngit branch --list\n```\n\n#### 合并\n\n##### 合并冲突\n提示冲突的时候, 先通过 IDE 手动处理冲突\n然后再次 add 和 commit, 若再自动打开 IDE, 这次的内容可以直接接受.\n\n#### 回滚\n\n##### 撤销一次 commit\n```git\ngit revert \u003ccommit-hash\u003e\n```\n\n##### 重置当前 commit\n```git\ngit reset\n```\n\n#### 代码历史\n\n##### 简洁查看代码历史\n```git\ngit log --oneline\n```\n\n##### 可视化查看代码历史\n```git\n git log --graph --oneline --branches\n```\n\n##### 编辑历史\n操作方法同下面删除节点\n\n如果修改的是 first commit, 则用 -root 选项\n\u003e git rebase -i --root\n\n##### 删除一个 commit 节点\n这并不是一个常规操作, 也没有专门的命令来执行, 需要使用 interactive rebase.\n\n开始状态\n```git\n$ git log --oneline\n311e523 (HEAD -\u003e main) 3rd\n598889b 2nd\nc5f4f3d Revert \"3rd change\"\n4c38726 3rd change\n438e4f4 1st change\n63330cd first commit\n```\n\n执行交互 rebase 命令, 版本是最晚的要保持不变的 hash\n\u003e git rebase -i 438e4f4\n\n\n在交互中, 按照说明所指示的, 把要删除的 commit 前标为 drop (或d), 退出 vim\n\n出现冲突的话, 直接手动保留想要的内容, 修改完成后 add(不用commit), 然后执行 `git rebase --continue`\n\n结束\n![[attachments/Pasted image 20221213155739.png|500]]\n\n#### 暂存修改\n\n1. 如果自己在本地做了修改, 又要拉取远程, 可能会报错要 stash\n那就 `git stash`, `git pull`, `git stash pop`, 就能在 pull 同时保存自己的修改\n\n2. 如果在 dev 开发中(半成品代码), 然后需要切回 master 改bug, 那就可以用 `git stash`/`git stash pop`\n\n### 工作流程\n\n#### Workflow\n[[permanent/Gitflow Workflow|Gitflow Workflow]]\n\n[[permanent/Gitlab Workflow|Gitlab Workflow]]\n\n[[permanent/Feature Branch Workflow|Feature Branch Workflow]]\n\n[[permanent/Trunk-based Workflow|Trunk-based Workflow]]\n\n#### ssh 密钥生成\n```bash\ngit config -–global user.name ‘xxxxx’\ngit config –-global user.email ‘xxx@xx.xxx’\nssh-keygen -t rsa -C ‘上面的邮箱’\n ```\n \n代码参数含义：\n- -t 指定密钥类型，默认是 rsa ，可以省略。\n- -C 设置注释文字，比如邮箱。\n- -f 指定密钥文件存储文件名。","lastmodified":"2023-06-16T20:08:30.512898+02:00","tags":["工具使用","Git"]},"/permanent/Gitflow-Workflow":{"title":"Gitflow Workflow","content":"\n是 Git 的一种工作流.\n- git branching model\n- 现在受欢迎程度下降, 取而代之的是 [[permanent/Trunk-based Workflow|Trunk-based Workflow]]\n- 更多分支, 分支的生命周期更长, 更大的 commit\n\nsrc: [Gitflow Workflow|Atlassian](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)\n\n### Gitflow\n- 为每一个 feature 创建分支, 直到 feature 完成才将分支合并到主干(导致容易偏离)\n- 有独立的分支来管理 releases\n- 也有 [[permanent/Feature Branch Workflow#Benifits|Feature Branch Workflow 的好处]]\n\n\n#### Get started\n\n1. 安装\n[download and install gitflow](https://git-scm.com/download/win)\n\n2. `git flow init`\n这个命令是 `git init` 的拓展, 会引导用户创建 gitflow 所需要的分支\n- main\n- develop\n- feature\n- release\n- hotfix\n- support\n\n#### How it works\n\n##### main branch\nofficial release history\n\n##### develop branch\nintegration branch of features\n\n为 main 创建一个一样的 develop 分支, 最简单的办法是创建一个空分支然后直接 push:\n```git\ngit branch develop\ngit push -u origin develop\n```\n##### feature branches\n每一个 feature 有专属的分支, 从 develop 创建, 合并到 develop\n\n**创建一个 feature branch**\n```git\ngit checkout develop\ngit checkout -b feature_branch\n```\n\n如果使用 gitflow:\n```gitflow\ngit flow feature start feature_branch\n```\n\n**合并 feature branch**\n```git\ngit checkout develop\ngit merge feature_branch\n```\ngitflow:\n```gitflow\ngit flow feature finish feature_branch\n```\n\n##### release branches\n当累计的 feature 足够更新一个版本 (或 ddl 要到了) 的时候, 从 develop 创建的版本分支.\n当 release branch 被创建时, 就是新的 release 循环的开始, 新 feature 不再合并至这个 release branch, 只有 hotfix, 文档, 版本相关工作才可以合并到这个 release branch.\nrelease branch 准备好, 就会合并到 main, 并 tag 版本号. 同时也将同样的内容合并到 develop. \n最后删除 release 分支.\n\n\n**创建 release branch**\n```git\ngit checkout develop\ngit checkout -b release/0.1.0\n```\ngitflow\n```gitflow\ngit flow release start 0.1.0\n// Switched to a new branch 'release/0.1.0'\n```\n\n**结束 release branch**\n```git\ngit checkout main\ngit merge release/0.1.0\ngit checkout develop\ngit merge release/0.1.0\ngit branch -D release/0.1.0\n```\ngitflow\n```gitflow\ngit flow release finish '0.1.0'\n```\n\n##### hotfix branches\n唯一一种可以直接从 main 创建, 并直接合并到 main 的分支.\n完成的时候同时也要合并到 develop(或者当前 release, 如果有的话).\n合并后删除.\n\n**创建 hotfix branch**\n```git\ngit checkout main\ngit checkout -b hotfix_branch\n```\ngitflow:\n```gitflow\ngit flow hotfix start hotfix_branch\n```\n\n**结束 hotfix branch**\n```git\ngit checkout main\ngit merge release/0.1.0\ngit checkout develop\ngit merge release/0.1.0\ngit branch -D hotfix_branch\n```\ngitflow:\n```gitflow\ngit flow release finish hotfix_branch\n```\n\n### Example\n![[attachments/Pasted image 20221212230143.png|500]]\n\n","lastmodified":"2023-06-16T20:08:30.5271647+02:00","tags":["Git"]},"/permanent/Github-%E5%8A%A0%E9%80%9F":{"title":"Github 加速","content":"\n### 查ip\n1.  [github.com](http://github.com/)\n2.  [assets-cdn.github.com](http://assets-cdn.github.com/)\n3.  [github.global.ssl.fastly.net](http://github.global.ssl.fastly.net)\n\nhttps://www.ipaddress.com/ 查ip\n\n\n### 改hosts\nc/win/sys32/drivers/etc/hosts\n\n### 刷新dns缓存\nipconfig /flushdns\n\n---\n22.10.1\n\n140.82.113.4    github.com\n\n185.199.108.153 assets-cdn.github.com\n\n151.101.1.194  github.global.ssl.fastly.net","lastmodified":"2023-06-16T19:31:10.1572082+02:00","tags":["Git","工具使用"]},"/permanent/Gitlab-Workflow":{"title":"Gitlab Workflow","content":"\n#### 流程\n1. 提出了 issue\n2. 建立 branch\n3. 开发, 测试\n4. 提出合并请求\n5. 合并 review\n6. 合并到主干\n7. build\n\n![[Pasted image 20221212230701.png|500]]\n","lastmodified":"2023-06-16T19:31:22.0910547+02:00","tags":["Git"]},"/permanent/Gradle":{"title":"Gradle","content":"\n是 [[permanent/Java|Java]] 的 Build 工具.\n\ndocs.gradle.org\n\n## Gradle 概念\nWrapper, GradleUserHome, Daemon: [来自Gradle开发团队的Gradle入门教程](https://www.bilibili.com/video/BV1DE411Z7nt/) P1前22分钟\n\n### Gradle Build Phases\n- Initialization\n- Configuration\n\t- 会把 build.gradle 从上到下执行(当成 groovy)\n- Execution\n### Gradle Wrapper\n\n`./gradlw xxx` 命令会自动下载对应版本的 gradle \n\n### GradleUserHome\n插件, 依赖包都会缓存在这个路径.\n不建议每次都用一个新的目录, \n默认路径 `Home/.gradle`, 在 IntelliJ 的 build Tools 设置中可以修改\n\n**init.d**\n脚本, 在每次用 gradle 构建时会运行的全局脚本, 最常用来加速\n\n**cache**\n缓存依赖包, 插件等\n\n### Daemon\ngradle 3.0 之后的任务处理模式\n\n处理 gradle Task 时, 启动一个 轻量的 Client JVM, 只和 Daemon JVM 进行 socket 通信, 任务结束后销毁 Client JVM, 但保留 Daemon. 这样就避免了每次 JVM 冷启动耗费多余的时间.\nDaemon 默认空闲 3 小时自动退出\n\n相对的, Maven 每处理一个任务会跑一个 JVM, 就是 Maven 的 Lifecycle, 任务结束后销毁 JVM \n\n#### Daemon 的兼容性问题\nclient JVM 和 Daemon JVM 可能有兼容问题, 比如说版本, 比如说 Client 要求的内存 Daemon 不够, 这时候就会启动一个新的 Daemon.\n\n#### --no-daemon\n放弃 daemon 模式的参数, 3.0之前建议 CI 使用, 但4.0后 Daemon 稳定, 不需要 --no-daemon\n\n## Gradle 实践\n\n### 安装, 更新, 配置\nhttps://gradle.org/install/\n\n#### 安装\n根据版本按上面的教程走\n\n#### 配置\n将 bin 目录加入环境变量 PATH\n如果想可以在 IDLE 修改 [[#GradleUserHome]] 的默认路径\n\n#### 更新\n用 gradle wrapper task 更新, 指定版本号, 指定 bin 文件还是 complete\n```cmd\n$ ./gradlew wrapper --gradle-version=7.6 --distribution-type=bin\n```\n\n```cmd\n$ ./gradlew tasks\nDownloading https://services.gradle.org/distributions/gradle-7.6-bin.zip\n...\n```\n\n### 开始使用 gradle\n\n#### 创建 gradle 项目\nsrc: [Building Java Applications Sample|Gradle Doc](https://docs.gradle.org/current/samples/sample_building_java_applications.html)\n\n在根目录运行\n```cmd\ngradle init\n```\n然后按提示走\n\n\n#### 安装 gradle 插件 \n在 [plugins.gradle.org](https://plugins.gradle.org/) 上找到想要的插件, 将对应的语句复制到 `app/build.gradle` 中的 `plugins {}`\n\n\n### ./gradlew 命令\n\n**wrapper**\n在项目根目录运行 `gradlew wrapper` 会将项目和 gradle 版本绑定, 下载对应版本的 wrapper, 以保证任何人 build 时都能用创建时的版本\n\n**help**\n\n**compileJava**\n\n**--stop**\n停止正在运行的 daemon\n\n**build**\n\n### build.gradle\n![[Pasted image 20221218220250.png|600]]\n这里的 task 第二个参数是个闭包(可以理解为函数, 是名为 deligate 的机制)\n创建好的这个 helloworld, 可以用 `./gradlew helloworld` 调用","lastmodified":"2023-06-16T19:37:57.6773135+02:00","tags":["Java"]},"/permanent/HarmonyPatch":{"title":"HarmonyPatch","content":"\n[官方文档](https://harmony.pardeike.net/articles/patching.html)\n\n### Prefix\n- 主要用于跳过原函数, 修改传入值\n- prefix 中的参数还可以传递给 postfix\n\n使用时需要额外定义一个形参 `ref 原函数返回类型 __result` , 用来接受返回值. 而 prefix 函数 return 一个 布尔值(true 表示执行完 prefix 后继续执行原函数, false 表示跳过原函数)\n\n实例:\n\u003e F:\\\\VSProjects\\\\evixenon_taiwu_mods\\\\JieYiMatchmaker\\\\JieYiMatchmakerFrontend\n\n","lastmodified":"2023-06-16T19:35:09.1297659+02:00","tags":["C#","Modder","Unity"]},"/permanent/ICMP-%E5%8D%8F%E8%AE%AE":{"title":"ICMP 协议","content":"\nInternet Control Messege Protocol\n网络层(3/7)\n用于在IP主机和路由器间的传递控制消息，控制消息是指如某节点通不通的关于网络本身的消息。\n\n\n","lastmodified":"2023-06-16T19:35:50.5902541+02:00","tags":["协议","计网"]},"/permanent/IEEE-802.1X":{"title":"IEEE 802.1X","content":"\n- 局域网部分\n\n#### IEEE 802.1X 家族\n- 802.1Q Virtual Bridged LANs (VLAN)  \n- 802.3 CSMA/CD (Ethernet)  \n- 802.5 Token Ring  \n- 802.6 Metropolitan Area Network  \n- 802.11 Wireless LAN  \n- 802.15 Wireless PAN (Personal Area Network)  \n- 802.15.1 Bluetooth\n\n#### 协议中的角色\n- Supplicant\n- Authenticator: Supplicant 希望连接的设备\n- Authentication Server: 执行认证的设备 e.g.RADIUS-Server mit LDAP-Backend\n- Port-Access-Entity(PAE): Supplicant 所连接的端口\n    - uncontrolled port: 允许设备认证\n    - controlled port: 允许经过身份验证的设备与 LAN 通信\n\n#### 协议流程\n- 可能的流程： \n    1. Supplicant请求受控端口 \n    2. Authenticator请求认证 \n    3. 认证成功后，端口被激活\n- Supplicant 或 authenticator 可以发起认证\n- 802.1X 没有定义自己的安全协议，而是使用现有协议：\n    - 可扩展身份验证协议 (EAP) \\[RFC 3748] 用于设备身份验证\n    - EAP-TLS \\[RFC 5216] 例如协商会话密钥\n    - RADIUS 作为 AAA 协议 (Authentication, Autorization, Accounting)","lastmodified":"2023-06-16T19:36:17.3715669+02:00","tags":["计网","协议"]},"/permanent/IPv4":{"title":"IPv4","content":"\n#### IPv4 Header\n- ![[Pasted image 20230227131607.png|L|500]]","lastmodified":"2023-06-16T19:36:57.9386056+02:00","tags":["计网","协议"]},"/permanent/Internet-Service-ProviderISP":{"title":"Internet Service Provider(ISP)","content":"\n因特网服务供应商, 包括骨干网(国际因特网服务供应商) 和 供应商网络(国内或地域性因特网服务供应商)","lastmodified":"2023-06-16T19:36:45.8233589+02:00","tags":[]},"/permanent/JUnit":{"title":"JUnit","content":"\n#### IntelliJ 中的 Junit\n首先, 2017以上版本的 IntelliJ 是默认支持 JUnit 的, 且自带\n只要写一个带 `@Test` 的方法, 再写一个 `assert` 就会自动导入需要的包\n\n#### JUnit 命名风格\n测试类的命名是 `被测试的类名Test`\n测试方法的命名是 `test被测试方法名_描述` \n\n#### Test-Fixture\n对象和操作的集合, 代表一个测试类的测试案例的相同开始状态\n比如在测试开始前都会执行 @BeforeEach, 即是生成同样的对象进行同样的操作\n\n#### Test 类型\n- @Test\n- @BeforeEach\n- @AfterEach\n- @Before, setUp()\n- @After, tearDown()\n- @BeforeClass, static 方法\n","lastmodified":"2023-06-16T19:40:58.3485727+02:00","tags":["Java"]},"/permanent/JVM-Dalvik-Art":{"title":"JVM, Dalvik, Art","content":"\n- `JVM` Java 的虚拟机, 用来运行 Java 字节码\n- `Dalvik` 专为 Android 设计的 Java 虚拟机, 有专属的文件后缀 .dex\n- `Art` Android runtime, Dalvik 的升级版, 本质上与 Dalvik 无异\n","lastmodified":"2023-06-16T19:41:40.9807693+02:00","tags":["Java","逆向","安卓"]},"/permanent/Java":{"title":"Java","content":"\n#### Java 原理\n[[permanent/JVM, Dalvik, Art|JVM, Dalvik, Art]]\n\n[[permanent/Java 的工作方式|Java 的工作方式]]\n\n#### Java 语法\n[[permanent/Java 基础|Java 基础]]\n\n[[permanent/Java 库|Java 库]]\n\n[[permanent/Java 细节|Java 细节]]\n\n#### Java  Build Tool\n[[permanent/Gradle|Gradle]]\n\nMaven\n\nAnt\n\n#### Java Tools\nError Prone, Java 静态分析工具\n\nSpotbugs, Java 静态分析工具\n\n#### Java 规范\n[[permanent/Java checkstyle|Java checkstyle]]\n\n[[permanent/Java 代码传统|Java 代码传统]]\n\n[[permanent/Java Best-Practices|Java Best-Practices]]\n\n![[attachments/v2-01bb3902dd82f32a693dab17c4a9f6a0_720w_1641221028109_0.jpg]]","lastmodified":"2023-06-16T19:41:47.7193643+02:00","tags":["Java"]},"/permanent/Java-%E4%BB%A3%E7%A0%81%E4%BC%A0%E7%BB%9F":{"title":"Java 代码传统","content":"\nhttps://google.github.io/styleguide/javaguide.html\n\n### 命名\n\n### 括号, 缩进, 空格\n\n#### 空格\n括号外的关键字与括号之间应该留有空格, 如:\n```java\ntry {\n\tif (true) {\n\t\t// ...\n\t}\n} catch {\n\t// ...\n}\n```\n\n### Javadoc","lastmodified":"2023-06-16T19:38:31.8091137+02:00","tags":["Java"]},"/permanent/Java-%E5%9F%BA%E7%A1%80":{"title":"Java 基础","content":"\n## Java 入门须知\n\n##### 编译\n```cmd\njavac app.java\n```\n\n##### 注释\n```java\n// single line comment\n\n/* \n    multi-line comment\n*/\n\n/** \n*   doc comment \n*/\n```\n\n##### 大小写\n类名大小写不敏感(这是操作系统决定的)\njava 是 case-sensitive, 即方法, 包名等都大小写敏感\n\n##### Java类 入口函数\n```java\npublic static void main(String [] args);\n```\n\n##### Access Modifier\n| |within class|within package|outside package by subclass only|outside package|\n|---|---|---|---|---|\n|private|Y|N|N|N|\n|default|Y|Y|N|N|\n|protected|Y|Y|Y|N|\n|public|Y|Y|Y|Y|\n\n##### Java keyword\nabstract assert\nboolean\tbreak byte\ncase catch char class const continue\ndefault do double else enum extends \nfinal finally float for \ngoto\nif implements import instanceof int interface\nlong\nnative new \npackage private protected public\nreturn\nshort static strictfp super switch synchronized\nthis throw throws transient try\nvoid volatile\nwhile\n\n## 变量\n\n#### 变量\n变量其实是一块预留空间的名字, 变量的类型则指示了预留空间的大小以及解析方式\n\n#### 变量类型\n```java\nclass Guru99 {\n    static int a = 1; //static variable  \n    int data = 99; //instance variable  \n    void method() {\n        int b = 90; //local variable  \n    }\n}\n```\n\n##### 本地变量 Local Variable\n在`域`范围有效的变量, 如在方法中声明的变量只在方法中有效\n本地变量不能是 static 的\n\n##### 对象变量 Instance Variable\n没有用 `static` 关键字定义, 且不是在方法内部声明的变量. 是对象特有的\n\n##### 静态变量 Static Variable\n用 `static` 关键字定义, 在类被加载时初始化一次\n静态变量是该类的所有对象共享的\n\n#### Casting\n向上直接兼容\n向下会舍弃部分\n\n## 数据类型\n\n### 原始数据类型 Primitive Data Type\n\n| Data Type | Default Value | Default Size(Byte) | \n| --------- | ------------- | ------------------ |\n| byte      | 0             | 1                  |\n| short     | 0             | 2                  |\n| int       | 0             | 4                  |\n| long      | 0L            | 8                  |\n| float     | 0.0f          | 4                  |\n| double    | 0.0d          | 8                  |\n| boolean   | false         | 1 bit              |\n| char      | '\\\\u0000'     | 2                  |\n\n- 以上除了 `boolean`, 都属于Numeric\n- all nemeric data types are signed\n- standardized: 在所有平台上数据类型的大小是一致的\n- char 是 2 Bytes, 因为使用了 Unicode, 范围是 \\\\u0000 到 \\\\uffff\n\n\n### 非原始数据类型 Non-primitive Data Type\nstring\narray\netc\n\n## 流程控制\n\n### Condition\n\n#### if ... else if ... else\n```java\nif (con1) {\n\t// do somethin\n} else if (con2) {\n\t// do something\n} else {\n\t// do something\n}\n```\n\n#### switch\n```java\nswitch(expr) {\n\tcase val1:\n\t\t// do something\n\t\tbreak; \n\tcase val2:\n\t\t// do something\n\t\tbreak;\n\tdefault:\n\t\t// do something\n\t\tbreak;\n}\n```\n\n##### break 语句的作用\n如果没有 break 语句, 程序会继续执行下一条 case\nbreak 并不是必须的.\n\n### Loop\n\n#### for\n两种语法\n```java\n// 1\nfor(int i = 0; i \u003c= n; i++) {\n\t// do something\n}\n\n// 2 for each\nint arr[] = {1, 2, 3};\nfor(int i:arr) {\n\t// do something\n}\n```\n\n#### while\n```java\nwhile (condition) {\n\t// do something\n}\n```\n#### do ... while\n```java\ndo {\n\t// something \n} while ();\n```\n和 [[#while]] 的区别在于 do block 内的代码必定执行一次\n\n## Function\n好像没啥说的?\n\n## Exception Handling\n\n### Exception Hierarchy\n- Object\n\t- Throwable\n\t\t- Exception\n\t\t- Error\n\n### Exception\nExceptions are unwanted events that interupts the normal flow of program, but within control.\ne.g.\n- invalid user input\n- loss of network connection\n- unavailable file\n\n### Error\nErrors are irrecoverable conditions that the program cannot handle.\ne.g.\n- JVM out of memory\n- memory leaking\n- stack overflow\n- library incompatibility\n- infinite recursion\n\n### Types of Exceptions\n- User-Defined Exception\n- Built-in Exception\n\t- Checked Exception\n\t\t- ClassNotFoundException\n\t\t- InterruptedException\n\t\t- IOException\n\t\t- InstantiationException\n\t\t- SQLException\n\t\t- FileNotFoundException\n\t- Unchecked Exception\n\t\t- ArithmeticException\n\t\t- ClassCastException\n\t\t- NullPointerException\n\t\t- ArrayIndexOutOfBoundsException\n\t\t- ArrayStoreException\n\t\t- IllegalThreadStateException\n\n**Checked Exceptions**\n在编译时可以被编译器发现的\n\n**Unchecked Exceptions**\n只有在运行中才会被发现的\n\n### try ... catch ... finally\n```java\ntry {\n\tint a = 5;\n\tint b = 0;\n\tint c = a/b;\n} catch (ArithmeticException e) {\n\tSystem.out.println(e.getMessage());  // Out: by zero\n} finally {\n\t// do something\n}\n```\n### throw, throws\n`throws` 在方法的头部声明(可能出现的)异常, 以便将异常传递到方法外处理\n```java\nreturnType method_name(paramList) throws Exception 1,Exception2, ... { ... }\n```\n\n`throw` 直接手动抛出一个异常, 后接 Throwable 对象\n```java\nthrow new IllegalArgumentException(\"用户名长度必须大于 8 位！\");\n```\n\n使用的对比\n```java\npublic class Test {\n\tpublic void test_throws() throws IOException {\n\t\tFileInputStream fis = new FileInputStream(\"a.txt\");\n\t}\n\n\tpublic boolean test_throw(String username) {\n\t\tboolean res = false;\n\t\tif (username.length() \u003c 8) {\n\t\t\tthrow new IllegalArgumentException(\"用户名长度不足8位.\")\n\t\t} else {\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// throws\n\t\ttry {\n\t\t\ttest_throws();\n\t\t} catch (IOException e) {\n\t\t\tSystem.out.println(e);  //\n\t\t}\n\n\t\t// throw\n\t\tScanner scanner = new Scanner(System.in);\n\t\tSystem.out.println(\"请输入用户名：\");\n\t\tString username = input.next();\n\t\ttry {\n\t\t\tboolean con = test_throw(username);\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tSystem.out.println(e);  // Out: java.lang.IllegalArgumentException: 用户名长度不足8位.\n\t\t}\n\t}\n}\n```\n\n### 重写方法时异常声明的限制\n如果父类方法声明了异常, 那么子类方法重写时只能声明该异常本身或其子类.\n\n## Package\n### Java Package 的作用\n- 数据封装: 包相当于把一些类封装(encapsulate)到一起\n- 建立命名空间\n- access controll\n\n### 包\n包名和文件路径相关, 比如说 包`college.staff.cse` 在 /college/staff/cse, 将一个 .java 文件放在目录下, 并在开头使用 `package`关键字, 就会划入包\n\n命名大约就是 单位.领域.子领域, 如 college.tech.cse, college.art.history\n\n如果有同名类, 需要用全称(带包名的类名)\n\n### import\n```java\nimport java.util.vector;\nimport java.util.*; // 引入所有类, 但子包的不会\n```\n\n### import static\nJava 5+\n通过 `import static` 语法引入的类, 其字段和方法会在引入时被隐性 static 声明\n```java\n// Note static keyword after import.\nimport static java.lang.System.*;\nclass StaticImportDemo\n{\n   public static void main(String args[])\n   {      \n        // We don't need to use 'System.out' \n        // as imported using static.\n        out.println(\"GeeksforGeeks\");\n   }\n\n}\n```\n\n### 重名冲突\n如果有两个 \\*引入 引发了重名冲突, 如\n```java\n// 两者都包含 Date 类\nimport java.util.*;\nimport java.sql.*;\n```\n则用非\\*的引入其中一个重名(Date)\n\n### CLASSPATH\n可以在使用每些shell的时候使用**临时** CLASSPATH\n```text\n\u003e SET CLASSPATH=.;c:\\javaproject\\classes;d:\\tomcat\\lib\\servlet-api.jar\n```\nor\n```text\n\u003e java –classpath c:\\javaproject\\classes com.abc.project1.subproject2.MyClass3\n```\n\n如果希望**永久**引入, 也就是说在以后也能 import 一个 .jar 包或者 .class 文件, copy the jar file in the jre/lib/ext\n\n### Java 项目包管理示例\n![[Pasted image 20221226155535.png|260]]\n```java\nimport package_one.ClassTwo;\nimport package_name.ClassOne;\npublic class Testing {\n    public static void main(String[] args){\n        ClassTwo a = new ClassTwo();\n        ClassOne b = new ClassOne();\n        a.methodClassTwo();\n        b.methodClassOne();\n    }\n}\n```\n\n\n## Java OOP\n\n### Class\n类就是类啊, 类名应和文件名同名, 后缀 .java 是源文件, .class 是类文件也就是编译后的文件.\n一个类可以有:\n- 成员变量\n- 方法\n- constructor\n- 子类\n\n#### constructor\n与类同名的方法, 可以多个, 可以省略不写, 不能用 static/final 修饰\n构造器省略, 则 JVM 会自动创建一个无参的构造函数\n\n### Interfaces\n\n#### 创建 interface\n```java\n// A simple interface\ninterface In1 {\n    // public, static and final  // 实现了此接口的类可以直接使用a\n\tfinal int a = 10;\n    // public and abstract\n    void display();\n}\n```\n\n#### implements\n必须实现\n```java\nclass TestClas implements In1{\n\tvoid display() { ... }\n\t// some codes\n}\n```\n\n### Object\nObject, 有 State, 有 Behavior, 有 Identity\n在 Java 中, 所有类都是 Object 的子类\n\n### Inheritance\n在 Java 中, 一个类不能继承多个类(类似的功能只能通过接口实现)\n建议在 `is-a` 关系时才使用继承\n\n#### extends\n```java\nclass subclass extends baseclass {\n\t// ...\n}\n```\n\n#### override 重写\n子类可以重写父类的方法.\n如果子类调用一个方法, 会先检查子类是否有该方法或重写了该方法, 然后检查父类中时候实现了该方法.\n\n想要重写方法, 在子类被重写的方法前添加 `@Override` 关键字\n\n### Polymorphism\n\n#### Runtime polymorphism/Dynamic Method Dispatch\n指调用方法时的[[permanent/多态|多态]], 也就是在运行时, 才根据变量的内容决定调用哪个函数\nRule: Runtime polymorphism can't be achieved by data members.\n\n**Upcasting**\n```java\nAnimal a = new Dog();\n```\n\n### Abstraction\n\n#### Abstraction in OOP\n\n##### Data Abstraction\n使用复杂的数据结构通常会隐藏其内部细节\n\n##### Control Abstraction\n控制抽象收集了作为应用程序一部分的所有控制语句，并将它们作为一个单元公开。当我们必须使用这个控制单元执行一个工作功能时，就会用到这个功能。 控制抽象构成了结构化编程的主要单元，使用控制抽象我们可以在复杂的框架中定义简单的功能。\n\n#### Java Abstraction Class\nJava 抽象类类似于父类和接口的结合\n抽象方法**不能**有 `abstract` 以外的限定修饰词, 如 `abstract static`\n抽象类**可以 implements 接口且不实现接口**\n\n```Java\n//abstract class\nabstract class Car{ \n    abstract void accelerate(); \n} \n//concrete class\nclass Suzuki extends Car{ \n    void accelerate(){\n        System.out.println(`\"Suzuki::accelerate\"`);\n    }\n}\nclass Main{\n    public static void main(String args[]){ \n        Car obj = new Suzuki();    //Car object =\u003econtents of Suzuki\n        obj.accelerate();          //call the method \n    }  \n}\n```\n\n### Encapsulation\n\n#### Java Encapsulation\n指的是把数据(字段和方法)封装在一个单独的类里, 外部类不能随意修改\n涉及到 private, get/set 方法\n\n## File, I/O\n\u003e src: [Java's File API](https://www.marcobehler.com/guides/java-files#_writing_reading_files)\n\nJava 有两个 File API,\njava.io.File(Java 1.0+)\njava.nio.file.Path, java.nio.file.Files(Java 1.7+ 以下使用的版本)\n\n#### 获取文件路径\n\n```Java\n// Java \u003c 11\nPath path = Paths.get(\"c:/dev/readme.txt\");\n```\n\n```Java\n// Java 11+\nPath path = Path.of(\"c:/dev/readme.txt\");\npath = Path.of(\"c:\", \"dev\", \"readme.txt\");\npath = Path.of(\"c:\", \"dev\").resolve(\"readme.txt\");\npath = Path.of(new URI(\"file:///c:/dev/readme.txt\");\n```\n\n#### 检查文件是否存在\n```Java\nboolean file_exists = Files.exists(path);\n```\n\n#### 文件属性\n```Java\nFileTime lastModifiedTime = Files.getLastModifiedTime(path);\nUserPrincipal owner = Files.getOwner(path);\n```\n\n#### 创建文件或文件夹\n\n**临时**, 但他们不会自己删除, 要记得手动删除\n```Java\n// 在Temp文件夹创建带固定前缀的临时文件\nPath tempFile1 = Files.createTempFile(\"prefixOrNull\", \".txt\"); \n\n// 在指定路径创建临时文件\nPath tempFile2 = Files.createTempFile(path.getParent(), \"prefix\", \".jpg\"); \n\n// 在Temp文件夹创建临时目录\nPath tempDir = Files.createTempDirectory(\"prefix\");\n```\n\n一般\n```Java\nPath newDir = Files.createDirectory(path.getParent().resolve(\"newDir\"));\nPath tempFile1 = Files.createFile(newDir.resolve(\"newFile.txt\")); \n```\n\n#### 查看 Posix 权限(Unix)\n```Java\nPath path = Path.of(\"c:\\\\dev\\\\licenses\\\\windows\\\\readme.txt\");\ntry {\n    Set\u003cPosixFilePermission\u003e permissions = Files.getPosixFilePermissions(path);\n    System.out.println(\"permissions = \" + permissions);\n} catch (UnsupportedOperationException e) {\n    System.err.println(\"Looks like you're not running on a posix file system\");\n}\n```\n\n#### 文件写入\n\n##### 写入字符串\n```Java\nPath utf8File = Files.createTempFile(\"utf8\", \".txt\");\nFiles.writeString(utf8File, \"A String üü\");\n\nPath iso88591 = File.createTempFile(\"iso88591\", \".txt\");\nFiles.writeString(iso88591, \"A String üü\", StandardCharsets.ISO_8859_1);\n```\n\n##### 写入字节\n```Java\nFiles.write(anotherIso88591File, \"this is my string ää öö üü\".getBytes(StandardCharsets.ISO_8859_1));\n```\n\n##### 写入时的选项\n```Java\nFiles.write(filename, \"string\".getBytes(), StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE);\n```\n默认是不存在则创建, 存在则在截断(truncated)\n[其他选项](https://docs.oracle.com/javase/7/docs/api/java/nio/file/StandardOpenOption.html)\n\n##### Writer 和 OutputStream\n```Java\ntry (BufferedWriter bufferedWriter = Files.newBufferedWriter(utfFile)) {\n    // handle reader\n}\n\ntry (OutputStream os = Files.newOutputStream(utfFile)) {\n    // handle outputstream\n}\n```\n\n\n#### 文件读取\n\n##### 读取字符串\n```Java\nString s = Files.readString(utfFile); // utf8\ns = Files.readString(utfFile, StandardCharsets.ISO_8859_1);\n```\n##### 读取字节\n```Java\nString s = new String(Files.readAllBytes(utfFile), StandardCharsets.UTF_8);\n```\n\n##### Reader and InputStream\n```Java\ntry (BufferedReader bufferedReader = Files.newBufferedReader(utfFile)) {\n\t// handle reader\n}\ntry (InputStream is = Files.newInputStream(utfFiles)) {\n\t// handle inputstream\n}\n```\n\n#### 移动, 删除,  list 文件\n```Java\n// 移动 test.jpg → c:\\temp\\test.jpg\nFiles.move(filepath, Path.of(target_path_string).resolve(filepath.getFileName().toString())[,options]); \n// StandardCopyOption.REPLACE_EXISTING\n// catch (FileAlreadyExistsException e)\n  \n// 删除 空dir\n// 删除 非空文件夹, 思路是用 Files.walk(dir) 遍历\ntry {\n\tFiles.delete(path);\n} catch (DirectoryNotEmptyException e) {\n\te.printStackTrace();\n}\n\n// list files\n// 同级同目录下\ntry (var files = Files.list(temDir)) {\n\tfiles.forEach(System.out::println);\n}\n// 指定文件类型\ntry (var files = Files.newDirectoryStream(tmpDir, \".txt\")) {\n\tfiles.forEach(System.out::println);\n}\n// -r\ntry (var files = Files.walk(tmpDir)) {\n\tfiles.forEach(System.out::println);\n}\n","lastmodified":"2023-06-14T23:53:13.2288455+02:00","tags":["Java"]},"/permanent/Java-%E5%BA%93":{"title":"Java 库","content":"\n[[permanent/Mockito|Mockito]]\n\n[[permanent/JUnit|JUnit]]\n\n\n","lastmodified":"2023-06-16T19:52:28.3499318+02:00","tags":["Java"]},"/permanent/Java-%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%96%B9%E5%BC%8F":{"title":"Java 的工作方式","content":"\nJava 的工作方式\n- 源代码-\u003e编译器-\u003e输出-\u003eJVM\n- .java -\u003e 编译器 -\u003e .class\n- 编译器产出字节码, JVM可以读取与执行字节码.","lastmodified":"2023-06-16T19:39:01.4251397+02:00","tags":["Java"]},"/permanent/Java-%E7%BB%86%E8%8A%82":{"title":"Java 细节","content":"\n##### List\u003c\u003e 和 []\n`String[]` 是数组，定长，不可变  \n`List\u003cString\u003e` 是泛型 ，非定长，可变\n\n##### 极限值\nInteger.MAX_VALUE = 2147483647\nDouble.NEGATIVE_INFINITIVy\nDouble.NaN\n\n##### 剩余参数\n```java\n  private void check(double a, double b, double c, double... expectedResult) {\n    List\u003cDouble\u003e zeros = solver.getZeros(a, b, c);\n    double[] arr = zeros == null ? null : zeros.stream().mapToDouble(d -\u003e d).toArray();\n    assertArrayEquals(arr, expectedResult, DELTA);\n  }\n```\n\n","lastmodified":"2023-06-16T19:39:32.5035009+02:00","tags":["Java"]},"/permanent/Java-Best-Practices":{"title":"Java Best-Practices","content":"\n##### default in switch branch\neach `switch` statement needs a `default`","lastmodified":"2023-06-16T19:39:50.689059+02:00","tags":["Java"]},"/permanent/Java-checkstyle":{"title":"Java checkstyle","content":"\n一种检查 Java 源代码风格的方法, 通常应该检查:\n- 命名规范\n- 类设计(e.g. 耦合和内聚)\n- [[permanent/Java Best-Practices|Java Best-Practices]]\n- division by 0\n- 未使用的变量/包\n- 每个方法有且只有一个任务吗\n\n### google_checks\n`google_checks.xml` 似乎只能检查代码, 注释和文档中不恰当的空格\n\n\u003e java -jar ./checkstyle-9.1-all.jar [path of .java file to check] -c ./google_checks.xml\n\n![[checkstyle-9.1-all.jar]]\n\n![[google_checks.xml]]","lastmodified":"2023-06-16T19:40:09.7477667+02:00","tags":["Java"]},"/permanent/Jupyter-Notebook":{"title":"Jupyter Notebook","content":"\n## WIN 安装\n已安装 python\n\n先更新 pip\n\u003e python -m pip install --upgrade pip\n\n安装\n```cmd\npip install jupyterlab\npip install notebook\npip install voila\n```\n\n## 快捷键\n在 notebook 中点击键盘图标查看\n有点像 vim 和 原生快捷键的混合体\n","lastmodified":"2023-06-16T19:41:15.5166006+02:00","tags":["Python"]},"/permanent/KDD":{"title":"KDD","content":"\n#### Knowledge Discovery in Databases\n- 是指从数据库的大量数据中发现有用知识的技术\n- 一种[[permanent/Data Mining|数据挖掘]]技术\n- 主要过程:\n    - 数据准备和选择\n    - 数据清洗\n    - 纳入数据集的先验知识\n    - 转译为精确结果\n","lastmodified":"2023-06-16T19:42:18.6205959+02:00","tags":["ML","大数据"]},"/permanent/Kali-Linux-%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1":{"title":"Kali Linux 常用服务","content":"\n1. HTTP (Web, Apache2)\n用来建立本地服务器的\n`service apache2 start/stop` 启/停\n`systemctl status apache2.service` 查看状态\n现在版本的 kali 似乎不会给 info\n`update-rd.d apache2 defaults` 将服务加入开机自启动列表\n\n2. MySQL\nmysql\n启动后如果要测试是否正常, 可以登录一下\n`mysql –u root -p`\n\n3. SSH\nssh","lastmodified":"2023-06-15T14:10:27.2725901+02:00","tags":["Kali"]},"/permanent/Kali-Linux-%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0":{"title":"Kali Linux 系统更新","content":"\n`apt-get update` 获取更新列表\n`apt-get upgrade` 升级更新列表中的内容\n`apt-get dist-upgrade` 升级整个linux系统\n","lastmodified":"2023-06-15T14:10:35.9947118+02:00","tags":["Kali"]},"/permanent/Kali-Linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE":{"title":"Kali Linux 网络设置","content":"\n《Kali Linux 渗透测试的艺术》1.5.2\n\n1. 有线网络\n连接模式为桥接(需要在虚拟机关机时设置)\n可以固定分配的ip\n\n2. 无线网络\n需要物理无线网卡, 很多年前大家都说TP-Link wn770n\nvm: 在开启虚拟机时将usb网卡转移给虚拟机","lastmodified":"2023-06-15T14:10:44.6655637+02:00","tags":["Kali"]},"/permanent/Kerberos":{"title":"Kerberos","content":"\nsrc: [Kerberos - 知乎](https://zhuanlan.zhihu.com/p/266491528), lmu - IT Security\n\n#### Kerberos\n- 以 Needham-Schroeder 为基础的可信第三方协议\n- TTP: 由 Kerberos 服务器 和 票据授权服务器组成\n- 为 TCP/IP 网络设计\n- 使用对称加密\n- 发生在一个 Kerberos 域中\n- 缺点: 单点故障: 需要服务器保持可用; 需要时间同步\n- RFC 4120\n\n#### 名词解释\n- Principal：大致可以认为是 Kerberos 世界的用户名，用于标识身份\n- AS（Authentication Server）= 认证服务器\n- KDC（Key Distribution Center）= 密钥分发中心\n- TGT（Ticket Granting Ticket）= 票据授权票据，票据的票据\n- TGS（Ticket Granting Server）= 票据授权服务器\n- SS（Service Server）= 特定服务提供端\n\n![[Pasted image 20230224115802.png|inline|440]]![[Pasted image 20230224120159.png|inline|180]]\nK\\[]: 用 K 加密的什么数据\n\n1. Client 向 AS(图上的KS) 请求服务, AS 检查用户是否在列表\n    1. Client, Time, Adresse, Server (明文), 用户不发送密钥,而是 AS 在自己的数据库中查\n2. AS 发回 TGS\n    1. 返回两条消息 $K_c[K_{c,tgs}], K_{tgs}[T_{c,tgs}]$\n    2. 其中 $T_{c,tgs} = tgs, c, a, t, v, K_{c, tgs}$\n    3. ![[Pasted image 20230224151114.png|L|500]]\n3. 请求 Server Ticket\n    1. s(要通信的server 地址), $K_{c, tgs}[A_{c,tgs}]$, $K_{tgs}[T_{c,tgs}]$\n    2. $A_{c,tgs} = c, a,t$ (Authenticator)\n4. TGS 返回 Server Ticket\n    1. $K_{c,tgs}[K_{c,s}], K_s[T_{c,s}]$\n    2. $T_{c,s} = s, c, a, t, v, K_{c,s}$\n    3. ![[Pasted image 20230224151820.png|L|500]]\n5. 请求服务\n    1. $K_{c,s}[A_{c,s}], K_s[T_{c,s}]$\n    2. $A_{c,s} = c,a,t,key,seqNo$\n    3. $T_{c,s} = s,c,a,t,v,K_{c,s}$\n6. Server Authentication\n    1. $K_{c,s}[t,key,seqNo]$\n    2. ![[Pasted image 20230224151907.png|L|400]]\n\n跨域 Kerberos 思路\n![[Pasted image 20230224123236.png||L|400]]\n\n","lastmodified":"2023-06-16T19:42:55.9426424+02:00","tags":["协议","网安"]},"/permanent/LLM":{"title":"LLM","content":"\n- large language model\n- 目的: 让机器学习到最符合人类说话逻辑的表达\n- 方法: likelihood + 大力出奇迹\n- 什么叫大: 训练参数超过10亿我们通常就叫大模型\n\n底层基础设施 -\u003e 框架 -\u003e 大模型 (Prompt engineering) -\u003e 应用","lastmodified":"2023-06-16T19:44:03.4840184+02:00","tags":["AI","ML"]},"/permanent/LOIC":{"title":"LOIC","content":"\nLow Orbit Ion Cannon\n- 开源 网络压力测试应用\n- TCP/UDP 泛洪攻击","lastmodified":"2023-06-16T19:48:56.8925153+02:00","tags":["网安"]},"/permanent/LaTeX":{"title":"LaTeX","content":"\n![[symbols_1638700519189_0 1.pdf]]\n\nunderset $A \\oplus B = \\underset{b\\in B}{\\cup} A_b$\n$\\neg \\wedge \\vee \\ \\forall \\ \\exists$\n$\\bowtie$\n$\\mathrm{d}$x $\\newcommand*{\\dif}{\\mathop{}\\!\\mathrm{d}}$x\n\n![[Pasted image 20221219145348.png]]\n\n","lastmodified":"2023-06-16T19:43:46.2791005+02:00","tags":["说明书"]},"/permanent/Linear-Algebra-Concepts-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E6%A6%82%E5%BF%B5":{"title":"Linear Algebra Concepts 线性代数概念","content":"\n#### Algebra 代数\n包含操作数和操作的集合\nde. Operanden, Operator\n\n#### Closure 闭包\nde. Abgeschlossenheit\n对某个集合中的数进行某种运算, 生成的结果仍在此集合中, 则称该集合在该运算下闭合","lastmodified":"2023-06-14T23:52:22.8878964+02:00","tags":["数学","线代"]},"/permanent/LoRA-%E6%A8%A1%E5%9E%8B":{"title":"LoRA 模型","content":"\n- 在 Stable Diffusion 中常见的模型类型\n- LoRA是一种用于大语言模型的低秩逼近（Low-Rank Approximation）技术，可以减少参数量和计算量，提高训练效率和生成质量。推荐的模型;koreanDollLikeness_v10。","lastmodified":"2023-06-16T19:49:35.2364406+02:00","tags":["模型","AI"]},"/permanent/MITRE-ATTCK":{"title":"MITRE ATT\u0026CK","content":"\n#### MITRE ATT\u0026CK\nMITRE ATT\u0026CK is a **knowledge base** of \n- adversary tactics \n- techniques \n- common knowledge\n\n3 Metrics\n- Enterprise\n- Mobile\n- pre-ATT\u0026CK\n\n用于...\n- 识别已知的攻击模式\n- 关于缓解措施(Mitigation), 可能的参与者的提示\n- 发现差距\n- 作为 SIEM 的输入用例\n- Kommunikationshilfe (Pentest-Vorbereitung, Incident-Kollaboration, ...) 事件\n","lastmodified":"2023-06-16T19:51:44.0171201+02:00","tags":["网安"]},"/permanent/Mathematical-English":{"title":"Mathematical English","content":"\n目录\n- Arithmatic 2\n    - Integers 2\n    - Fractions(=Rational Numbebr) 2\n    - Real Numbers 3\n    - Complex Numbers 3\n    - Basic arithmetic operations 3\n    - Exponentiation, Roots 3\n    - Divisibility 3\n    - Division with remainder 4\n    - Euclid's algorithm 4\n- Algebra 6\n    - Algebraic Expressions 6\n    - Indices 6\n    - Matrices 7\n    - Inequalities 7\n    - Polynomial equations 7\n    - Congruences 9\n- Geometry 10\n    - Euler's Formula 12\n- Linear Algebra 14\n- Mathematical arguments 15\n    - Set theory 15\n    - Logic 16\n    - Basic arguments 16\n- Functions 19\n    - Formulas/Formulae 19\n    - Intervals 19\n    - Derivatives 19\n    - Integrals 20\n    - Differential equations 21\n- Greek 23\n- Sequences, Series 24\n    - Convergence criteria 24\n- Prime Numbers 27\n    - Questions About Prime Numbers 27\n- Probability and Randomness 29\n\n![[attachments/en.pdf]]","lastmodified":"2023-06-16T19:50:04.0047364+02:00","tags":["说明书"]},"/permanent/Mirai-Botnet":{"title":"Mirai Botnet","content":"\n物联网僵尸网络\n\n物联网设备通常有足够的带宽，但没有足够的防护措施\n物联网设备搜索: [shodan.io](https://www.shodan.io/)\n\n应对措施\n- 用 IDS 过滤 Mirai 代码\n- 修补漏洞\n\n\n","lastmodified":"2023-06-16T19:50:14.7986014+02:00","tags":["网安"]},"/permanent/Mock":{"title":"Mock","content":"\n开发中的软件还不能够使用时, 创建出的能够测试的最小软件.\n例如说你开发的类需要依赖别人的类, 但别人还没完成工作\n\n#### 如何开始测试\n从完全不依赖于其他模块的模块开始, 到需要依赖所有模块的模块结束\n\n#### 工具\n因为手动创建 Mock 可能因为人为的失误导致不正确的结果, 因此借助工具可能是更好的选择\n\n#### Java Mock\n- Mockito\n- JMock\n- EasyMock","lastmodified":"2023-06-16T19:52:06.5960606+02:00","tags":["测试","开发"]},"/permanent/Mockito":{"title":"Mockito","content":"\n\n### Get started\n```java\n//You can mock concrete classes, not just interfaces \nLinkedList mockedList = mock(LinkedList.class); \n\n//stubbing \nwhen(mockedList.get(0)).thenReturn(\"first\"); \nwhen(mockedList.get(1)).thenThrow(new RuntimeException()); \n\n//following prints \"first\" \nSystem.out.println(mockedList.get(0)); \n//following throws runtime exception \nSystem.out.println(mockedList.get(1)); \n//following prints \"null\" because get(999) was not stubbed \nSystem.out.println(mockedList.get(999)); \n\n//Although it is possible to verify a stubbed invocation, usually **it's just redundant** \n//If your code cares what get(0) returns, then something else breaks (often even before verify() gets executed). \n//If your code doesn't care what get(0) returns, then it should not be stubbed. \nverify(mockedList).get(0);\n```\n\n\n#### 匹配参数\n```java\n//stubbing using built-in anyInt() argument matcher \nwhen(mockedList.get(anyInt())).thenReturn(\"element\"); \n//stubbing using custom matcher (let's say isValid() returns your own matcher implementation): \nwhen(mockedList.contains(argThat(isValid()))).thenReturn(true); \n//following prints \"element\" \nSystem.out.println(mockedList.get(999));\n//**argument matchers can also be written as Java 8 Lambdas** \nverify(mockedList).add(argThat(someString -\u003e someString.length() \u003e 5));\n```\n\n#### 匹配调用次数\n```java\nmockedList.add(\"once\");\nmockedList.add(\"twice\"); \nmockedList.add(\"twice\"); \nmockedList.add(\"three times\"); \nmockedList.add(\"three times\"); \nmockedList.add(\"three times\");\n\n//exact number of invocations verification \nverify(mockedList, times(2)).add(\"twice\"); \nverify(mockedList, times(3)).add(\"three times\");\nverify(mockedList, atMostOnce()).add(\"once\");\n// atLeast(2)\n// ...\n```","lastmodified":"2023-06-16T19:52:27.8532791+02:00","tags":["Java"]},"/permanent/MySQL":{"title":"MySQL","content":"\n使用 [[permanent/SQL|SQL]] 语言\n\n## 安装和初配置\n[官网下载链接](https://dev.mysql.com/downloads/mysql/)\n[MySQL安装 | 菜鸟教程](https://www.runoob.com/mysql/mysql-install.html)\n\n\n#### ZIP 包解压的安装方式\n1. 在[官网](https://dev.mysql.com/downloads/mysql/)下载对应版本的 ZIP 包, 解压到想放的位置\n2. 在根目录创建 `my.ini`, 内容如下:\n   ```ini\n    ### my.ini\n    \n    [client]\n\t# 设置mysql客户端默认字符集\n\tdefault-character-set=utf8\n\t \n\t[mysqld]\n\t# 设置3306端口\n\tport = 3306\n\t# 设置mysql的安装目录\n\tbasedir=[安装根目录]\n\t# 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错\n\t# datadir=C:\\\\web\\\\sqldata\n\t# 允许最大连接数\n\tmax_connections=20\n\t# 服务端使用的字符集默认为8比特编码的latin1字符集\n\tcharacter-set-server=UTF8MB4\n\t# 创建新表时将使用的默认存储引擎\n\tdefault-storage-engine=INNODB\n\t````\n3. 将 bin 文件夹添加到环境变量\n4. 初始化数据库, 在 cmd 输入一下, 初始化完成后记下显示的初始密码\n\u003e mysqld --initialize --console\n5. 安装(需权限)\n\u003e mysqld install\n6. 启动 `mysql` 服务\n\u003e net start mysql\n7. 登录 sql\n\u003e mysql -h 主机名 -u 用户名 -p\n8. 更改默认密码\n\u003e ALTER USER USER() IDENTIFIED BY 'new_password';\n\n## 元数据查询\n```sql\n/* 查询所有库 */\nSHOW DATABASES;\n/* 查询所有表 */\nSELECT * FROM information_schema.tables where table_schema=库名;\n/* 查询所有列 */\nSELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name=表名 [and table_schema=库名];\n```\n\n## 数据库操作\n\n#### 创建数据库\n```mysql\nCREATE DATABASE database_name;\n```\n\n#### 指定使用的数据库\n```mysql\nUSE database_name;\n```\n\n#### 导入数据库\n报错, 不如直接复制吧\n","lastmodified":"2023-06-16T20:05:50.1121088+02:00","tags":["数据库"]},"/permanent/NLTK":{"title":"NLTK","content":"\nhttps://www.nltk.org/book/ \n## Introduction\nnatural language toolkit, python 库\n\n##### help\n```python\nnltk.help.upenn_tagset('DT')\nnltk.help.brown_tagset('DT')\n```\n\n- [ ] 大类:预处理\n- [ ] 根据两个任务拆分 syntax analyse\n- [ ]  parser 的简要说明\n\n## Syntax Analyse with formal Grammar\n根据输入的语法规则, 分析给定句子的结构\n\nsyntax analyse 的任务主要是两种\n- Strukturkennung 结构识别: 句子是否符合语法/是否有一种符合规则的推导\n- Strukturzuweisung 结构分配: 重现找到的语法推导\n\n### Grammar types in NLTK\n[[project/lmu - Syntax of natural language(Germany)#Grammatikformalismus]]\n\n\n\u003e sent = ['I', 'shot', 'an', 'elephant', 'in', 'my', 'pajamas']\n```python\nsent = \"I shot an elephant in my pajamas.\".split()\n```\n\n### 用 CFG 生成句子\n- nltk.CFG.fromstring\n- nltk.ChartParser/nltk.RecursiveDescentParser\n```python\n# 语法输入\ngrammar = nltk.CFG.fromstring(\"\"\"\n    S -\u003e NP VP\n    PP -\u003e P NP\n    NP -\u003e Det N | Det N PP | Pron\n    VP -\u003e V NP | VP PP\n    \n    Pron -\u003e 'I'\n    Det -\u003e 'an' | 'my'\n    N -\u003e 'elephant' | 'pajamas'\n    V -\u003e 'shot'\n    P -\u003e 'in'\n    \"\"\")\n# 根据语法创建解析器\nparser = nltk.ChartParser(grammar) # ops: trace=3\n# 可视化结果\nfor tree in parser.parse(sent):\n\ttree.pretty_print(unicodelines=False)\n```\n\n![[attachments/Pasted image 20221028150112.png|L|350]]\n\n\nPCFG\n- nltk.PCFG.fromstring\n- nltk.ViterbiParser\n\nFCFG\n- 基于 RegExp\n- grammar = string\n- nltk.grammar.FeatureGrammar.fromstring\n- nltk.parse.FeatureChartParser\n\n详参 `01-vorlesung.ipynb`\n\n#### 给定语法规则生成不同句子\n```python\ngrammar = nltk.CFG.fromstring(\"\"\"\n    S -\u003e NP VP\n    VP -\u003e 'V' | 'V' NP | 'V' NP NP\n    NP -\u003e 'DET' 'N' | 'N'\n\"\"\")\n\nfrom nltk.parse.generate import generate\n# depth=3: 使用三次规则\nfor sentence in generate(grammar, depth=3):\n    print(' '.join(sentence))\n# out:\n# DET N V\n# N V\n\n# 有多少种?\nprint(len(list(generate(grammar, depth=3)))\n# out:\n# 2\n```\n\n#### grammar.productions()\n```python\ngrammar = nltk.CFG.fromstring(\"\"\"\n    S -\u003e NP VP\n    VP -\u003e 'V' | 'V' NP | 'V' NP NP\n    NP -\u003e 'DET' 'N' | 'N'\n\"\"\")\n\n# 会把规则一条一条打印出来\nfor p in grammar.productions():\n    print(p)\n```\nout:\n```text\nS -\u003e NP VP\nVP -\u003e 'V'\nVP -\u003e 'V' NP\nVP -\u003e 'V' NP NP\nNP -\u003e 'DET' 'N'\nNP -\u003e 'N'\n```\n\n### 用 Dependcy Grammar 生成句子\n- nltk.DependencyGrammar.fromstring\n- nltk.ProjectiveDependencyParser\n\n```python\n#Dependency Grammar (unlabeled):\ngrammar = nltk.DependencyGrammar.fromstring(\"\"\"\n    'shot' -\u003e 'I' | 'elephant' | 'in'\n    'elephant' -\u003e 'an' | 'in'\n    'in' -\u003e 'pajamas'\n    'pajamas' -\u003e 'my'\n    \"\"\")\nparser = nltk.ProjectiveDependencyParser(grammar)\nfor tree in parser.parse(sent):\n    tree.pretty_print()\n```\n\n![[attachments/Pasted image 20221028150949.png|L|300]]\n\n### 用 Chunk Parser 生成句子\n- regexp\n- nltk.RegexpParser(grammar)\n\n```python\n# partielle, flache RegExp-Grammatik:\ngrammar = r\"\"\"\n    NP: {\u003cDET\u003e?\u003cADJ\u003e*\u003cN\u003e} \n        {\u003cPRON\u003e}  \n    PP: {\u003cP\u003e}\n\"\"\"\n\nsent = [(\"I\", \"PRON\"), (\"shot\", \"V\"), (\"an\", \"DET\"), (\"elephant\", \"N\"), \n        (\"in\", \"P\"), (\"my\", \"DET\"), (\"pajamas\", \"N\")]\nparser = nltk.RegexpParser(grammar)\ntree = parser.parse(sent)\ntree.pretty_print()\n```\n![[attachments/Pasted image 20221028151427.png|L|400]]\n\n#### Constituent Tests\n\n##### 用 CFG 进行删除测试 \n[[project/lmu - Syntax of natural language(Germany)#Eliminierungstest]]\n1. 给定原句的 syntaktische 和 lexicalische 规则\n2. 确保原句可以按 [[#用 CFG 生成句子]] 这里这样生成树.\n3. 输入的句子用删除后的句\n详参 `vorlesung-notebook/04-vorlesung.ipynb`\n\n### 用 Feature-based语法生成句子\n- [[#创建 FeatStruct]]\n- nltk.grammar.FeatureGrammar.fromstring()\n- nltk.parse.FeatureChartParser()\n```python\n# tracing = 0/2\ngrammar = nltk.grammar.FeatureGrammar.fromstring(gramstring)\nparser = nltk.parse.FeatureChartParser(grammar,trace=tracing)\n\n\n## POS Tagging\n\n#### 使用指定 tagset 标记指定 text\n```python\nimport nltk\n\ntext = \"We want to tag the words in this text example.\"\n\ntokens = nltk.word_tokenize(text)\n\ntags1 = nltk.pos_tag(tokens) # Penn?\ntags2 = nltk.pos_tag(tokens, tagset=\"universal\")\n\nprint(tags1)\nprint(tags2)\n```\n```text\nout: \n[('We', 'PRP'), ('want', 'VBP'), ...]\n[('We', 'PRON'), ('want', 'VERB'), ...]\n```\n\n## Distribution Analyse\n常用来确认词的类别\n\n```python\n# 加载 Text\nfrom nltk.corpus import brown\ntext = nltk.Text(word.lower() for word in nltk.corpus.brown.words())\n```\n\n#### similar()\n```python\n# text.similar(w) 找出与 w 上下文相同的词\ntext.similar('woman')\n```\n\n#### 读取 corpus 中自带的 tag\n```python\nfrom nltk.corpus import brown\nbrown_tagged = brown.tagged_words(categories='news', tagset='universal')\n```\n\n## 句子结构分析\n\n### Dependency Graph\n```python\nsent = \"\"\"John N 2\nloves V 0\nMary N 2\n\"\"\"\n\ndg = DependencyGraph(sent)\ntree = dg.tree()\n\nprint(tree)\ntree.pretty_print(unicodelines=False)\n```\n![[attachments/Pasted image 20230204141454.png|L|200]]\n\n\nIPython.display(), 需要 pip install `svgling` 包\n```python\nfrom IPython.display import display\ndisplay(dg)\n```\n\n## Feature-based 结构\n\n#### 创建 FeatStruct\n\n**第一种**\n```python\nimport nltk\nfrom nltk import Tree\nfrom nltk import FeatStruct\nfs1 = FeatStruct(number='singular', person=3, )\nprint(fs1)\n```\nout:\n```text\n[ number = 'singular' ]\n[ person = 3          ]\n```\n\n```python\nfs2 = FeatStruct(type='NP', agr=fs1)\nprint(fs2)\n```\nout:\n```text\n[ agr  = [ number = 'singular' ] ]\n[        [ person = 3          ] ]\n[                                ]\n[ type = 'NP'                    ]\n```\n\n**第二种**\n```python\n# folgen\nFeatStruct(\"[CAT=V, LEMMA=folgen,\"+\n            \"SYN=[SBJ=?x, OBJ=?y],\"+\n            \"SEM=[AGT=?x, PAT=?y]]\")\n```\n\n#### Unifikation\n- 返回将两个 Feat Struct 统一成的结构, 或者 None\n- 只有在两个结构(的内容)不冲突时才能成功\n\n上接 [[#创建 FeatStruct]]\n\n```python\nfs3 = FeatStruct(agr=FeatStruct(number=Variable('?n')), subj=FeatStruct(number=Variable('?n'))) # 变量n\nprint(fs3)\n```\nout:\n```text\n[ agr  = [ number = ?n ] ]\n[                        ]\n[ subj = [ number = ?n ] ]\n```\n\n```python\nprint(fs2.unify(fs3))\n```\nout:\n```text\n[ agr  = [ number = 'singular' ] ]\n[        [ person = 3          ] ]\n[                                ]\n[ subj = [ number = 'singular' ] ]\n[                                ]\n[ type = 'NP'                    ]\n```\n\n#### 创建 Feature 语法\n```python\n#Feature-Grammar NP-Agreement:\ngramstring = r\"\"\"\n% start NP\n\n    NP[AGR=?x]  -\u003e DET[AGR=?x] N[AGR=?x]\n\n    N[AGR=[NUM=sg, GEN=mask]]   -\u003e \"Hund\"\n    N[AGR=[NUM=sg, GEN=fem]]   -\u003e \"Katze\"\n    \n    DET[AGR=[NUM=sg, GEN=mask, CASE=nom]] -\u003e \"der\"\n    DET[AGR=[NUM=sg, GEN=mask, CASE=akk]] -\u003e \"den\"\n    DET[AGR=[NUM=sg, GEN=fem]] -\u003e \"die\"     \n\"\"\"\n```\n然后就可以用这个语法分析句子了, `notebook/06-vorlesung` 中有例子\n\n![[attachments/Pasted image 20230205210610.png|L|500]]\nout:\n```text\n[ GEN = 'neu' ]\n[ NUM = 'sg' ]\n[ KAS = 'nom' ]\n```\n\n#### GPSG\n- Generalized Phrase Structure Grammar \n- 在 [[#Formal Grammar]] 中, 标注 V 的子类型\n![[attachments/Pasted image 20230206223757.png|L|400]]\n\n#### HPSG\n- Head-driven Phrase Structure Grammar\n- 给动词 Feature-based 框架里标注上相关信息\n![[attachments/Pasted image 20230206224611.png|L|400]]\n\n#### 如何得到句子的的动词 FeatStruct\n```python\nimport spacy\nnlp = spacy.load('de_core_news_sm')\n\n# In: sentence as a string\n# Out: semantic feature structure\ndef semantic_parse(sentence):\n    sbj, obj, verb = None, None, None\n    analyzed = nlp(sentence)\n    for token in analyzed:\n        if token.dep_ == 'sb':\n            sbj = token.text\n        elif token.dep_ == 'oa' or token.dep_ == 'da':\n            obj = token.text\n        elif token.pos_ == 'VERB':\n            verb = token.lemma_\n    if sbj is None or obj is None or verb is None:\n        raise RuntimeError('I could not identify all relevant parts: {} - {} - {}'.format(sbj, verb, obj))\n    return lexicon[verb].unify(\n        FeatStruct(SYN=FeatStruct(SBJ=sbj, OBJ=obj))\n    )\n```\n\n```python\nfor sent in sentences:\n    fs = semantic_parse(sent)\n    print()\n    print(sent)\n    print(fs)\n```\n![[attachments/Pasted image 20230207142852.png|L|300]]\n\n```python\nfrom spacy import displacy\n\nfor sentence in sentences:\n    sent = nlp(sentence)\n    for token in sent:\n        print(token.text, token.lemma_, token.pos_, token.tag_, token.dep_,\n            token.shape_, token.is_alpha, token.is_stop, sep='\\t')\n    displacy.render(sent, style='dep', options={'distance':100}) \n```\n![[attachments/Pasted image 20230207142935.png|L|500]]\n\n#### Subsumption\n- f1.subsumes(f2), 返回 True/False\n- f1 的内容 f2 也有\n\n## Parsers\n- ChartParser\n- RecursiveDescentParser\n- ShiftReduceParser\n- EarleyChartParser\n- ViterbiParser\n由于目前很忙所以先空着, 在[[#Syntax Analyse with formal Grammar]] 和 [[project/lmu - Syntax of natural language(Germany)#Parsers]] 的部分内容应该整合到这里\n\n\nPCFG(u12)\n```python\n# 根据 treebank 中的 parsed_sents() 为输入, 推测 带权重的语法规则\n\n# Production count: the number of times a given production occurs\npcount = defaultdict(int)\n\n# LHS-count: counts the number of times a given lhs occurs\nlcount = defaultdict(int)\n\nfor tree in treebank.parsed_sents():\n    for p in tree.productions():\n        pcount[p] += 1\n        lcount[p.lhs()] += 1\n        \nproductions = [\n    ProbabilisticProduction(\n        p.lhs(), p.rhs(),\n        prob = pcount[p] / lcount[p.lhs()] # TODO\n    )\n    for p in pcount\n]\n\n# test\nstart = nltk.Nonterminal('S')\ngrammar = PCFG(start, productions)\nparser = nltk.ViterbiParser(grammar)\n\nfor s in test_sentences:\n    for t in parser.parse(nltk.word_tokenize(s)):\n        print(t.prob())\n        t.pretty_print(unicodelines=False)\n```\n","lastmodified":"2023-06-16T19:54:22.4300497+02:00","tags":["NLP","ML","Python"]},"/permanent/NTP-%E5%8D%8F%E8%AE%AE":{"title":"NTP 协议","content":"\nNetwork Time Protocol\n\n网络时间协议（NTP）用于通过通信网络同步时钟。它是少数几个仍被广泛使用的不安全和未经认证的互联网协议之一。\n\n\n\n\n#### 关于 NTP 的攻击\n- Delay/Replay\n- Man in the middle\n- IP-Spoofing -\u003e [[permanent/NTP 协议#NTP Amplification|NTP Amplification]]\n\n为什么要同步通信时间?\n- Timestamp\n- Log 分析\n- 网络监视 Netzmonitoring, 寻找错误, 分析事件联系等等\n\n如果时间同步系统受到攻击……\n- 用 Timestamp 的都挂了\n\n##### NTP Amplification\nAmplification factor:206\n将查询数据包的地址改成受害者 IP, 返回很大的数据\n\n相似: [[permanent/DOS, DDOS#DNS 放大攻击]]","lastmodified":"2023-06-16T19:54:55.032249+02:00","tags":["安全","网安","协议"]},"/permanent/Nginx%E7%BD%91%E7%AB%99%E7%94%A8Cerbot%E9%85%8D%E7%BD%AE%E5%85%8D%E8%B4%B9https%E8%AF%81%E4%B9%A6":{"title":"Nginx 网站用 Cerbot 配置免费 https 证书","content":"\nCerbot是什么？\n\u003eCertbot 是最流行的基于Let's Encrypt 的客户端，用于在服务器上简化HTTPS（SSL/TLS）证书的申请流程。 本文中，我们介绍通过Certbot 客户端为网络服务器添加、删除 HTTPS 证书、吊销证书，以及为已有证书添加新域名的操作。\n\n这里可以找到一份 `Cerbot` [官网指南](https://certbot.eff.org/instructions)。\n\n## 安装 snapd\n首先要安装 `snap`, 根据系统不同方法可能不一样。详细看[这里](https://snapcraft.io/docs/installing-snapd)\n\n我的系统是 Ubuntu 20.04 ， 实测并没有预装，使用如下命令安装:\n\u003esudo apt install snapd\n\n## 更新 snap 到最新版本\n\u003e sudo snap install core; sudo snap refresh core\n\n## 使用 snap 安装 Cerbot\n如果曾经不通过 `snap` 安装了 `cerbot`, 需要先将其卸载。\n(命令: `sudo apt-get remove certbot`, `sudo dnf remove certbot`, `sudo yum remove certbot`)\n\n然后通过 snap 安装 cerbot:\n\u003esudo snap install --classic certbot\n\n\n然后运行这条指令，保证其正常使用：\n\u003esudo ln -s /snap/bin/certbot /usr/bin/certbot\n\n## 获取证书\n\n这是获取并安装证书的命令：\n\u003esudo certbot --nginx\n回车之后还有一些要配置的，见机行事。\n\n这是只获取证书的命令：\n\u003esudo certbot certonly --nginx\n这条指令没有尝试过。\n\n根据代理服务的不同，命令的参数也不同，这里是 nginx.\nCertbot 会在证书过期前自动更新，所以除非更改配置，我们不再需要运行它。\n\n## Nginx 的配置\n如果执行上一步中获取并安装证书的命令，cerbot 会自动改动 Nginx 的配置文件。若是想看具体改变了什么，可以打开配置文件，就会发现多了一些 `# managd by Certbot` 的注释，就是它们了。\n\n## 最后，重新加载 Nginx\n\u003enginx -s reload\n刷新一下你的网站，是不是变成 https 了？\n\n## 子域名的证书配置\n\n在 nginx 下的 Certbot 可以很方便地为子域名配置证书，命令：\n\u003ecertbot --nginx\n\ncertbot 能自动识别已经挂上 80 端的子域名，根据提示选择要配置的子域名即可。\n\n参考:\n\n[快速搭建https网站: Hugo + Nginx + Let's Encrypt (certbot)](https://zhuanlan.zhihu.com/p/365910957)\n\n[User Guide - Certbot 1.23.0 documentation](https://eff-certbot.readthedocs.io/en/stable/using.html#certbot-commands)","lastmodified":"2023-06-14T23:39:29.2698996+02:00","tags":["nginx","cerbot","个站"]},"/permanent/Ob%E5%8F%91%E5%B8%83%E5%88%B0Hugo%E7%9A%84%E5%B0%9D%E8%AF%95":{"title":"Ob发布到Hugo的尝试","content":"\n主方案是[🪴 Quartz 3.3](https://quartz.jzhao.xyz/). \n\n[[permanent/网站更新记录|网站更新记录]]\n\n特点:\n- 仅找到的可用的hugo方案\n- 有预览\n- 同文件夹下支持双链\n- 有知识图, 但感觉算法不太对劲, 而且中文会转码相当难用\n- 有搜索, 但经常抽风\n- 易用的fork, 快速yaml模板\n- 引用预览似乎不行\n- 根目录下一个 make serve 就建好\n\n你可以看一下, search, graph, 等等是怎么实现的, 在layout里\n\n*不要用link converter*, 会把所有中文转码\n\n##### 关于转码\ndraft:true在图里是乱码, 其他好像不会\n\n链接用别名好像 rebuild 一下也不会乱码\n","lastmodified":"2023-06-15T14:12:26.0303278+02:00","tags":["obsidian","hugo"]},"/permanent/Obsidian":{"title":"Obsidian","content":"\n[[permanent/Obsidian 探索|Obsidian 探索]]\n\n[[permanent/小鹤音形和 Obsidian vim 的适性|小鹤音形和 Obsidian vim 的适性]]\n\n[[permanent/Ob发布到Hugo的尝试|Ob发布到Hugo的尝试]]","lastmodified":"2023-06-16T19:55:51.4903205+02:00","tags":["工具使用"]},"/permanent/Obsidian-%E6%8E%A2%E7%B4%A2":{"title":"Obsidian 探索","content":"\n#### 代码块缩进\n方法是开头的 `三```点` 也跟着层级缩进, 整个代码块都缩进, 最后结束的三点改成4点或者其他会被隐藏的字符(也要缩进).\n这样可以在阅读和编辑两种模式中都正常显示.\ne.g. [[permanent/MySQL#ZIP 包解压的安装方式|ZIP 包解压的安装方式]]\n\n### 插件修改\n\n#### Enhanced-Editing\n- 给格式刷加上了涂黑和挖空(Bt主题限定)\n    - 在 `html格式刷` 加上 View\n    - `onload` 可以用 `addCommand` 加快捷键\n    - 方法是本来就写好的, 在 `MyPlugins` 类, XX格式刷() 和 转换XX()","lastmodified":"2023-06-16T19:55:47.8737001+02:00","tags":[]},"/permanent/P4G":{"title":"P4G","content":"\n#### commu\n狐狸\n\n{魔术师}阳介 一四六日4\n{女教皇}雪子 一二三四1\n{战车}千枝 一二四六2\n{皇帝}完二 三四六日3\n{恋爱}理世 五六日5\n{命运}直斗 全天/不定期7\n{正义}菜菜子 1.23有一次\n月亮 三四五\n太阳 一二四 \n安亲班 一五六\n\n#### 记录\n河边的猫 给 红金/源氏香鱼","lastmodified":"2023-06-16T19:56:14.3635441+02:00","tags":[]},"/permanent/POC":{"title":"POC","content":"\nProof of Concept\n使用 POC 证明某个漏洞的可利用性","lastmodified":"2023-06-16T19:57:56.5801444+02:00","tags":["安全","网安"]},"/permanent/PPS":{"title":"PPS","content":"\n#### PPS\n全称 Programmable Power Supply, 可编程电源\n可以理解对为 PD3.0 协议的补丁, 旨在为当前的快速充电解决方案提供统一的规范.\n支持 PPS 自动支持 QC3.0, QC4.0, VOOC, SCP, FCP, PE2.0, PE3.0","lastmodified":"2023-06-16T19:58:19.5300631+02:00","tags":[]},"/permanent/Petri-Netze":{"title":"Petri-Netze","content":"\n属于 [[project/lmu - Betriebsystem|lmu - Betriebsystem]]\n\n## Petri-Netze components\n- Petrinetze $$Y = (S,T,F,K,W,M_0)$$\n- Stellen **S**\n    - statische Objekte\n- Transitionen **T**\n    - Aktionen\n- Kanten **F**\n    - S --\u003e T oder T --\u003e S\n- Kapizität **K** einer Stelle\n    - 某个Stelle的最大Mark数\n- Kantengewicht **W** einer Kante\n    - 链出减少，链入增加\n- Marken **M**\n    - 资源\n## ·x, x·, -x, x-\n- Sei $$ x \\in S \\bigcup T$$\n- `·x`:= $$\\{y \\in S \\bigcup T : (y, x) \\in F \\}$$\n    - **Vorbereich** einer Stelle/Transition x\n    - 链入x的Stelle/Transitionen\n- `x·` := $$\\{ y \\in S \\bigcup T : (x, y) \\in F\\}$$\n    - **Nachbereich** einer Stelle/Transition x\n    - x链出的Stelle/Transitionen\n- `-x`:= $$\\{(y,x) \\in (S \\times T) \\bigcup ( T \\times S) : (y,x) \\in F\\}$$\n    - **Menge aller Eingangskanten** von x\n    - 链入x的Kanten\n- `x-` := $$\\{(x,y) \\in (S \\times T) \\bigcup ( T \\times S) : (x,y) \\in F\\}$$\n    - **Menge aller Ausganskanten** von x\n    - 链出x的Kanten\n   \n## Markierung\n- Markierung可以理解为状态，下标从0开始\n- 形如:\n  $$M = \\{0,0,1,0\\}$$\n  $$M_1 = \\{1, 0, 0, 1 \\}$$\n- 注：这个Petri-Netze有4个Stellen, 在M状态时S2有一个Mark, （转换到）M1状态时S0, S3有一个Mark\n- **Aktivierte Transitionen** (在M状态下)可以执行的Transition。\n  collapsed:: true\n    - 条件：\n        - 其Vorbereich有足够的Marken\n        - 其Nachbereich有足够的空余容量\n- **Folgemarkierung** $M^{'}$: 即经过一次T后（计算得到）的下一个Markierung\n\n## Erreichbarkeitsgraph\n- Die Erreichbarkeitsmenge $E_Y$ zu dem Petri-Netze Y enthält die Anfangsmarkeirung $M_0$:\n  $$E_Y = E_Y (M_0) := \\{ M^{'}: \\exists n \\in \\mathbb{N_0}, t_1,...,t_n \\in T^* : M_0  \\xrightarrow{t_1,...,t_n} M^{'} \\}$$\n- 就是从M出发能到的所有Markierung\n- ![image.png](../attachments/image_1638698191676_0.png)\n \n## Deadlock/Verleimmungen\n- Teilweise Verklemmung\n    - Min. eine Markierung existiert, die nicht von jeder anderen Markierung aus erreichbar ist.\n- Vollständige Verklemmung\n    - Min. eine markierung ohne Nachfolge- Markierung existiert.\n- ![image.png](../attachments/image_1638698708738_0.png)\n## How to draw a Petrinetze\n- 每个 Object 的每个状态需要一个 Stelle\n- 每多一个 Ressouce，就需要一个 Stelle。权限也算做Ressouce","lastmodified":"2023-06-15T12:53:56.3470926+02:00","tags":[]},"/permanent/Phishing":{"title":"Phishing","content":"\n- Phishing\n\t- clone phishing (重复真实邮件)\n\t- spear phishing (有针对性的)\n\t- whaling (叉大鱼)\n\t- CEO Fraud (冒名诈骗)\n\t- Vishing (Voice Phishing, 目标: 受害者给攻击者打电话)\n\t- Evil Twins (恶意/流氓 Wifi 接入点)\n \n##### Clone Phishing\n克隆真实存在的邮件, 通过例如在附件中的恶意软件钓鱼\n\n##### Spear Phishing\n个性化的, 针对个人/公司的\n\n##### Whaling\n对一些高级别员工, 通常对 spear phishing 很了解, 有很强的安全意识, 这时候就需要一些更复杂更有针对性的方法. 编写成功的捕鲸电子邮件的骗子知道他们的受众不会仅仅被一个最后期限的提醒或来自上级的严厉电子邮件所蛊惑；相反，他们会利用其他的恐惧，如法律行动或成为声誉损害的对象.\n\n#### 钓鱼邮件元素示例\n- 唤起好奇心: \"fantastic\", \"best tool ever\"\n- 求助\n- 提出需求: 需要输入 xxx\n- 链接到外部 \"更多信息\"/\"屏幕截图\"\n","lastmodified":"2023-06-16T19:57:37.7292201+02:00","tags":["网安"]},"/permanent/PotPlayer-%E7%94%B5%E8%A7%86%E6%BA%90":{"title":"PotPlayer 电视源","content":"\n教程: [电脑上收看传统电视频道：potplayer + iptv 源 - 知乎](https://zhuanlan.zhihu.com/p/109947163)\n\n源地址\n[iptv-org/iptv: Collection of publicly available IPTV channels from all over the world](https://github.com/iptv-org/iptv#playlists)\n\n[live | ✯ 一个国内可直连的直播源分享项目 ✯ 🔕 永久免费 直连访问 完整开源 不含广告 完善的台标 直播源支持IPv4/IPv6双栈访问 🔕](https://live.fanmingming.com/)\n\n广体没有网络版权是不能走电信的iptv的, 只有广电机顶盒可以看","lastmodified":"2023-06-16T19:58:09.1237714+02:00","tags":["工具使用"]},"/permanent/Python":{"title":"Python","content":"\n[[permanent/python unrar库|python unrar库]]\n\n[[permanent/python pandas库|python pandas库]]\n\n[[permanent/python tkinter库|python tkinter库]]\n\n[[permanent/pyinstaller|pyinstaller]]\n","lastmodified":"2023-06-16T20:00:12.4127318+02:00","tags":[]},"/permanent/RSA":{"title":"RSA","content":"\n#### RSA\n- 1978, 命名是三个人名的开头字母\n- 基于质因数分解\n\n#### RSA 密钥生成\n1. 随机选择两个差不多大的质数 p, q\n2. n = pq, $\\Phi(n) = (p-1)(q-1)$\n3. 选择一个与 p, q 互质的 e, 1 \u003c e \u003c $\\Phi(n)$, 常选 e = 65537\n4. d = e$^{-1}$ mod $\\Phi(n)$, \n    - 逆元, 就是 d 要达到这个效果\n    - 扩展欧几里得算法求逆元: d * m - k * Phi(n) = 1, k 正数\n    - ![[Pasted image 20230221190732.png|L|400]]\n5. 私钥(n, d), 公钥(n, e)\n\n#### RSA 加密解密\n- $c = m^e$ mod n\n- m = c$^d$ mod n\n\n#### 针对 RSA 的自选密文攻击\n- 目标: 得到某密文 c 的明文 m, 即计算 m = c$^d$ mod n\n1. 选择一个 c' = s$^e$ c (mod n), s 随机\n2. 得到 m' = (c')$^d$ (mod n)\n3. m = m' s$^{-1}$ \n\n除此之外还有 time attack, signiture attack, math attack(src: k8p12)\n","lastmodified":"2023-06-15T17:13:15.5858569+02:00","tags":["安全","密码学"]},"/permanent/Raid-%E9%98%B5%E5%88%97":{"title":"Raid 阵列","content":"\nsrc: [bili - 啃芝士](https://www.bilibili.com/video/BV16x411J7VK/?spm_id_from=333.337.search-card.all.click\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n\n如果不充分了解RAID，就不要去玩RAID，组建RAID的时候，会自动抹掉你硬盘的全部分区和数据\n\n另外，如果intel快速存储技术允许你在进入系统之后组建RAID，但是好像是硬盘需要把AHCI改成RAID工作模式，修改工作模式貌似需要重装系统。。。需要注意这一点\n\n#### Raid 0\n使用 n 块硬盘, 写入文件时将文件分为 n 份\n\n优点是快, 用几块硬盘组就会快几倍\n\n缺点是只要坏了一块就全玩完\n\n#### Raid 1\n使用 n 块硬盘, 每一份都完整地存储在每一块硬盘上\n\n优点是安全性好, 缺点是实际容量只有 n 分之一\n\n#### Raid 5\n使用至少 3 块硬盘, 其中一块作为检验盘. 将数据分成 n-1 份存储, 最后一块盘 XOR 校验\n\n兼顾速度和安全, 实际容量是原来的$\\frac{n-1}{n}$, 但是需要比较多块硬盘\n\n#### Raid 10/Raid 01\n先1后0或者先0后1","lastmodified":"2023-06-16T20:00:24.0588612+02:00","tags":["硬件"]},"/permanent/Rootkit":{"title":"Rootkit","content":"\n#### Rootkit\n= root + kit\n不会自动传播, 也不会造成大范围攻击, 只是对系统的隐蔽通道\n\n通常带有 [[permanent/Dropper|Dropper]], 即释放或下载另一个恶意软件的木马\n\n#### Rootkit 的历史和典型案例\n##### 第一代 Rootkits\n第一代 rootkits 其实是内置 backdoor 的 UNIX 系统程序\n\n**攻击流程**\n1. 攻击者拿到 root 权限\n2. 安装 rootkit\n3. 清除入侵痕迹(logfile), 留下 root 入口\n4. 第一代的 rootkits 是修改了的系统命令程序, 如 _ps, lw, top, du, find, netstat, passwd, sshd..._\n5. 这些修改后的程序会隐藏攻击者的进程和文件\n\n通过 Host-IDS 和工具(e.g. chkrootkit) 检测\n\n##### 第二代Rootkits\n动机：从攻击者的角度来看，单独替换所有系统程序既费时又容易出错.\n新方法：修改操作系统内核→攻击者的文件、进程等被隐藏在所有系统程序之外\n\n**LKM rootkits**\n是一个可加载的内核模块, 在系统运行时被扩展. 在读取目录(隐藏文件)或访问进程列表(隐藏恶意软件)时发挥作业.\n预防: 禁止重新加载内核模块\n检测: 只从纯净系统启动(USB, CD)\n\n**Sony BMG copy protection rootkit**\n- win 程序, 植入了用于增强版权([[permanent/DRM]])的后门\n- 将数据文件用 \"\\$sys\\$\" 伪装 (被后人模仿)\n\n**Banker-Rootkit**\n- disable 强制签名\n- 安装了 文件管理系统驱动\n- 伪造的 根证明 和 HOSTS 文件\n\n##### 现代形式\n\n**Hypervisor-level Rootkit**\n- rootkit 接管整个系统, 原本的操作系统像虚拟机一样运行\n- e.g. Blue Pill(2006)\n\n**Bootkits**\n- 攻击者用恶意软件替换原本的 Bootloader\n- 通过完全加密的磁盘起到保护作用\n- e.g. Evil Maid Attack, Stoned Bootkit, Alureon \n\n**Hardware-/Firmware-Rootkits**\n- Rootkit 自行安装在例如 BIOS 或网卡的固件中\n- e.g. DelugréNetXtreme Rootkit 2010\n\n**难以实现可靠的检测**\n- 一个方法是计时, 通过改变例如系统调用的持续时间来检测rootkit-virtualised环境(问题: 高FP)\n- 外部分析(如从CD启动)\n\n#### User-Mode/Kernel-Mode Rootkit\n**User Mode Rootkit**![[attachments/Pasted image 20230116230548.png|inlineR|300]]\n- 可作为 dll 附加到其他程序\n- Ring3 权限\n- 操纵安全设置\n\n**Kernel Mode Rootkit**\n- 最高权限\n- 修改操作系统内核, 可能导致操作系统不稳定\n\n\n#### Rootkit 的反取证措施\nAnti-Forensik\n\n**Data Destruction**\n- 处置不再需要的组件/数据/痕迹\n- 破坏取证工具所用的数据结构\n- 溶解 .bat: 通过脚本从磁盘上删除二进制文件\n\n**Data Concealment**\n- 在特殊区域如系统卷信息主动隐藏\n- 主动隐藏：安装成功好修改操作系统\n\n**Data Fabrication**\n- flooding 虚假和误导信息 -\u003e 转移注意力","lastmodified":"2023-06-16T20:01:06.7678313+02:00","tags":["安全"]},"/permanent/SIEM":{"title":"SIEM","content":"\n#### SIEM\nSecurity Information and Event Management\nSIEM 是系统安全管理的一种**方案**, 整合了 SIM(Security Information Management) 和 SEM(Security Event Management).\n\nSIEM\n- 从网络设备(Router, Switcher), 服务器, 域管理者, 应用(防火墙, IDS/IDP系统)等地方收集**警告, 通知, 日志**\n- **集中, 即时**地*收集, 关联和评价*安全信息数据\n- 各系统上的软件代理收集数据, 如有必要, 进行标准化/统一化/预处理并发给 SIEM 处理(一些变体没有代理, 直接发给 SIEM)\n\nSIEM 结合了分布式检测能力 \n- 信息不是来自 SIEM 本身，而是来自检测威胁的组件。 \n- 该组件可能在其他地方报告了威胁 \n在 SIEM 中的事件的相关性 \n- 例如，暴力攻击 日志中的n次失败登录尝试+1次成功 → ?  \n- 通过对（不显眼的）事件的关联性重建攻击链 \n- 攻击者是如何进行的？他有没有攻击其他系统？\n\n#### SIEM 的目标\n- 识别异常, 模板和趋势\n- 尽早发现威胁\n- 启动响应\n- 事后报告和取证\n\n#### SIEM 的优点/缺点\n**优点**\n- 及早识别威胁\n- 迅速反应\n- 支持事后调查\n- 合规性\n**缺点**\n- 无法开箱即用(大量引入性工作)\n- 信息量过大, 很难找到有用信息\n\n#### SIEM 的困难\n- 大量数据(每分钟几十万很正常), 过滤相关的数据\n- 异质来源信息的标准化/统一化\n- 专业知识识别模式和趋势\n- 数据保护和法律问题\n\n#### SIEM 的信息源\n警报, 消息, 日志文件, 关键数据, 来自\n- 终端设备\n- 网络组件(Router, Switcher: 网络流量)\n- 服务器\n- 操作系统\n- 应用\n\t- 防火墙\n\t- 漏洞和病毒扫描系统\n\t- 终端应用\n\t- IDS/IDP 系统\n- 外部数据源(威胁情报 Threat Intelligence)\n\n### SIEM 与 IDS/IPS 的区别\nSIEM\n- 支持预防措施 \n- 在一个中心位置结合不同的来源 \nIDS\n- 基于签名、异常或信誉来检测可疑行为（更多的现代方法是行为分析或ML/AI)\n- 只检测，不阻止攻击 \n- 可以作为SIEM的输入源 \nIPS\n- 类似于IDS\n- 通过阻断网络流量检测和防止漏洞利用 \n- 可能对IPS发出虚假警报或有针对性的攻击 → IPS可以通过阻断网络流量对自己的基础设施造成DoS\n\n","lastmodified":"2023-06-15T21:30:07.2387876+02:00","tags":["安全"]},"/permanent/SQL":{"title":"SQL","content":"\nSQL 是使用 [[permanent/ANSI|ANSI]] 标准的一种计算机语言, 除了必须符合标准的部分, 在不同版本的 SQL 中也有不同的方言.\n\n## SQL 简介\n### SQL是什么\n- SQL: Structured Query Language 结构性查询语言。\n- SQL是由国际标准化组织ISO制定的标准，对DBMS的统一操作方式。\n### SQL存储结构\n- DATABASE数据库 -\u003e TABLE表 -\u003e COLUMN列\n- 一个系统中有若干个数据库，一个数据库有若干张表，每一张表有若干行若干列\n- 下面是一张表的例子：\n\n| name/varchar | gender/char(10) | age/int |\n| ------------ | --------------- | ------- |\n| zhangsan     | male            | 22      |\n| lisi         | female          | 33      |\n    - 每列的数据类型相同，每一行称为一条记录\n### SQL语法标准\n- 以分号结尾，可以单行或多行\n- 空格和换行不会当作输入\n- 不区分大小写（通常大写关键字）\n### SQL语句分类\n#### 数据定义语言DDL\n- Data Definition Language\n- 用来操作数据库对象的结构：库、表、列\n#### 数据操作语言DML\n- Data Manipulation Language\n- 用来操作数据库记录：增、删、改（会修改记录的操作）\n#### 数据控制语言DCL\n- Data Control Language\n- 用来定义和访问权限和安全级别，如用户创建和授权\n#### 数据查询语言\n- Data Query Language\n- 用来查询记录（不会修改记录）\n \n## SQL 数据类型\n##### 数据类型兼容\nSQL 支持 compatible range:\n- 任意长度的字符串可兼容\n- 任意精度的数字可兼容\n\n|类型语法|说明|\n|---|---|\n|CHAR(n)|固长字符串|\n|VARCHAR(n)|变长字符串|\n|INT||\n|FLOAT||\n|DECIMAL(n,m)|n位小数, 其中小数点后m位|\n|DATE|日期|\n|TIME|时间|\n\n#### 数字类型\n\n**int**\n- 整数类型\n\n**double**\n- 双精度浮点数\n- `double(5,2)` 表示最多5位，其中必须有2位小数\n\n**decimal**\n- 对十进制运算比较精确的小数，适合用在钱方面\n\n**BigDecimal**\n- 可以装极大的数\n\n#### 字符串类型\n**char**\n- 固长字符串, 最大 255 **字符**\n- `char(255)`\n- 例如用在身份证号\n- 不同的编码最大可用字节数不同\n\n**varchar**\n- 变长字符串，最大 65535 Bytes\n- `varchar(65535)`\n- 每一个值需要1或2个字节记录长度\n    - \u003c=255 / \u003c= 65535\n- 不同的编码所对应的最大可存储的字符数不同\n\n**text 家族(MySQL特有, 在标准中是clot)**\n- 固长字符串\n| 类型名     | 长度              |\n| ---------- | ----------------- |\n| tinytext   | $2^{8} -1$ Bytes  |\n| text       | $2^{16} -1$ Bytes |\n| mediumtext | $2^{24} -1$ Bytes |\n| longtext   | $2^{32} -1$ Bytes |\n\n#### 二进制类型\n**blob 家族**\n- 固长二进制\n\n| 类型名     | 长度              |\n| ---------- | ----------------- |\n| tinyblob   | $2^{8} -1$ Bytes  |\n| blob       | $2^{16} -1$ Bytes |\n| mediumblob | $2^{24} -1$ Bytes |\n| longblob   | $2^{32} -1$ Bytes |\n\n#### 日期类型\n\n| 类型名    | 含义   | 格式                | 示例                |\n| --------- | ------ | ------------------- | ------------------- |\n| date      | 日期   | YYYY-MM-DD          | 1970-01-01          |\n| time      | 时间   | hh:mm:ss            | 23:59:59            |\n| timestamp | 时间戳 | YYYY-MM-DD hh:mm:ss | 2038-01-19 03:14:07 |\n\n## SQL 约束\nIntegritätbedingung\n\n### 属性约束\n#### not null\n\n#### unique\n\n#### primary key\nunique, not null\n每表有且仅有一个唯一的主键, 可以是一个或一组\n\n#### references\n\n\u003e $name$ $type$ references $tablename(columnname)$\n\n表示 $a_2$ 是来自$t_1$ 的 $a_1$ 键\n如果 $t_1$ 没有对应的键则不允许\n\n#### default $w_1$\n设置默认值 $w_1$\ne.g. default 'Auto'\n\n#### check f\n给定限定条件\ne.g. check (A \u003c= 100)\n\n### 表约束\n\u003e PRIMARY KEY ($a_1$, ..., $a_k$)\n\n\u003e UNIQUE ($a_1$, ..., $a_k$)\n\n\u003e CHEKC(b)\n\nforeign key $a_2$ references $t_1 (a_1)$\n\u003e KNr INTEGER REFERENCES K(KNr)\n\n##### ON DELETE ... \nforeign key (a5,a6) references B (b1,b2) \n- on delete cascade \n\t通常 b1, b2 在 A 表有对应项时无法更改, 如果增加此条属性, 则删除 B 中的项时, A 的对应项也会删除\n- on update cascade\n\t更改 B 中的项时, A 的对应项也会更新\n- on delete set null\n\t删除 B 中的项时, A 的对应项会设为 null\n\n\n## SQL 增删查改\n\n### DDL\ndata defination language\n- meta 层\n\n#### 数据表的创建\n- $a_i$ 属性名称\n- $d_i$ 属性类型 (domain)\n- $c_i$ 可选约束\n```sql\nCREATE TABLE Mitarbeiter\n(\n\ta1 d1 c1,\n\t...\n\tak dk ck\n)\n```\ne.g. \n```sql\nCREATE TABLE Mitarbeiter\n(\n\tpNr    NUMBER(3) PRIMARY KEY,\n\tname   CHAR(20) DEFAULT 'empty',\n    age    INT CHECK (Age \u003e 0),\n    salary DECIMAL(6,2)\n)\n```\n\n#### 表修改属性, 增加属性, 删除属性\n```sql\nALTER TABLE tablename\n\tADD (attr type); |\n\tMODIFY (attr type); |\n\tDROP (attr);\n```\n\ndrop table $n_1$\n删除数据表\n\nalter table $n_1$ add ($a_1\\ d_1\\ c_1,\\ a_2\\ d_2\\ c_2,\\ ...$)\n增加表的属性\n\nalter table $n_1$  drop ($a_1\\ a_2$, ...)\n删除表的属性\n\nalter table $n_1$ modify ($a_1\\ d_1\\ c_1,\\ a_2\\ d_2\\ c_2,\\ ...$)\n\n\n#### 插入数据, 删除数据\n\n##### INSERT INTO\n```sql\nINSERT INTO MGA VALUES ('Weber', 001) \n```\n\n##### DELETE FROM\n```sql\nDELETE FROM MGA WHERE ...\n```\n\n\n### DML\ndata manipulation language\n\n纯读取操作\n\n\n## SQL 权限\n```sql\nGRANT right1, right2, ...\nON table_name | view_name\nTO user_name | TO PUBLIC\n[WITH GRANT OPTION]\n```\noption: restrict, cascade\n\n\n## SQL 进阶操作\n\n#### SQL运算顺序\n```sql\nSELECT ...\nFROM ...\n[WHERE ...]\n[GROUP BY ...\n [HAVING ...]]\n[ORDER BY ...]\n```\n1. FROM WHERE\n2. GROUP BY \n3. Aggregation(即函数操作)\n4. HAVING\n5. SELECT(projection)\n\n### SQL JOIN\n##### INNER JOIN\n如果表中有至少一个匹配，则返回行\n##### LEFT JOIN\n即使右表中没有匹配，也从左表返回所有的行\n##### RIGHT JOIN\n即使左表中没有匹配，也从右表返回所有的行\n##### FULL JOIN\n只要其中一个表中存在匹配，则返回行\n缺省值会被设置为 NULL\n##### NATURAL JOIN\n自动using同名属性\n\n![[attachments/Pasted image 20221108232850.png|500]]\n\n### 子查询\n可以出现在 con 位, 以及 select...from...where... 中的任意空位\n![[attachments/Pasted image 20221117115041.png|480]]\n\n##### exists 关键字\nexists:\n```sql\nselect * from kunde k1 where exists\n(select * from Kunde k2 where k1.Adr=k2.Adr and...\n)\n```\n\nforall: 双重否定\n...where not exists (select...from...where not...)\n\n##### all, some, any 关键字\n和 exists 一样, 作为 con 的起始\nsome 差不多就是引导从句用\n\ne.g.\n$A_i \\ \\Theta \\ all (Subq) \\equiv \\{ ... | \\forall t \\in Subq: A_i \\ \\Theta\\ t\\}$\n比如可以用在找数值最高最低\n\n##### in 关键字\n$A_i \\ IN \\ (Subq)$  可作为条件\n```sql\nselect * from MagicNumbers where Wert in ( select\nZahl from Primzahlen)\n\nselect * from MagicNumbers where Wert not in ( select\nZahl from Primzahlen)\n```\n\n### 排序\n\n##### ORDER BY 关键字\n```sql\nSELECT column_name,column_name_ \nFROM table_name  \nORDER BY column_name,column_name ASC|DESC;\n```\n- 默认是升序\n- 可以设置多级排序, 列名间用逗号分隔\n- 字符串类型不可排\n\n### 分组\n\n##### GROUP BY 关键字\n```sql\nSELECT site_id, SUM(access_log.count) AS nums  \nFROM access_log GROUP BY site_id;\n```\n将某列数据按另一列的结果加总\n\n##### HAVING 关键字\n相当于分组时的 WHERE 条件, 只显示满足条件的分组\n在分好组后开始 HAVING 的筛选\n\n##### 根据多属性分组\n```sql\nSELECT Abteilung, Einheit, sum(Gehalt) FROM Mitarbeiter \nGROUP BY Abteilung, Einheit\n```\n![[attachments/Pasted image 20221124204053.png|500]]\n\n##### 多表链接分组\n```sql\nSELECT Websites.name,COUNT(access_log.aid) AS nums FROM access_log  \nLEFT JOIN Websites  \nON access_log.site_id=Websites.id  \nGROUP BY Websites.name;\n```\n![[attachments/Pasted image 20221124203342.png|500]]\n\n## SQL Index\n\n#### Index 操作\n\n##### 创建 index\n```sql\nCREATE INDEX index_name ON table_name (a1, ..., an);\ncreate index name_geb on Dozent (Name, Geburt);\n```\n\n##### 删除和修改 index\n```sql\nDROP INDEX index_name;\nALTER INDEX index_name new_name; \n```\n\n#### 使用 Index 的情况\n```sql\n/* \n* match query \n* 可以 partial 匹配, 但不能在不指定 i 的情况下指定 i+1\n*/\nSELECT * FROM t WHERE a1=... AND an=...;\n\n/*\n* range query\n* 比较符，BETWEEN 都可用\n*/\nSELECT * FROM t WHERE a1=... AND ai=... AND ai+1\u003c= ...;\n\n/* \n* pointset query\n* 可用 OR\n*/\nSELECT * FROM t WHERE a1=... AND ai=... AND ai+1 in (7, 77,177);\n```\n\n\n\n## SQL 函数\n```sql\nSELECT avg(column_name) FROM ...\n```\n\n\n\n##### MAX(), MIN(), AVG(), SUM()\n字面\n\n##### COUNT()\n返回一个计数\n```sql\nSELECT COUNT(DISTINCT column_name) FROM table_name;\n```\n- COUNT(\\*)\n- COUNT(column_name) = COUNT(ALL column_name)\n\n##### FIRST()/LAST()\n字面\n\n##### UCASE()/LCASE()\n大小写\n\n## SQL VIEW\n\n### 视图是什么\n- 隐藏了表的底层结构, 限制了部分操作, 简化了数据访问操作的数据呈现结构\n- 只存储了必需的 Relationschema\n- 数据表的变化会影响视图, 视图的变化有限制地影响数据表\n- 在实际访问操作中, 会将对视图的操作翻译成对数据表的操作, 再呈现为视图\n\t![[attachments/Pasted image 20221124211644.png|400]]\n\n### 视图操作\n\n##### CREATE VIEW\n创建视图\n```sql\nCREATE VIEW view_name AS  \nSELECT column_name(s)  \nFROM table_name  \nWHERE condition\n```\n\n##### DROP VIEW\n撤销视图\n```sql\nDROP VIEW view_name\n```\n\n##### CREATE \\[OR REPLACE\\] VIEW\n这里更新视图指的是让视图的显示数据变化, 而不能直接在视图上修改数据库中的内容\n\n更新视图语法\n```sql\nCREATE OR REPLACE VIEW view_name AS\nSELECT column_name(s)\nFROM table_name\nWHERE condition\n```\n示例: 现在，我们希望向 \"Current Product List\" 视图添加 \"Category\" 列。我们将通过下列 SQL 更新视图：\n```sql\nCREATE VIEW [Current Product List] AS\nSELECT ProductID,ProductName,Category\nFROM Products\nWHERE Discontinued=No\n```\n\n### 视图限制操作\n- 允许: selection, projection, crossproduct, union, intersection, difference, group, aggregation, subqueries\n- 不允许: 排序\n\n##### Projection view\n指通过 projection 操作创建的 view\n- 删除视图的项无限制\n- 增加视图的项时，如果有视图不包含而源数据表包含的列，则会用 NULL 代替该属性\n- Kein insert/delete/update bei distinct/Arithmetik\n\n##### Selection view\n指通过 selection 操作创建的 view\n- 项更新后如果不满足 WHERE 条件, 视图中的项就会消失\n-  `with check option` 的话, 若更新后不满足 WHERE 则会出现错误消息\n\n##### Join view\n指通过 join 操作创建的 view\n- join view 禁止 update. 原因是歧义.\n\t![[attachments/Pasted image 20221125125308.png|480]]\n\n##### Updatable View\n- 可以增删改的视图都属于 Updatable view\n- 不能有aggregation, group by, subquery, 不能用 join 创建\nAggregation, group by, Subquery in VIEW 不可使用\n\n","lastmodified":"2023-06-16T20:05:44.2731193+02:00","tags":["数据库"]},"/permanent/STAR-%E6%A8%A1%E5%9E%8B":{"title":"STAR 模型","content":"\n#### 说明\n- 用于(如在简历中)描述自己的项目经验\n- 微软建议\n- src: 《剑指Offer》\n\n#### STAR 模型\n##### Situation\n项目背景\n##### Task\n自己完成的任务\n##### Action\n为了完成任务做了哪些工作\n##### Result\n自己的贡献\n最好能用数字描述出来\n\n#### STAR 模型应用示例\nWinforms是微软.NET中的一个成熟的UI平台（Situation）。本人的工作是在添加少量新功能之外主要负责维护已有的功能（Task）。新的功能主要是让Winforms的控件的风格和Vista、Windows 7的风格保持一致。在维护方面，对于较难的问题我用WinDbg等工具进行调试（Action）。在过去两年中我总共修改了超过200个Bug（Result）。","lastmodified":"2023-06-15T17:37:09.7643295+02:00","tags":["模型"]},"/permanent/SaaS":{"title":"SaaS","content":"\nSoftware as a Service\n「软件即服务」有别于通常的「软件即工具/商品」, 比如微信是一个社交工具, 但微信并不会让你成为社交达人.\n所谓软件即服务, 就是这个软件本身能够完成一项任务, 比如系统的安全维护(当然,可能涉及到软件背后的团队支持)\n\n","lastmodified":"2023-06-16T20:02:32.3863677+02:00","tags":[]},"/permanent/Security-Code-Review-101":{"title":"Security Code Review 101","content":"\n应用程序的许多漏洞可以追溯到编程时的粗心大意。代码审查（独立进行，部分自动进行）的目的是在编程时就已经改进安全方面。使用OWASP安全编码道场来识别输入验证、内存操作等方面的典型错误，并改进你自己的编程风格!\nhttps://owasp.org/SecureCodingDojo/codereview101/\n\n一些好的习惯:\n- 验证输入的时候用字符白名单\n- Parameterized Statements: 用设置参数的方式代替字符串连接组成 statement.\n- 输入时也限制长度: fgets 代替 gets\n- 用到 buffer 时指定统一的长度\n- off-by-one: C 涉及内存读写的时候用 \u003c 而不是 \u003c= (留出一个结束符)?\n- 不要把用户的输入直接用作输出\n- sends data using POST, which doesn't store the parameters in web logs.\n- JS 不要用 div.innerHTML 更新内容, 用 div.innerText 和 div.textContect\n- 可以用 id 指代的时候不用原信息(不要把原信息露出来)","lastmodified":"2023-06-16T20:02:44.5487541+02:00","tags":[]},"/permanent/Smali":{"title":"Smali","content":"\n![[attachments/Smali语法查询_1.0.0.apk]]\nsmali 是 Dalvik 的寄存器语言, 由 .dex 反编译而来\n\n## 关键字\n- .xxx\n- 如 .class, 类名\n\n## 数据类型\n- 单个大写字母\n- 如 Z 代表 boolean\n- 出现在方法头的行尾表示返回类型\n\n","lastmodified":"2023-06-16T20:04:22.4029002+02:00","tags":[]},"/permanent/Staatstrojaner":{"title":"Staatstrojaner","content":"\n国家的特洛伊木马, 安装在需要监控者的终端设备上\n据说联邦刑事警察局买了\nmfc42ul.dll\n\n功能\n- 截图\n- 窃听 Skype, VoIP\n- 与 C\u0026C 服务器通话\n\n分析\n- 软件到 C\u0026C 单向加密, 使用 AES-ECB\ncmd 1, cmd 10, cmd 11, cmd 15: -- \ncmd 2: 客户端重新连接并尝试发送数据（与cmd 13类似）\ncmd 3: 低质量的屏幕截图\ncmd 4: 注册一个内核模式的驱动程序  \ncmd 5：在文件系统中安装所有针对恶意软件的文件；来源尚不清楚  \ncmd 6：从文件系统中删除恶意软件并重新启动  \ncmd 7: 卸载恶意软件  \ncmd 8: 所有软件组件的列表  \ncmd 9: 像cmd 3一样，但有三个参数  \ncmd 12: 设置任何值  \ncmd 13: 网络浏览器和Skype的屏幕截图  \ncmd 14: 重新加载一个程序并立即执行 \n\n我记这个干嘛","lastmodified":"2023-06-16T20:05:59.6597693+02:00","tags":["恶意软件"]},"/permanent/Standford-Parser":{"title":"Standford Parser","content":"\n### 简介\n- learn from corpus\n- CFG with weighting\n- 语言学分析","lastmodified":"2023-06-16T20:06:05.9361867+02:00","tags":[]},"/permanent/TCP":{"title":"TCP","content":"\n#### TCP Header\n- ![[Pasted image 20230227131720.png|L|500]]","lastmodified":"2023-06-15T17:26:48.5010363+02:00","tags":["计网","协议"]},"/permanent/TCPIP-%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B":{"title":"TCPIP 五层模型","content":"\n- ![[attachments/Pasted image 20230316194705.png|L|400]]\n- ![[attachments/Pasted image 20230316194758.png|L|500]]\n\n#### 协议分层的原则\n1. 每一层都能完成双向且对立的操作(如加密/解密, 发送/接收)\n2. 在同一层的通信对象物(or: 数据单元)是相同的(如数据链路层是帧, 传输层是段Segment)\n\n#### 应用层\n- 解决问题: 已建立连接, 如何通信\n- 应用层协议: [[permanent/邮件系统协议简述|邮件协议]], HTTP, FTP, SSH, DNS等\n- 应用层有两种连接模式\n    - Client/Server 模式\n    - P2P(point2point) 模式\n\n#### 传输层\n- 解决问题: 两个不同终端上的进程如远程通信\n- 通常通过对进程绑定端口转化为两个端口的通信\n- 传输层协议: TCP, UDP\n\n#### 网络层\n- 解决问题: 将数据包(IP Datagram, 数据报)*通过最优线路*传输给已知 IP 地址的终端(路由)\n- 网络层协议: IPv4, IPv6\n\n#### 数据链路层\n- 解决问题: 数据帧 frame 的在节点 node(路由,终端)之间的无差错传输\n- 连接节点的不是 WAN 就是 LAN\n- WAN 技术包括:\n    - 拨号上网\n    - 有线电视网络\n    - 手机网络\n    - 卫星网络\n- LAN 技术包括:\n    - 有线 LAN\n    - WLAN\n    - Bluetooth\n\n##### 调制解调器\n把数字信号调制成模拟信号, 把模拟信号解调成数字信号\n\n#### 物理层\n- 解决问题: 位的传输(转换成用于传输的电磁信号)\n- 模拟数据 analog data 和数字数据 digital data 及转换\n\n[[permanent/物理层传输介质#物理层的传输介质分类|物理层的传输介质分类]]","lastmodified":"2023-06-16T20:07:13.7882198+02:00","tags":["计网"]},"/permanent/TODO":{"title":"TODO","content":"\n顺便是个 Dataview 示范\n\n```dataview\nTASK \nWHERE !completed \nGROUP BY file.link \n```\n\n","lastmodified":"2023-06-16T20:08:00.5801995+02:00","tags":[]},"/permanent/TTPTasticsTechniques-and-Procedures":{"title":"TTP(Tastics,Techniques and Procedures)","content":"\n#### TTP\n- Tastics, Techniques, Procedures\n- patterns of activities or methods of attackers(a special threat actor or a group of threat actors)\n- 描述网络攻击的模板\n\n\n##### Tactics ![[Pasted image 20230113210758.png|inlR|400]]\n攻击者的目的, 策略\n##### Techniques\n使用的攻击技术\n##### Procedures\n具体是怎么实施的\n\n\n#### TTP 具体实例\n原文(德语): [美军攻击僵尸网络](https://www.golem.de/news/trickbot-us-militaer-greift-botnetzwerk-an-2010-151452.html)\n\n译文:\n\u003e自9月底以来，美国军方一直在开展针对恶意软件和最大僵尸网络之一Trickbot的行动。据说有几次攻击剥夺了该网络的机器人，并在其控制服务器的数据库中填入不存在的机器人。\n  根据《华盛顿邮报》的报道，该行动**旨在保护11月的美国总统选举免受攻击。恶意软件Trickbot以被感染系统的访问和银行数据为目标，随后对被感染的系统进行加密，并伴随着赎金要求。**\n  据报道，美国国土安全部官员担心，这种来自各州选民登记办公室和相关系统的攻击可能会扰乱11月3日美国总统选举的准备工作，或在选举日本身造成混乱或排长队。然而，他们说，勒索软件也被视为选举之后的一个主要威胁。\n  同时，美国军方网络司令部的攻击并不打算永久地拆除僵尸网络。华盛顿邮报》援引四名美国官员的话写道：\"相反，它们的目的是让Trickbot背后的讲俄语的团体分心并忙碌一段时间。网络司令部将这一战略称为 \"持续接触\"，即通过让对手团体忙于工作而对其施加累积成本。\n  Konfigurationsdateien ausgetauscht交换的配置文件\n  据记者布莱恩-克雷布斯（Brian Krebs）称，在攻击期间，新的配置文件被强加给了机器人。这些包含了僵尸网络命令和控制服务器的新**IP地址：127.0.0.1**。这不再是指互联网上的控制服务器，而是指本地计算机本身。**连接被切断**。同时，**指挥和控制服务器充斥着数百万台新感染的电脑，然而这些电脑都是假的。**\n  然而，Krebs写道，trickbot集团可以依靠恢复机制，通过去中心化的域名系统EmerDNS恢复机器人。在这方面，这些攻击可能会让Trickbot集团忙于工作，他们可能会增加对已经加密的机器的赎金要求，以弥补他们的收入损失。\n  早在7月，Trickbot在测试版本中发挥了问题，对自己发出了警告。7月底，恶意软件Emotet的服务器被黑，通过它传播的恶意软件被毫不客气地替换成GIF动画。Emotet经常搭上Trickbot的便车，例如，它对柏林上诉法院长达数月的故障负责。在那里，Trickbot也收集了访问数据。\n\nTactics:\n削弱 Trickbot 或 \"持续接触\" 防止它操控美国大选\nTechniqus:\n更换配置文件, 把 `127.0.0.1` 作为 C\u0026C 服务器地址(切断连接), 在真正的服务器上注册假bot(增加负载)\nProcedures:\n找到僵尸, 创建新的配置文件, 替换配置文件\n分析 bot 的形态, 创建假bot, 在服务器注册假bot, 自动化部署\n","lastmodified":"2023-06-16T20:09:26.2830259+02:00","tags":[]},"/permanent/TTPTrusted-Third-Party":{"title":"TTP(Trusted Third Party)","content":"\n可信赖的第三方","lastmodified":"2023-06-16T20:09:03.0041252+02:00","tags":[]},"/permanent/Tagsets":{"title":"Tagsets","content":"\n![[attachments/Pasted image 20230202172000.png]]\n\n\n### Universal Dependencies\n\n##### 总览\n![[attachments/Pasted image 20230204180121.png|L|400]]\n![[attachments/Pasted image 20230207205920.png|L|400]]","lastmodified":"2023-06-16T20:06:31.5290199+02:00","tags":["NLP"]},"/permanent/Trunk-based-Workflow":{"title":"Trunk-based Workflow","content":"\n- [ ] 是个啥啊\n- Best Practice for DevOps, continuous software development","lastmodified":"2023-06-16T20:08:28.4779594+02:00","tags":["Git"]},"/permanent/UML-%E5%9B%BE":{"title":"UML 图","content":"\n### UML\n- 在线画图工具: https://www.processon.com/\n- \n\n### 每个图用在什么流程\n| Stage          | Structure | Behavior |\n| -------------- | --------- | -------- |\n| Requirement    | Use-case  | Activity |\n| Analyse        |           | Sequence |\n| Design         | Class     | State, Communication         |\n| Implementation |           |          |\n## Class Diagram\n一个简单说明 [[02-Tutorial-annotated.pdf]]\n![[attachments/Pasted image 20230219103932.png|L|300]]\n\nPlantUML\n```plantuml\n@startuml\nskinparam classAttributeIconSize 0\nclass Gast {\n    -einladenderMitarbeiter\n    +Gast(einladender:Mitarbeiter):Gast\n    +getEinladenderMitarbeiter():Mitarbeier\n}\nGast --|\u003e Person\nGast \"*\" ---\u003e \"1\" Mitarbeiter : lädt ein\n\nclass Gebaeude {\n    -raeume:Set\u003cRaum\u003e\n    addRaum(raum):void\n}\nGebaeude *-- \"*\" Raum\n\nclass Geraet {\n    -name:String\n    +Geraet(name:String):Geraet\n    +getName():String\n}\nclass Mitarbeiter {\n    -mitarbeiterNummer:String\n    +anzahlMitarbeiter:Integer = 0\n    +Mitarbeiter():Mitarbeiter\n    +raumBuchung(raum:Raum):RaumBuchung\n    +getMitNo():String\n}\nMitarbeiter --|\u003e Person\n\n\nabstract class Person {\n    -vorname:String\n    -nachname:String\n    -geburtsdatum:String\n    +Person(vorname:String, nachname:String, geburtsdatum:String):Person\n    +getVorname(): String\n    +getNachname(): String\n    +getGeburtsdatum(): String\n}\n\nclass Raum {\n    -ausstattung:Set\u003cGeraet\u003e\n    -gebaeude:Gebaeude\n    Raum():Raum\n    getGebaeude():Gebaeude\n    +addGeraet(geraet:Geraet):void\n}\nRaum o-- \"0..3\" Geraet\n\nclass RaumBuchung {\n    -mitarbeiter:Mitarbeiter\n    -raum:Raum\n    -buchungsZeitraum:String\n    +Raumbuchung(mitarbeiter, raum, buchungsZeitraum)\n}\n\nMitarbeiter \"*\" -- \"*\" Raum\n(Mitarbeiter, Raum) .. RaumBuchung\n\n@enduml\n```\n\n#### 类\n\n#### 属性/方法\n- + public\n- - private\n- \\# protected\n- (\\_) default\n\n![[attachments/Pasted image 20230219093649.png|400]]\n\n#### Association\nassociation 会指示\n- 关联类型\n- 角色\n- 多边关系\n![[attachments/Pasted image 20230219093347.png|400]]\n\n![[attachments/Pasted image 20230219093410.png|400]]\n\n![[attachments/Pasted image 20230219093154.png|400]]\n- aggregation: 成员没有聚合体还是成员(树没有森林还是树)\n- composition: 部分没有整体就不是部分(玩家没有游戏就不是玩家)\n\n#### 对象图\n某个类的具体对象在 UML 中的表示\n![[attachments/Pasted image 20230219100019.png|L|300]]\n\n## State Diagram\nsrc: Software Entwuf mit UML2 7\n![[attachments/Pasted image 20230219110939.png|L|300]]\n\nPlantUML\n```plantuml\n@startuml\nstate choice1 \u003c\u003cchoice\u003e\u003e\n[*] --\u003e aus\naus --\u003e PasswortAngeben\nPasswortAngeben --\u003e choice1\nchoice1 --\u003e rot: falsch\nrot --\u003e aus :30s\nchoice1 --\u003e TürOffen :richtig\nstate TürOffen {\n    state choice2 \u003c\u003cchoice\u003e\u003e\n    [*] --\u003e sensorActive\n    sensorActive --\u003e choice2\n    choice2 --\u003e [*] : niemand\n    choice2 --\u003e sensorActive : jemand, 10s\n}\nTürOffen --\u003e aus :after 120s\naus --\u003e [*]\n@enduml\n```\n\n#### 基础路线\n![[attachments/Pasted image 20230219094045.png|L|300]]\n\n#### 分支\n\n静态分支: 条件在执行前检查过了\n![[attachments/Pasted image 20230219094313.png|L|300]]\n\n动态分支: \n- 如果还要判断\n- 用空心圆或者菱形\n- Möglichkeit Bedingungsteile\n![[attachments/Pasted image 20230219094425.png|L|300]]\n\n#### 原子状态和持续状态(Activity)\n- atomar\n- andauernd(enter, do, exit)\n![[attachments/Pasted image 20230219095549.png|L|300]]\n\n\n#### Protokollzustandsautomaten\n状态协议机表示了在某一个协议下, 什么操作会发生什么变化\n![[attachments/Pasted image 20230219095618.png|L|400]]\n\n### Hierarchy\n![[attachments/Pasted image 20230219160622.png|L|350]]\n- 一个状态可以有任意多个的子状态\n\n#### Nebenläufige Zustände\n- 并发状态\n- 两个实体(两个图) 可能在某一过程执行时同时改变状态\n![[attachments/Pasted image 20230219095529.png|L|300]]\n\n#### History-State\n- 历史状态存储了在离开上一层状态前所处的最后一个子状态\n- 某个状态被打断的时候, 重新进入应该在哪个点开始\n![[attachments/Pasted image 20230219161027.png|L|400]]\n\n\n## Activity Diagram\nsrc: Software-Entwurf mit UML2 K3\n![[attachments/Pasted image 20230219111916.png|L|300]]\n\n- 参考: https://zhuanlan.zhihu.com/p/149079804\n- 也可以用来建模算法\n\n```plantuml\n@startuml\n(*) --\u003e \"Vorlesung\" \nif \"Prüfung erfordlich\" then \n--\u003e [ja] ==B1==\n    --\u003e \"anmelden\" \n    --\u003e ==B2==\n    \n    ==B1== --\u003e \"Termen erfragen\" \n    --\u003e ==B2==\n    \n    ==B1== --\u003e \"vorbereiten\" \n    --\u003e ==B2==\n    \n    --\u003e [gesund] Klasur\n    --\u003e (*)\nelse \n--\u003e [nein] (*)\n@enduml\n```\n\n#### 活动节点\n\n**普通节点**\n![[attachments/Pasted image 20230219112546.png|L|400]]\n用来表示一个活动\n\n**起始节点/终止节点**\n![[attachments/Pasted image 20230219112620.png|L|200]]\n- 起始节点也可以是实心圆(不是终止那种外面有一圈的)\n\n#### 分支\n\n**条件分支**\n![[attachments/Pasted image 20230219112720.png|L|200]]\n\n**分叉与汇合**\n![[attachments/Pasted image 20230219112819.png|L|300]]\n\n#### 一个建模算法的例子\n- □ 表示某一属性\n![[attachments/Pasted image 20230219113702.png|L|300]]\n\n## Sequence Diagram\n\n![[attachments/Pasted image 20230219114052.png|L|300]]\n\n```plantuml\n@startuml\nactor Actor as act\nparticipant Browser as br\nparticipant SWTTV as tv\nparticipant SWTPay as pay\nparticipant CreditCard as cc\ndatabase Database as db\nact -\u003e br\nbr -\u003e tv: selectVideo\ntv -\u003e db: isVidoeAvailable\ntv \u003c-- db: yes\nbr \u003c-- tv: payForVideo\nbr -\u003e tv: paymentForm\ntv -\u003e pay: initPayment\npay -\u003e cc: authentorize\ncc -\u003e cc: tryAgain\npay \u003c-- cc: yes\ntv \u003c-- pay: paymentSuccess\nbr \u003c-- tv: paymentOk\ntv -\u003e db: getVideo\ntv \u003c-- db: accept\nact \u003c-- br: video\n@enduml\n```\n\n#### 消息的类型\n![[attachments/Pasted image 20230219120547.png|L|500]]\n- 实心箭头(如上)是过程调用\n- 单边箭头 $\\rightharpoonup$ 是异步消息\n\n#### 分支, 循环\n- 这应该是一个大富翁\n- 虚线表示没有时序关系\n![[attachments/Pasted image 20230219115711.png|L|400]]\n\n![[attachments/Pasted image 20230219115828.png|L|400]]\n\n#### 交互范围\n![[attachments/Pasted image 20230219120121.png|L|400]]\n\n#### 时间轴/生命线\n- 时间轴是从上往下的\n- 只关心顺序和同步\n\n## Interaction Diagram\n- 交互图\n- ![[attachments/Pasted image 20230219120949.png|L|300]]\n\n### Communication Diagram\n\n#### 图例\n- character\n- sequence number(可以是变量, 表达式)\n- direction\n- operation\n![[attachments/Pasted image 20230219122332.png|L|400]]\n\n\n## Use-case Diagram\n![[attachments/Pasted image 20230219141737.png|L|300]]\n\n![[attachments/Pasted image 20230219142447.png|L|400]]\n- 用例, 即是外部可见的系统功能\n- 主要由 actor, use-case 组成\n\n#### 关联\n![[attachments/Pasted image 20230219142604.png|L|400]]\n- 泛化: 指通常理解为继承的关系, 子指向父, 如 vip -\u003e guest\n- 包含: 分解的关系\n    - ![[attachments/Pasted image 20230219143106.png|L|350]]\n- 扩展: \n    - ![[attachments/Pasted image 20230219142957.png|L|450]]\n- 依赖 dependency: VS2010中拓展的一种关系, 指向被依赖项\n    - ![[attachments/Pasted image 20230219143333.png|L|300]]\n\n#### 示例\n![[attachments/Pasted image 20230219143423.png|L|400]]","lastmodified":"2023-06-16T20:10:18.9464476+02:00","tags":["开发"]},"/permanent/Ubuntu":{"title":"Ubuntu","content":"\n#### Ubuntu 开放端口\n- https://www.cnblogs.com/kxm87/p/9561054.html\n- 安装\n    在终端输入\n- \u003esudo apt-get install iptables\n- 添加规则\n    在终端输入\n- \u003eiptables -I INPUT -p tcp --dport 80 -j ACCEPT\n- 中间的80为所需要开放的端口\n- 保存规则\n    在终端输入\n- \u003eiptables-save\n- **持久化规则**\n- 这里我们需要在安装一下工具来帮我们实现，这里我们使用 iptables-persistent\n- 安装iptables-persistent\n- \u003esudo apt-get install iptables-persistent\n- 持久化规则\n- \u003esudo netfilter-persistent save\n  sudo netfilter-persistent reload","lastmodified":"2023-06-16T20:09:57.5651296+02:00","tags":[]},"/permanent/Unicode":{"title":"Unicode","content":"\n字符编码\n- [ ] 你倒是写点什么啊","lastmodified":"2023-06-16T20:11:00.9134864+02:00","tags":["协议"]},"/permanent/VIM":{"title":"VIM","content":"\n### VIM 使用\n\n### VIM 设置\n\n[[permanent/VIM 界面设置|VIM 界面设置]]\n\n\n### VIM 在其他地方\n\n[[permanent/小鹤音形和 Obsidian vim 的适性|小鹤音形和 Obsidian vim 的适性]]","lastmodified":"2023-06-16T20:12:33.9447233+02:00","tags":["工具使用"]},"/permanent/VIM-%E7%95%8C%E9%9D%A2%E8%AE%BE%E7%BD%AE":{"title":"VIM 界面设置","content":"\n\n#### 颜色\n\u003eset guifont=consolas:h16\n\n\u003ecolorscheme molokai\n\u003eset termguicolors\n\n下载的配色文件放在vim90/colors\n第二句是真彩色\n\n\n#### 备份文件\n\u003eset undodir=$TEMP\\\\vimfiles\\\\undo_temp\n\u003eset backupdir=$TEMP\\\\vimfiles\\\\backup_temp\n\n备份文件地址, 必须是已经存在的文件夹\n可以用环境变量\n\n#### 窗口\n\u003eset lines=35 columns=118\n\n其中lines是窗口显示的行数，columns是窗口显示的列数，大家根据自己的习惯可以调整这两个数字的大小。\n\n\u003ewinpos 300 0\n\n后面两个参数指的自屏幕左上角像素值参考位置\n\n#### tab\n\u003e set tabstop/softtabstop=4\n\u003e set expandtab\n\nhttps://blog.csdn.net/shell_picker/article/details/6033023\n\n","lastmodified":"2023-06-16T20:11:41.9440947+02:00","tags":[]},"/permanent/Version-Controll-SystemVCS":{"title":"Version Controll System(VCS)","content":"\nSubversion(SVN), 集中式版本控制\nCVS, 并发式管理控制\n[[permanent/Git|Git]], Mercurial, 去中心化版本控制\n\n#### VCS 的任务\n- 提供团队的共同数据存储\n- 分工的可能性\n- 跟踪开发历史\n- 创建一致的, 可操作的软件版本\n- Release 发布管理\n\n#### 准备使用 VCS\n1. 选择和部署版本控制系统\n2. 定义存储方案, 即文件夹结构, 命名管理和存储文件格式的规范\n3. 定义工作流程, 包括 checkout 和 commit, 评论的规则, 以及创建分支或将分支整合到主线的程序","lastmodified":"2023-06-16T20:11:25.0447342+02:00","tags":[]},"/permanent/WIN-%E6%B8%85%E7%90%86%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95":{"title":"WIN 清理右键菜单","content":"\n```C\n// 选中文件夹时\nreg delete HKEY_CLASSES_ROOT\\Directory\\shellex\\ContextMenuHandlers\\xxx /f\n// 选中非文件夹时\nreg delete HKEY_CLASSES_ROOT\\*\\shellex\\ContextMenuHandlers\\xxx /f\npause\n```\n\n","lastmodified":"2023-06-14T23:32:26.9700166+02:00","tags":["WIN"]},"/permanent/WIN11-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E9%A3%8E%E6%A0%BC%E6%81%A2%E5%A4%8D":{"title":"WIN11 右键菜单风格恢复","content":"\n#### 一个简单的 File Explorer 系恢复\n\n1）切换回经典右键菜单\n\n\u003e _reg add \"HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32\" /f /ve_\n\n2）恢复到新版右键菜单\n\n\u003e _reg delete \"HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" /f_\n\n重启文件管理器生效(重启电脑也可)\n\n\n#### (推荐) Explorer Patcher\n可以修改 File Explorer, Start Menu, Taskbar 等等的系统风格\n项目:https://github.com/valinet/ExplorerPatcher\n\n直接下载文件: (22.09.28)\nhttps://github.com/valinet/ExplorerPatcher/releases/tag/22622.450.50.2_5de2eb0\n\n双击exe安装, 安装后自动重启 File Explorer, `右键任务栏-属性` 修改样式","lastmodified":"2023-06-14T23:31:42.5724503+02:00","tags":["WIN"]},"/permanent/Web-%E5%BC%80%E5%8F%91":{"title":"Web 开发","content":"\n[[permanent/js调用mermaid|js调用mermaid]]","lastmodified":"2023-06-16T20:12:44.9647065+02:00","tags":[]},"/permanent/WiFi-%E6%8A%80%E6%9C%AF":{"title":"WiFi 技术","content":"\nWiFi 的 5G 指的是 Hz, 与手机的代数 **G**eneration 区分\n\n\n#### 第一代\n802.11a\n\n#### 第四代 \n802.11n\n同时运行在 2.4GHz 和 5GHz\n\n#### 第五代\n802.11ac\n真5G\n穿透性更差, 抗干扰能力更强\n\n#### WiFi IEEE 802.11 标准\n![[attachments/Pasted image 20230225195947.png|L|500]]\n\n关联: [[permanent/IEEE 802.1X|IEEE 802.1X]] (局域网部分)","lastmodified":"2023-06-16T20:13:25.0522427+02:00","tags":["计网"]},"/permanent/Windows-%E6%B3%A8%E5%86%8C%E8%A1%A8%E6%94%B9%E9%94%AE%E6%89%AB%E6%8F%8F%E7%A0%81%E6%98%A0%E5%B0%84":{"title":"Windows 注册表改键(扫描码映射)","content":"\n- 优点: 直接有效\n- 缺点: 不能发送组合键, 需要重启生效\n\n\n```text\n1.\n计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout\n2.\n新建一个叫\"Scancode Map\"的二进制文件 \n```\n二进制文件内容: (小端序)\n1. 开头 2Byte 全 00\n2. 第三个 Byte = 涉及的键数量+1\n3. 第四 Byte 开始, 每组都是 (目标键码 原键码)\n4. 结尾 1Byte 00\n\n然后重启\n\n这是个大端序的键码表\n![[Pasted image 20221018230729.png]]\n\n\n组合触发无法通过注册表修改, 参见[AutoHotkey](https://wyagd001.github.io/zh-cn/docs/misc/Remap.htm)","lastmodified":"2023-06-14T23:31:56.3539783+02:00","tags":["WIN"]},"/permanent/XSS":{"title":"XSS","content":"\n#### XSS\nCross Site Scripting\n让软件执行恶意代码\n\n典型的XSS目标\n- 将敏感数据，如cookies，传输给攻击者。 \n- Mallet可以用这个来冒充Bob（身份盗窃，冒充攻击)\n\nDangerous HTML element attributes: `innerHTML, src, onLoad, onClick, etc...`\n\nDangerous functions: `eval, setTimeout, setInterval`\n\n##### DOM XSS\n- 没有网络服务器参与\n- 在可以输入的地方都可以尝试输入恶意代码, 攻击者自己触发\n- JS 不检查传入的参数(或者被绕过了)\n\n```html\nhttp://www.example.com/index.html?username=\u003cscript\u003ealert(“XSS-Problem!“)\u003c/script\u003e\n```\n\n##### Reflected XSS\n在受害者做出某种行为是被触发, 例如点了这个链接\n```html\nhttp://suchmaschine.example.com/?suchbegriff=\u003cscript type=\"text/ javascript\"\u003ealert(\"Alice, Du hast ein XSS-Problem!\")\u003c/script\u003e\n```\n\n##### Persistent(stored) XSS\n恶意代码由网络服务器存储，并随着每个请求传递。\n例如留言板里的恶意留言:\n```html\nNice Website! \u003cscript type=\"text/javascript\"\u003ealert(\"But with XSS problem!\")\u003c/script\u003e\n```\n\n#### XSS 对策\n##### Input Validating\n按照过滤规则验证，转写，清理\n- 来自用户的输入(用字符白名单)\n- 数据库内容\n输出前验证内容\n\n##### 内容安全策略(CSP)\n- HTTP header 扩展，如：\n```html\nContent-Security-Policy: default-src: 'self'; script-src: 'self’ security.lmu.de\n```\n- 可信源加入白名单\n- 禁止 inline JS, 使用 NoScript 等插件\n\n\n##### HTTPonly\n- 额外的 Cookie Flag\n```html\nSet-Cookie: \u003cname\u003e=\u003cvalue\u003e[; \u003cMax-Age\u003e=\u003cage\u003e] [; expires=\u003cdate\u003e][; domain=\u003cdomain_name\u003e] [; path=\u003csome_path\u003e][; secure][; HttpOnly]\n```\n- 需要浏览器支持\n- 禁止基于脚本的 Cookie 访问\n\n\n##### Parameterized Statements\nsoftware best practice\n用参数的方式替代字符串 concat\n用来预防:\n- SQL 注入\n- Command Injection","lastmodified":"2023-06-16T20:13:37.4370788+02:00","tags":["网安"]},"/permanent/bat-%E5%88%9B%E5%BB%BA%E9%98%B2%E7%81%AB%E5%A2%99%E5%85%A5%E7%AB%99%E8%A7%84%E5%88%99":{"title":"bat 创建防火墙入站规则","content":"\n[教程来源](https://blog.csdn.net/m0_43605481/article/details/125772820)\n\n```bat\n@echo off\nnetsh advfirewall firewall show rule name=rdp4413 \u003enul\necho ...检查规则是否存在\nif not ERRORLEVEL 1 (\n\techo ...同名规则已存在, 按任意键继续, 否则请关闭脚本\n\tpause\n\tnetsh advfirewall firewall delete rule name=rdp4413 \u003enul\n\techo ...删除原有规则\n)\necho ...创建新规则\nnetsh advfirewall firewall add rule name=rdp4413 dir=in action=allow protocol=TCP localport=4413\necho ...创建完成\npause\n```","lastmodified":"2023-06-16T19:14:16.5791362+02:00","tags":["工具使用","WIN"]},"/permanent/chrome%E5%A4%8D%E5%88%B6%E5%90%84%E7%A7%8D%E9%93%BE%E6%8E%A5%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF":{"title":"chrome复制各种链接到剪贴板","content":"\n这个 chrome 插件很好用:\n复制链接到剪贴板\n\n下面是自带的各种格式的演示\n\n##### HTML(text/plain)\n\u003ca href=\"chrome://extensions/\"\u003e扩展程序\u003c/a\u003e\n```html\n\u003ca href=\"chrome://extensions/\"\u003e扩展程序\u003c/a\u003e\n```\n\n##### Markdown\n[扩展程序](chrome://extensions/)\n```markdown\n[扩展程序](chrome://extensions/)\n```\n\n##### BBCode(text)\n[url=chrome://extensions/]扩展程序[/url]\n\n\n##### BBCode(url)\n[url]chrome://extensions/[/url]\n\n##### Textfile\n\"扩展程序\":chrome://extensions/\n\n##### AsciiDoc\nlink:chrome://extensions/[扩展程序]\n\n##### MediaWiki\n[chrome://extensions/ 扩展程序]\n\n##### Jira\n[扩展程序|chrome://extensions/]\n\n##### reStructuredText\n```\n`扩展程序 \u003cchrome://extensions/\u003e`_\n```\n\n##### LaTeX\n```LaTeX\n\\href{chrome://extensions/}{扩展程序}\n```\n\n","lastmodified":"2023-06-15T17:17:45.5938685+02:00","tags":["工具使用"]},"/permanent/dig":{"title":"dig","content":"\ndig  Domain Information Groper 域信息搜索器\n\n## 安装\n[下载地址](https://www.isc.org/download/) 可能需翻墙\nwin 最高支持到 9.16.30 [下载地址](https://downloads.isc.org/isc/bind9/9.16.30/BIND9.16.30.x64.zip)\n\n## 命令\n\n#### spamlist 查询 \n\u003e dig +short 2.0.0.127.zen.spamhaus.org\n127.0.0.4\n127.0.0.10\n127.0.0.2\n\n回复 127.0.0.0/24 表明 IP 在 Blocklist\n\n","lastmodified":"2023-06-16T19:26:42.8760868+02:00","tags":["工具使用","安全"]},"/permanent/js%E8%B0%83%E7%94%A8mermaid":{"title":"js调用mermaid","content":"\nhttps://mermaid-js.github.io/mermaid/#/n00b-gettingStarted","lastmodified":"2023-06-16T19:40:38.3811343+02:00","tags":["todo"]},"/permanent/lmu-IT-Security":{"title":"lmu - IT Security","content":"\n\n## Einleitung\n\n[[permanent/1988 Internet Wurm]]\n[[permanent/2003 SQL Slammer]]\n[[permanent/2009~ Stuxnet]]\n[[permanent/蠕虫和蓝宝石的对比]]\n\n[[permanent/C2 C\u0026C]]\n\n[[permanent/TTP(Tastics,Techniques and Procedures)#TTP]]\n\n\n### Zutrittkonstroll\n\nVerfahrensschritten:\n1. **Authentisierung**, 提供 Attribute 的真实证明\n2. **Authentifizierung**, 证明的检查\n3. **Autorisierung**, Attribute 是否有足够获取所要求的权利. Vergabe / Spezifikation von Berechtigungen\n\nHilfsmittel\n- Personenvereinzelung 人员分离\n- Lesegeräte für Ausweise\n\n## Grundlagen\n[[permanent/2020 SolarWinds]]\n[[permanent/Bell LaPadula 模型]]\n\n### Goals of IT Security\n- **C**onfidentiality\n- **I**ntegrity\n- **A**vailability\n\n\n#### Confidentiality\n**Vertraulichkeit** ist gewährleistet, wenn geschützt Daten nur von Berechtigten genutzt werden können.\n\nbezüglich:\nTransport/Speicherung/Verarbeitung von Datn\n\nMaßnahme:\nVerschlüsselung, ...\n\nverletzt:\ngeschützte Daten von unautorisierten Subjekten eingesehen werden können\n\n#### Integrity\n**Integrität** ist gewährleistet, wenn geschützt Daten nicht unautorisiert und unbemerkt modifiziert werden können.\n受保护的数据不能在未经授权和不被注意的情况下被修改\nIntegre IT-Dienste haben keine (versteckte) Schadfunktionalität.\n\nbezüglich:\nTransport/Speicherung/Verarbeitung von Datn\n\nMaßnahme:\nKryptographische Prüfsummen\n\nverletzt:\ngeschützte Daten von unautorisierten Subjekten unbemerkt verändert werden können\n\ne.g. 中间人攻击, 邮件篡改\n\n#### Availability\nVerfügbarkeit ist gewährleistet, wenn autorisierter Subjekte störungsfrei ihre Berechtigungen wahrnehmen könnon.\n\nbezieht sich:\nnicht nur Daten, sondern auch Dienste und IT-Infrastrukturen\n\ntypische Maßnahme:\nRedundanz(e.g. Backup), Overprovisioning(e.g. mehr als genug Server)\n\nverletzt:\nwenn ein Angreifer die Dienst- und Datennutzung durch legitime Anwender einschränkt.\n\ne.g DDoS, \n\n\n#### Verbindlichkeit*\n(german literature, top-level)\n- Authentizität\n- Beherrschebarkeit\n- Revisionsfähigkeit\n\n#### Authentizität*\n- Eigenschaft der Echtheit, Überprüfbarkeit und Vertrauenswürdigkeit -\u003e Auhentifikation des Datenursprungs\n- Digital signature\n\n### Systematik zur Einordnung von Sicherheitsmaßnahmen 系统分类\n\nzwei Dimensionen:\n- **Lebenszyklus** potentialle erfolgreicher Angriffe\n- zwischen tech. und organ.\n\n![[attachments/Pasted image 20221103205238.png]]\n\n\n#### Lebenzyklus\n\n##### Prävention\nDie Kombination aller in einem Szenario eingesetzten präventiven Maßnahmen dient der Erhaltung von CIS\n\n##### Detektion\ndient dem Erkennen von unwünschten Sicherheitsereignissen\n\n##### Reaktion\ndient der Wiederherstellung des Soll-Zustands\n\n\n#### Maßnamenauswahl \n- szenarienspezifisch\n- Risikogetriebenes Vorgehensmodell\n\nfrage:\n- welche? wann? \n- lohnt sich der?\n\n#### ISO/IEC 27000/27001\nidea ISO/IEC27000: 信息安全管理的质量衡量标准\n\n- Standards, Richtlinien, Prozesse, Verfahren und Maßnahmen, die dazu dienen,\n- IS in einer Organisation dauerhaft zu\n\t- definieren/plan\n\t- steuern\n\t- aufrecht zu erhalten/do\n\t- zu kontrollieren/check\n\t- kontinuierlich zu verbessern/act\n\n\n##### ISMS\n致力达成信息安全的以下目标的系统\n\t- 建立\n\t- 实施\n\t- 运营\n\t- 监管\n\t- 检查\n\t- 维护\n\t- 改进\n\n##### Leitlinie\n最高准则 Oberste Richtlinie, 规定 ISMS 的总体目标和所包含的 Richtlinie\n\n##### Richtlinie\n包含该组织的强制性规范 verpflichtende Vorgabe\n\n##### Asset\n属于该机构的有价值的东西\n\n##### Risiko\n可能导致异常状态或威胁安全目标的事件\n\n##### Prozess\n将输入转化为输出的相互作用的活动的总和 Sammlung\n\n##### Verfahren\n描述包括 organ. 和 tech. 的活动的 Ablauf\n\nISO/IEC 27001标准规定了所谓信息安全管理系统（ISMS）的最低要求。\nInformation Security Management Systems\nPDCA, plan, do, check, act\n\n##### DIN ISO/IEC 27001\n2008~ auch DIN ISO/IEC 27001\n- 基于 PDCA 设计, 实施, 监管, 改进 ISMS\n- Risikomanagement, Dokumentation und Aufgabenverteilung 的最低要求\n- control objectives/ controls\n\n![[attachments/Pasted image 20221103213352.png]]\n![[attachments/Pasted image 20221103213404.png]]\n\n\n#### Grundlagen des Risikomanagements\n- Risikoanalyse\n- Risikobewertung\n\t- Eintrittswahrscheinlichkeit\n\t- Auswirkung/Schadenshöhe\n- Risikobehandlung\n\t- Verminderung/Reduzierung(Ergrifen von Maßnahmen)\n\t- Vermeidung(Unterlassen risikobehafteter Aktivitäten))\n\t- Transfer/Teilen(Versicherung)\n![[attachments/Pasted image 20221103213701.png]]\n\n\n#### 审查的类型(check/review)\n##### internal audits\n由内部的独立人员审查, 确定合规性, 目标的实现, 措施的有效性\n##### external audits\n有外部独立组织审查\n##### management review\n高层管理人员审查报告\n\n### Security \u0026 Safety\n\n##### Security\n- Zugangskontrollen\n- Verschlüsselung\n\n##### Safety\n更多是物理性的\n- Glatteiwarnung 黑冰警告\n- Brandmeldeanlage 火灾警报系统\n\n\n\n## Technische Schwachstellen und Angriffe\n\n[[permanent/网络安全界张三]]\n[[permanent/Security Code Review 101]]\n\n### Technische Angriffsvarianten\n\n#### Angriffsarten\n- Auswirkung auf (C/I/A)\n- Eigenschaft\n\t- Ziel\n\t- active?passive?\n\t- direct?\n- trivial/aufwendig\n\n#### DOS, DDOS\n![[attachments/permanent/DOS, DDOS]]\n\n\n### Schadsoftware 恶意软件\nViren, Würmer, Trojanische Pferde\n\n#### 病毒 Virus\nde. Viren\n指令序列, 需要寄主程序(Wirtsprogramm), 无法自己运行\nSelbstreplikation: 自我复制, 自行感染其他程序\n\n##### 病毒的结构\n![[attachments/Pasted image 20221112144606.png|700x300]]\n\n\n##### 病毒的感染\n- 在程序末尾添加病毒代码\n- 将 OEP 修改为 病毒代码的开始点\n- 病毒代码的结束 RET 到程序原本的入口点\n\n\n#### 蠕虫 Worm\n不需要寄主程序的有害程序\n![[attachments/permanent/蠕虫#蠕虫]]\n\n![[attachments/permanent/蠕虫#蠕虫的扫描方式]]\n\n![[attachments/permanent/蠕虫#Warhol Worm]]\n\n#### 特洛伊木马\n实际功能与应有功能不一致的程序, 隐藏有恶意程序\n\ne.g. [[permanent/Staatstrojaner]]\n\n#### Backdoor 后门\n攻击者可以随时控制被安装后门的系统\n\n#### Mobile Code\n在远程计算机上生成, 并嵌入到如网页, 邮件或文件中, 在 Client 本地执行\n\n#### 对恶意软件的保护和应对措施\nde. Schutz- und Gegenmaßnahmen\n\n- 反病毒软件, 不要安装未知来源的软件\n- 定期备份\n- 禁用宏, 或者用沙盒运行\n\n服务器端:\n- 包括上面的\n- 添加 Integrity-Checker(Host Intrusion Detection System)\n- 谨慎授权写入 ([[permanent/信息安全的原则#Need-to-know 原则|Need-to-Know Prinzip]])\n- 疫苗: 病毒签名黑名单\n\n\n#### Ransomware\n加密勒索软件 de. Krypto-Erpressungstrojaner\n\n对策:\n- 关闭 445/139 和 3389\n- 备份, 并物理隔断\n- 只打开邮件信任源的附件\n\n复原:\n- 导入备份 Einspielen von Backups\n\n\n#### 关于 NTP 的攻击\n[[permanent/NTP 协议#关于 NTP 的攻击]]\n\n#### 反病毒手段的分类\n\n##### Signaturbasierte Erkennung\n- 根据病毒数据库来检测是否有发现已知的病毒(通过Opcodes)\n- 优点: 低 FP; 稳定测出已知病毒\n- 确定: 只能检测已知病毒；需要频繁更新\n\n##### Heuristische/Anomalie-basierte Erkennung\n- 监视系统运行, 检测异常状况, 发现异常时警报\n- 优点: 能检测出最新的威胁\n- 缺点: 可能会有高 FP\n\n##### Emulations-basierte Erkennung\n- 沙箱运行并观察代码\n- 优点: 能检测出最新的威胁；受保护的系统与可能的病毒隔离\n- 缺点: 病毒很容易发现是虚拟机并隐藏自己；高资源消耗\n\n#### 病毒的对抗手段(过杀)\n你看, 很多都是对抗病毒数据库的\n\n##### Garbage instructions\n- e.g. NOP\n- 没有实际用处, 但会增加大小 -\u003e 对抗 signatur-basierter Detektion\n\n##### Instruction reordering\n- 对抗 signatur-basierter Detektion\n- 随机改变指令的顺序, 通过 label 和 跳转指令 来保证运行\n- 改变 Opcode\n\n##### Interchangeable instructions\n- 以不同的代码实现同样的功能(变形病毒)\n- 改变 Opcode\n\n###### 变形病毒 Metamorphic Virus\n变形病毒是一种可以凭借转换、编辑和重写自身代码的能力变换形态的病毒。\n\n\n### E-Mail Security(spam)\n\n##### SPAM\nunsolicited commercial emails, UCE\nunerwünschte Werbemails\n\n##### Phishing\n钓鱼页面, 通过模仿正规网站的页面, 让人误以为在正规网站中输入信息\n\n#### Spamfilter (常规防御措施)\n分类:\n- blacklist/whitelist\n- rergelbasiert\n- Filtersoftware lernt aus Beispielen\n\n\\+ 易实现\n\\- 需长期维护\n\\- 依赖于神经训练或模型\n\\- FP(HAM误认为是SPAM)的必须极少\n\n##### Greylist\n收到陌生(发件人,邮箱地址,收件人)的邮件时, 第一次拒绝并给出提示过段时间再次尝试(并将该陌生元组加入已知列表)\n收到已知列表的测通过\n\n#### SPAM 过滤手段\n\n##### DNS-basierte Blacklist\n- 问一下 DNS, 这个邮件的发送地址在不在 Spamlist 上\n- [[permanent/dig#spamlist 查询]](dig +short 2.0.0.127.zen.spamhaus.org)\n\n##### RHSBL Right Hand Side Blacklists\n- DNS Blacklist 的变种, 检查邮件地址的域名部分(@domain.name)\n- 比 URI DNSBL 效果差一点, 因为 SPAM 可以伪造发送地址\n\n##### Naive Bayes Classification\n- 首先是大数据, 邮件如果含有某关键字, 有多大可能是 SPAM\n- 分析收入邮件的全部 token, 通过 简单贝叶斯 计算邮件是 SPAM 的概率\n- 需要额外处理\n\n### Systemnahe Angriffe\n\n#### Buffer Overflows\n![[attachments/permanent/Buffer Overflows#Buffer Overflows]]\n\n![[attachments/permanent/Buffer Overflows#stack smashing]]\n\n![[attachments/permanent/Buffer Overflows#防御措施]]\n\n![[attachments/permanent/Buffer Overflows#其他方式]]\n\n\n#### Account/Password Cracking\n也就是破解用户名和口令\n- Brute Force\n- 字典攻击 Dictionary Attack\n- Social Engineering\n- 撞哈希/破解加密算法\n- 撞库\n\n字典攻击的对抗方式: 加盐\n![[attachments/permanent/加盐#加盐]]\n\n\n#### Back Door, Trap Door\n目的: 留通道和留权限\n- 隐藏 SUID/SGID\n- 隐藏的联网服务, 会在特定时间在特定端口打开任务行\n- `.rhosts`(root)或`authorized_keys`(ssh)文件里留痕迹\n\n#### Rootkits\n![[attachments/Rootkit#Rootkit 的历史和典型案例]]\n\n![[attachments/Rootkit#User-Mode/Kernel-Mode Rootkit]]\n\n![[attachments/Rootkit#Rootkit 的反取证措施]]\n\n#### Adobe Flash\nFlash 已于 2020 年末结束服务\n\n##### 事件: Einfallstor Adobe Flash\n起因经过\n- RSA Security公司除其他外，还生产在全球广泛使用的认证令牌（RSA SecurID）。 \n- 针对RSA员工的鱼叉式网络钓鱼攻击：Excel附件 \"2011 Recruitment Plan.xls\"，估计是用Excel 2007打开。 \n- 嵌入式SWF文件利用了Adobe Flash Player的漏洞。 \n- 恶意代码（对 \"poison ivy \"的修改）监视员工的计算机，并将密码传送给攻击者，以及其他事项。 \n后果\n- SecurID的来源和种子被刺探出来了\n- 美国国防公司洛克希德-马丁公司（Lockheed Martin）被黑客使用 \"仿冒的 \"SecurID令牌；其他许多公司也受到影响。 \n- 约有4000万个SecurID代币被交换\n\n\n\n### Web 攻击\n\n#### XSS\n![[attachments/XSS#XSS]]\n\n![[attachments/XSS#XSS 对策]]\n\n\n事件: Angriff auf Issue Tracking System von Apache(见 Script Kapital 3)\n\n#### SQL 注入\nemm, 没讲什么, 就是你知道那个\n\n#### Access Token Manipulation\n![[attachments/permanent/Access Token Manipulation#Access Token Manipulation]]\n\n![[attachments/permanent/Access Token Manipulation#Access Token Manipulation 分类]]\n\n![[attachments/permanent/Access Token Manipulation#防御措施]]\n\n#### CSRF\n![[attachments/permanent/CSRF#CSRF]]\n\n![[attachments/permanent/CSRF#CSRF 攻击流程]]\n\n### 基于网络的攻击\n\n#### Sniffing 嗅探\n监视网络流量\n\n**LAN**\n(Wireless) Local Area Network\n- 无线使用以太网而不是交换机\n- 原则上, 网卡(Netzwerk-Karten) 可以监听所有流量, 但网卡只传递给计算机的数据包 -\u003e 在 Promiscuous Mode 下会将所有数据包都交给 OS 执行\n\n**WAN**\nWide Area Network\n- 每台交换计算机都可以读取信息(如路由器的镜像端口 Mirror Port)\n- 线路窃听 Anzapfen\n\n#### Port Scanning 端口扫描\n寻找远端计算机上开放的端口, 试图建立连接\n- e.g. nmap\n- 有针对性地搜索具有已知弱点的服务端口\n- 端口扫描常被视为攻击, 因为是隐密进行的\n\n### Schwachstellenbewertung\n- 漏洞评估 Vulnerability Assessment\n- 目标: 确定优先级\n- 涉及开发者和运维者两个角色\n- 量化评估 (缺点: 客观性, 统一性)\n\n#### CVSS\n![[attachments/permanent/CVSS#CVSS]]\n\n![[attachments/permanent/CVSS#CVSS 三组指标]]\n\n![[attachments/permanent/CVSS#CVSS Calculator]]\n![[attachments/permanent/CVSS#CVSS 示例]]\n\n#### Zero Day Exploits\n0day 漏洞指的是漏洞发现的当天, 相关的恶意程序就已出现并对漏洞进行攻击, 还没有相关报告评估和防御措施\n\n---\n\n### Endpoint Security\n= Endpoint Protection System\n\n#### Endpoint Security 的组成\n- 中央管理\n\t- Server/Client Model\n\t- Reports \u0026 Alerts\n\t- 本地网络知识共享\n- 连接 [[permanent/SIEM]] 系统\n- 外设(Peripheral devices)安全策略(USB-mouse:yes, USB-stick:no)\n- 高级永久线程检测\n- 反病毒, 反恶意软件\n- Data loss \u0026 leak Prevention\n- Host Intrusion Prevention\n- lokal/personal firewall\n- White- \u0026 Blacklists (软件或网页)\n- Logging \u0026 Monitoring\n- Deployment of patches\n\n#### Endpoint Security 和 Antivirus 的区别\n- 包含关系, A \u003c ES\n- 目标是整个网络和终端的保护,\n- 终端设备的安全管理(monitoring, patching, local knowledge sharing)\n\n#### EPP, EDR, XDR\n![[attachments/permanent/EPP, EDR, XDR#EPP, EDR, XDR]]\n\n![[attachments/permanent/EPP, EDR, XDR#EDR]]\n\n![[attachments/permanent/EPP, EDR, XDR#XDR]]\n\n### SIEM\n- 简介\n- 目标\n- 优缺点\n- 困难\n- 信息源\n- 与 IDS/IPS 系统的区别\n\n![[attachments/permanent/SIEM#SIEM]]\n\n![[attachments/permanent/SIEM#SIEM 的目标]]\n\n![[attachments/permanent/SIEM#SIEM 的优点/缺点]]\n\n![[attachments/permanent/SIEM#SIEM 的困难]]\n\n![[attachments/permanent/SIEM#SIEM 的信息源]]\n\n![[attachments/permanent/SIEM#SIEM 与 IDS/IPS 的区别]]\n\n### TTP\n![[attachments/TTP(Tastics,Techniques and Procedures)#TTP]]\n\n[[permanent/TTP(Tastics,Techniques and Procedures)#TTP 具体实例]]\n\n### MITRE ATT\u0026CK\n![[attachments/MITRE ATT\u0026CK#MITRE ATT\u0026CK]]\n\n\n### 案例: 在外网部署加密矿机\n![[attachments/Pasted image 20230114002200.png]]\n\n\n## Social Engineering\n\n### 社会工程学界定\n相对于技术性的攻击, 社会工程学针对的不是技术系统而是其用户.\n- 利用人的特征或感受上的弱点, 例如恐惧(威胁), 好奇/贪婪(钓鱼)\n\n谈到安全, 人们总是注重技术而忽略了人为因素\n\n### 攻击者角度\n\n#### 社会工程学的分类\n\n**根本分类: 主动 vs. 被动**\n\n##### 主动攻击\n- pretexting 伪装(假冒身份骗取信息)\n- phishing 网络钓鱼\n##### 被动攻击(不与受害者互动)\n- 窃听(belauschen)\n- shoulder surfing 偷窥\n- dumpster diving 翻丢弃物\n- baiting 引诱(留下准备好的 U 盘)\n\n**既定类别**\n- Human-based (无技术)\n- Computer-based (有技术)\n- Reverse Social Engineering (受害者协助)\n\n##### Human-based Social Engineering\n- Dumpster Diving\n- Shoulder Surfing\n- Tailgating 尾随(例如在有安全锁的门)\n- Badge Surveilance (自行打印员工凭证)\n- Pretexting 伪装\n- Quid pro quo 交换条件\n- People Watching 看人下菜碟\n- Diversion Theft 分流盗窃/转移盗窃\n\n##### Computer-based Social Engineering\n- [[permanent/Phishing]]\n\t- [[permanent/Phishing#Clone Phishing|Clone Phishing]] (重复真实邮件)\n\t- [[permanent/Phishing#Spear Phishing|Spear Phishing]] (有针对性的)\n\t- [[permanent/Phishing#Whaling|Whaling]] (叉大鱼)\n\t- CEO Fraud (冒名诈骗)\n\t- Vishing (Voice Phishing, 目标: 受害者给攻击者打电话)\n\t- Evil Twins (恶意/流氓 Wifi 接入点)\n- Baiting 利用诱饵\n- Forensic analysis\n- Electronic badges\n\n#### 成功的社会工程师的典型特征 \n能与人很好地沟通 \n- 无害的对话--攻击没有被注意到\n- 掌握了受害者及其环境的技术术语\n- 可靠地获得信任或被定位为权威 \" 是病人的行为者 \n\n假装的人必须显得真实。\n- 年轻人很少能通过大公司的CEO。\n- 任何声称在慕尼黑出生或学习的人都应该理解/说巴伐利亚语或能够描述日常的大学生活。\n- 侦察和建立信任可能需要时间。\n- 灵活性和适应性强，良好的事实记忆\n\n他们对自己不太擅长\n- 垃圾箱潜水不一定好玩。\n- 伪装成清洁人员意味着相应的活动。\n\n#### 一些案例\n\n**Robin Sage**\n伪造的人物获取机密?\n\n**电子生日贺卡**\n两名员工在 FB 上提到老板的生日. 攻击者冒充其中一人发电子贺卡, 实际上是恶意软件钓鱼. 计算机完全受损.\n\n**Emily Williams**\n伪造简历得到录用, 个人社交网页指向电子贺卡, 实际上是恶意软件\n\n**银行员工的 USB**\n20 个装了恶意软件的 USB \"丢失\" 在路上, 15 个被捡走了\n\n#### Kevin Mitnick\n- 书籍: The Art of Deception, 传记: Ghost in the Wires\n- 以前是美国最受欢迎的社会工程师 ! \n- \"最喜欢的武器：电话；经常冒充高级警官！\"。\n- 作为一项运动的黑客攻击: \n\t- 没有金钱上的动机；（大部分）不显眼地从事副业.\n\t- 复制内部文件，电子邮件，源代码，... 只是为了好玩\n- 团队合作和黑客战争: \n\t- 米特尼克经常求助于友好黑客的漏洞和工具\n\t- 竞争和虚假的朋友最终导致了他的被捕\n\n### 使用者角度\n\n#### SE 攻击故事的典型特征\n- 制造紧迫感\n- 制造压力\n- 威胁消极后果\n- 要求绕过程序或例外\n- 要求许多/高权限\n- 非常好奇地询问\n- 使用不必要的专业术语\n- 给予模糊的信息\n- \"好得不能再好\"\n- 语气不寻常\n\n#### 反制措施\n\n\n##### 技术上的...\n\n一些通用的:\n- 按规定办事, 避免例外和捷径\n- 识别不寻常的请求\n- 记录和报告可疑事件\n\nPretexting\n- 适度的不信任和谨慎\n- 结束通话并回电/更换频道\n- 咨询其他人\n\nDumpster Diving\n- 粉碎机\n\nShoulder Surfing\n- 如果你的工作需要, 搞个防窥屏/膜\n\nTailgating\n- 安保措施/隔离系统\n- 记得随手关门\n\nBaiting\n- 限制系统\n\n##### (公司)组织上的\n像所有与IT安全有关的事情一样，这也是一个预算问题： \n- 培训的人员和时间要求 \n- 意识防止损害，但不产生利润 \" 组织的边界条件。\n- 必须确定保护目标和培训重点 \n- 内容、教学和媒体准备需要一个跨学科的团队 \n- 连续性和成功监测 \" 不同方法的结合。\n- 面对面的活动与基于计算机的培训 \n- 海报、传单、通讯、内联网网站、... \n- 鸣谢、参与证书、比赛\n\n### Penetration Test\n渗透测试（一般）即服务：\n- 目标\n\t- 白帽黑客在恶意攻击者得逞之前\n\t- 识别并报告以前未知的安全漏洞\n- 风险\n\t- 并不保证漏洞都被发现\n\t- 测试会增加系统(在正常运行时的)负荷\n- Penetration tester 应具备的专业能力\n\t- OS, DB, 网络协议等\n- 调查内容 \n\t- 内部开发/专用软件 \n\t- IT 服务的组成/配置 \n\t- 物理安全\n- 根据提供的文件（例如源文本）：黑盒与白盒测试\n\n社会工程渗透测试作为对外部各方的命令：\n- 组织内部通常不具备专业知识和常规\n- “新面孔”对攻击很重要与个人接触。 \n- 从“外部攻击者”（不是：“内部攻击者”）的角度关注。\n- 与 Vulnerability Scan (仅能扫描已知漏洞)不同\n\n#### 渗透测试的分类\n![[attachments/Pasted image 20230124185254.png|500]]\n\n#### 渗透测试流程\n1. 计划和目标设定(与客户一起)\n2. 信息获取和侦查\n3. \"场景\" 要执行的攻击的规范\n4. 隐蔽地执行攻击\n5. 结果报告和客户建议\n\n![[attachments/Pasted image 20230124183235.png|500]]\n\n##### Planung/ 1. Vorbereitung\n测试范围的定义\n- 预算, 道德限制, 目标\n- 时间和范围(如仅在白天, 不在某特定日子)\n- 工具选择(电话, 电子邮件, 锁具), 测试方法选择\n合同规定\n- 紧急联系人(比如解除安全警报)\n- 假的凭证, 账号\n- 成功证明\n- 报告方式\n\n##### Informationsakquise\n通过互联网（OSINT）：\n- 组织结构图\n- 年度报告、招聘广告、公司历史和使命宣言 \n- 工作人员姓名及电子邮件地址和电话号码 \n- 当前的项目、产品、新闻发布、客户、服务提供商 \n- 术语（技术术语、缩写......） \n- 在讨论/支持网络论坛上发帖，并附上公司电子邮件地址 \n- 如果适用，工作人员的社交网络资料\n\n现场： \n- 工作人员：典型的着装、工作和休息时间、身份证、通讯/吸烟区、送货/来访者交通、... \n- 建筑物：房间平面图、监控区域（摄像头/保安）、门禁系统、值班和轮班表、功能室（打印机/邮件/服务器室、仓库......）、厕所、纸桶。\n\n##### 2. Informationsbeschaffung\n- 评估已知信息\n- 执行 I-Modul\n- 漏洞研究\n\n##### 3. Risikoanalyse\n- 评估威胁(Bedrohungen)\n- 评估攻击成功的花费\n- 定义优先级(Prioritäten)\n- Systeme/Module einschränken\n\n##### 攻击概念\n\n哪些攻击是有希望的？\n- 界定团队中的角色/责任 \n- 拟定 \"脚本\"/人员描述 \" \n确定顺序和时间表\n\n在与客户的互动中： \n- 已批准选定的方案 \n- 定义终止标准 \n- 检查合同和法律许可 \n- 如有必要，让第三方参与进来（如保安公司、楼房业主)\n\n采购道具/准备材料。\n- 制服\n- 徽章、文件\n\n##### 4. Aktive Eindringversuche\n- 执行 E-Module\n\n##### 执行攻击\n通过电子邮件。发送并等待;-)\n\n通过电话：做笔记，避免当地的干扰\n\n在现场：\n- 通常是团队合作（两个人，一个人当瞭望员）\n- 合理利用等待时间\n\n重要的是：不要做任何你不允许做的事情! ! \n- 遵守法律\n\t- 例如，使用警察制服或伪造官方照片的身份证，几乎在任何地方都是不允许的!\n\t- 每个国家的相关法律可能有所不同 \n- 恪守合同约定\n- 尽可能地坚持计划，但不要超过约定的测试。\n\n##### 5. Abchlussanalyse\n- 收集结果\n- 评价结果\n- 列出风险\n- 协商建议的改进\n- 定制改进计划\n\n##### Berichtswesen\n不太令人兴奋，但对客户来说是最重要的\n\n书面的和/或作为演示/讨论\n结构类似于技术性的五项测试报告\n- 描述方法和场景（攻击计划）\n- 记录执行情况和结果，必要时附上证据\n- 指出行动方案，必要时提出建议\n\n如果可能，不要指责个人\n\n指出遗留问题，例如：\n- 打开但不再上锁的锁，如橱柜上的锁\n- 有贴纸作为存在证据的设备\n- 攻击期间带来的设备（WLAN接入点、键盘记录器...）。\n\n\n### 来吧, 怎样不会被攻击\n认识不足的主要问题:\n“这只会发生在其他人身上。” \n“为什么有人要关心我和我的数据？” \n“反正你也无能为力。”\n\n注意那些要求各种权限的应用\n\n精心设计的社会工程学攻击总是会成功的 :)\n\n## Rechtliche Regelungen\n\n#### 总结\n- 有关IT安全的立法越来越复杂\n\t- 对计算机科学家很重要的基本知识\n\t- 根据活动情况：专业的法律支持是必不可少的\n- 目标部分冲突，例如\n\t- 储存尽可能多的信息，以便能够澄清事件 VS. 数据保护意义上的数据规避\n- 法律与正义。\n\t- 新法律生效前的期限，等待期\n\t- 说客的影响 \" 执行和控制方面的不足\n\t- 法律的确定性与法院的意外裁决\n\n### 问题\nU6\n\n##### Welche Grundsä tze fü r die Verarbeitung personenbezogener Daten schreibt die DSGVO vor\n- Verbot mit Erlaubnisvorbehalt\n- Datenvermeidung und Dartenversparsamkeit\n- Zweikbindung\n- Transparent\n\n##### Was ist eine Verarbeitungstätigkeit und zu was sind Organisationen diesbezüglich verpflichtet?\n- Mit oder ohne Hilfsmittel ausgeführter Vorgang im Zusammenhang mit personenbezogenen Daten  \n- Führen eines Verzeichnisses der Verarbeitungstätigkeiten (VVT) gemäß Art. 30 DSGVO\n\n##### Was ist eine Datenschutzfolgenabschätzung und wann ist sie erforderlich?\n\n##### Passiert eine Datenpanne - was ist dann zu tun? Lassen sich existierende Prozesse in der Organisation hier nutzen?\n\n\n\n### Strafgesetzbuch(StGB)\n\n##### 总览\n- Antragsdelikt: Tat wird nur auf Antrag (Anzeige) i.d.R. durch den „Verletzten“ (§ 77) verfolgt  \n(§ 202a, 202b, 303a, 303b)  \n- Offizialdelikt: Tat wird „von Amts wegen“ (Staatsanwaltschaft) verfolgt (§ 202c\n- § 202a: Ausspähen von Daten 窥视数据\n- § 202b: Abfangen von Daten  拦截数据\n- § 202c: Vorbereiten des Ausspähens und Abfangens von Daten  \n- § 202d: Datenhehlerei  数据盗窃\n- § 205b: Strafantrag  刑事申诉\n- § 303a: Datenveränderung  数据更改\n- § 303b: Computersabotage  破坏计算机的行为\n- § 303c: Strafantrag 刑事申诉\n\n##### § 202a: Ausspähen von Daten 窥视数据\n\u003e (1) Wer unbefugt sich oder einem anderen Zugang zu Daten, die nicht für ihn bestimmt und die gegen unberechtigten Zugang besonders gesichert sind, unter Überwindung der Zugangssicherung verschafft, wird mit Freiheitsstrafe bis zu drei Jahren oder mit Geldstrafe bestraft.  \n\u003e \n\u003e (2) Daten im Sinne des Absatzes 1 sind nur solche, die elektronisch, magnetisch oder sonst nicht unmittelbar wahrnehmbar gespeichert sind oder übermittelt werden.\n\n1) 任何人在未经授权的情况下，让自己或他人访问不是为他或她准备的数据，而且这些 数据被特别保护以防止未经授权的访问。 通过克服访问安全问题。 将被处以三年以下监禁或罚款。\n2) 第1款意义上的数据仅指那些以电子、磁力或其他不可直接感知的方式存储或传输的数据\n\n##### § 202b: Abfangen von Daten  拦截数据\n\u003e Wer unbefugt sich oder einem anderen unter Anwendung von technischen Mitteln nicht für ihn bestimmte Daten (§ 202a Abs. 2) aus einer nichtöffentlichen Datenübermittlung oder aus der elektromagnetischen Abstrahlung einer Datenverarbeitungsanlage verschafft, wird mit Freiheitsstrafe bis zu zwei Jahren oder mit Geldstrafe bestraft, wenn die Tat nicht in anderen Vorschriften mit schwererer Strafe bedroht ist.\n\n- 任何人，通过使用技术手段，未经授权地 (第202a条第2款)从非公开数据传输或从数据处理系统的电磁辐射中获得的信息， 应被处以不超过两年的监禁或罚款。\n- 如果根据其他规定，该罪行不应受到更严厉的惩罚. \n\n\n##### § 202c: Vorbereiten des Ausspähens und Abfangens von Daten(\"Hackerparagraph\")\n\n\u003e (1) Wer eine Straftat nach § 202a oder § 202b vorbereitet, indem er  \n\u003e\t1. Passwörter oder sonstige Sicherungscodes, die den Zugang zu Daten (§ 202a Abs. 2) ermöglichen, oder  \n\u003e\t2. Computerprogramme, deren Zweck die Begehung einer solchen Tat ist,  \n\u003e herstellt, sich oder einem anderen verschafft, verkauft, einem anderen überlässt, verbreitet oder sonst zugänglich macht, wird mit Freiheitsstrafe bis zu zwei Jahr oder mit Geldstrafe bestraft.\n    \n\u003e § 149 Abs. 2 und 3 gilt entsprechend.  \n\u003e (Vorbereitung der Fälschung von Geld und Wertzeichen; längere Haftstrafen)  \n\u003e Offizialdelikt\n\n1) 任何准备实施第202a条或第202b条规定的犯罪的人, 通过生产、为自己或他人获得、销售、给予他人、分发或以其他方式提供:\n\t1. 允许访问数据的密码或其他安全代码（第202a（2）条），或 \n\t2. 其目的是实施这种犯罪的计算机程序。\n应处以不超过两 年的监禁或罚款。\n- § 第149条第（2）和（3）款应比照适用\n- 官方罪行\n\n- 技术安全专家对此类工具的良性使用不在 202c 的范围内, 只有计算机犯罪的准备行为才会受到处罚\n\n[[#如何评估一个黑客工具是否该受到法律惩罚]]\n\n##### § 202d: Datenhehlerei  数据盗窃\n\u003e Wer Daten (§ 202a Absatz 2), die nicht allgemein zugänglich sind und die ein anderer durch eine rechtswidrige Tat erlangt hat, sich oder einem anderen verschafft, einem anderen überlässt, verbreitet oder sonst zugänglich macht, um sich oder einen Dritten zu bereichern oder einen anderen zu schädigen, wird mit Freiheitsstrafe bis zu drei Jahren oder mit Geldstrafe bestraft.  \n\u003e \n\u003e Die Strafe darf nicht schwerer sein als die für die Vortat angedrohte Strafe.  \n\u003e \n\u003e Absatz 1 gilt nicht für Handlungen, die ausschließlich der Erfüllung rechtmäßiger dienstlicher oder beruflicher Pflichten dienen.\n\n- 任何人如果获得一般人无法获得的数据(第202a(2)条)，并且是由另一个人通过非法行为获得的，或将其提供给另一个人，传播或以其他方式使其获得，以使自己或第三人致富 或伤害他人，应被判处不超过三年的监禁或罚款。\n- 惩罚不得超过对上游犯罪威胁的惩罚。\n- 第1款不应适用于仅为履行合法的官方或专业职责而实施的行为\n\n\n##### § 205: Strafantrag  刑事申诉\n\u003e In den Fällen des § 201 Abs. 1 und 2 und der §§ 202, 203 und 204 wird die Tat nur auf Antrag verfolgt. Dies gilt auch in den Fällen der §§ 201a, 202a, 202b und 202d, es sei denn, dass die Strafverfolgungsbehörde wegen des besonderen öffentlichen Interesses an der Strafverfolgung ein Einschreiten von Amts wegen für geboten hält.\n\n- 在第201(1)和(2)条以及第202、203和204条的情况下，只有在申请的情况下才可以起诉该 罪行。这也应适用于第201a、202a、202b和202d条的情况，除非检察机关认为由于起诉的特殊公共利益而有必要依职权进行干预\n- § 该清单中缺少第202c条；即202c条是一种官方罪行 Offizialdelikt\n- \"特殊公共利益 Besonderes öffentliches Interesse\"由检方 Staatsanwaltschaft 决定。\n\n##### 案例: Lilith Wittmann 和 CDU Connect App\n- 所有帮助者的所有数据最终都在一个数据库中 \n- 数据库可以通过GET调用的 \"补充 \"读出 \n- 例如https://cdu.kampagnen\n- dialog.de/api/campaigns/38?include=visits \n- 可以读出18500个活动帮助者和1350个支持者的数据 \n- 负责任的披露（向当局和开发人员提供信息，有机会修复漏洞）。\n- 向基民盟总部电话报告\n- 几乎没有兴趣：\"不知道，写邮件吧\"\n- 向CERT Bund、BSI和国家数据保护专员报告该漏洞（11.05.21）\n- 12.05.21：应用程序被下线\n- 基社盟和奥地利人民党的应用程序有同样的漏洞（12.05.21）\n与联邦经理Stefan Hennewig的对话\n- 提供在安全部门为党工作的机会\n- Wittmann拒绝，不想限制她的公民社会承诺\n- Union Betriebs GmbH的律师向BKA投诉（04.06.21）\n- BKA宣布自己没有责任，并建议根据《刑法》第202b条（截取数据）向LKA报告\n- 根据《刑法》第202a/b/c条报告（01. 07.21）\n- 3.8.21 警方与 \"被告 \"Wittmann联系\n- 150页调查文件\n- 10.08.21 CDU撤回投诉\n- 17.08.21 对发现更多漏洞但发表《全面披露》的人进一步投诉\n- 25.08.21 对Lilith Wittmann的诉讼被中止；部分原因。- 由于安全漏洞，没有必要克服访问保护--数据没有公布。\n\n##### § 303a: Datenveränderung  数据更改\n\u003e (2) Wer rechtswidrig Daten (§ 202a Abs. 2)  \n\u003e (3) löscht, unterdrückt, unbrauchbar macht oder verändert,  \n\u003e wird mit Freiheitsstrafe bis zu zwei Jahren oder mit Geldstrafe bestraft.  \n\u003e (4) Der Versuch ist strafbar.  \n\u003e (5) Für die Vorbereitung einer Straftat nach Absatz 1 gilt §202c entsprechend.\n\n2) 非法收集数据的人（第202a条第2款）。 \n3) 删除、压制、使之无法使用或修改。 将被处以两年以下的监禁或罚款。\n4) 这种企图是要受到惩罚的。\n5) 以下内容适用于第1款所述犯罪的准备工作 相应地，§202c。\n\n\n##### § 303b: Computersabotage  破坏计算机的行为\n\u003e (1) Wer eine Datenverarbeitung, die für einen anderen von wesentlicher Bedeutung ist, dadurch erheblich stört, dass er  \n\u003e 1. eine Tat nach § 303a Abs. 1 begeht,  \n\u003e 2. Daten (§ 202a Abs. 2) in der Absicht, einem anderen Nachteil zuzufügen, eingibt oder übermittelt oder  \n\u003e 3. eine Datenverarbeitungsanlage oder einen Datenträger zerstört, beschädigt,  \n\u003e unbrauchbar macht, beseitigt oder verändert, wird mit Freiheitsstrafe bis zu drei Jahren oder mit Geldstrafe bestraft.  \n\u003e (2) Handelt es sich um eine Datenverarbeitung, die für einen fremden Betrieb, ein fremdes Unternehmen oder eine Behörde von wesentlicher Bedeutung ist, ist die Strafe Freiheitsstrafe bis zu fünf Jahren oder Geldstrafe\n\n1) 任何通过以下方式严重干扰对他人具有重大意义的数据处理操作的人\n\t1. 犯了第303a（1）条规定的罪行。 \n\t2. 输入或传输数据（第202a(2)条），意图对他人造成不利，或 \n\t3. 毁坏、损害、使其无法使用、移除或改变数据处理系统或数据载体。 将被处以三年以下监禁或罚款。\n2) 如果数据处理对另一个公司、企业或当局具有至关重要的\n意义，则将被处以五年以下的监禁或罚款\n\n\u003e (1) Der Versuch ist strafbar.  \n\u003e (2) In besonders schweren Fällen des Absatzes 2 ist die Strafe Freiheitsstrafe von sechs Monaten bis zu zehn Jahren. Ein besonders schwerer Fall liegt in der Regel vor, wenn der Täter  \n\u003e\t1. einen Vermögensverlust großen Ausmaßes herbeiführt,  \n\u003e\t2. gewerbsmäßig oder als Mitglied einer Bande handelt, die sich zur fortgesetzten Begehung von Computersabotage verbunden hat,  \n\u003e\t3. durch die Tat die Versorgung der Bevölkerung mit lebenswichtigen Gütern oder Dienstleistungen oder die Sicherheit der Bundesrepublik Deutschland beeinträchtigt.  \n\u003e (3) Für die Vorbereitung einer Straftat nach Absatz 1 gilt § 202c entsprechend\n\n1) 这种企图是要受到惩罚的。 \n2) 在第2款规定的特别严重的情况下，将被处以6个月至10年的 监禁。通常情况下，如果犯罪人出现以下情况，则被视为存 在特别严重的情况\n\t1. 造成大规模的资产损失。 \n\t2. 商业行为或作为一个团伙的成员，联合起来持续进行计算机破坏。 \n\t3. 该行为损害了对民众的基本商品或服务的供应或德意志联邦共和国的安全。\n3) 以下内容适用于第1款所述犯罪的准备工作§ 202c条。\n\n##### § 303c: Strafantrag 刑事申诉\n\u003e In den Fällen der §§ 303, 303a Abs. 1 und 2 sowie § 303b Abs. 1 bis 3 wird die Tat nur auf Antrag verfolgt, es sei denn, dass die Strafverfolgungsbehörde wegen des besonderen öffentlichen Interesses an der Strafverfolgung ein Einschreiten von Amts wegen für geboten hält.\n\n对于第303条、第303a(1)和(2)条以及第303b(1)至(3)条的情况，除非检察机关认为由于 起诉的特殊公共利益而有必要依职权进行干预，否则只能根据申请对犯罪进行起诉\n\n##### 如何评估一个黑客工具是否该受到法律惩罚\n来自 BITKOM-Leitfaden, dreistufige Bewertungsschema\n3个阶段的评估计划 \n1. 评估软件的功能 功能适合于实施犯罪（关键） 功能不适合于实施犯罪（非关键\n\t![[attachments/Pasted image 20230118225703.png|400]]\n2. 确定软件的主要目的\n\t![[attachments/Pasted image 20230118225731.png|400]]\n3. 确定行为人的意图, whitelist:\n\t- Beauftragung durch den Angegriffenen (Pentest)  \n\t- Erfüllung Geschäftszweck / Arbeitsmittel (Sicherheitsberater)  \n\t- Aufdecken Sicherheitslücken (Responsible disclosure)  \n\t- Austausch der Ergebnisse unter Sicherheitsexpert:innen\n\n### Datenschutz(EU-DGSVO, BayDSG)\n\n##### 信息自决权\n- (隐含的）自行决定披露和使用个人数据的基本权利. \n- 如果有可能从数据中得出关于个人的结论，则存在个人可参考性。\n\t- 姓名、入学编号、电子邮件地址、账户号码、...\n\t- IP地址？\n- 术语起源核心思想：那些不知道或无法影响收集到关于他们的什么信息以及如何处理这些信息的人 ，出于谨慎而调整自己的行为——个人的行动自由受到限制。\n\n##### 数据保护立法\n- Europäische Datenschutzgrundverordnung (EU-DSGV)  \n- Bundesdatenschutzgesetz (BDSG)  \n- Bayerisches Datenschutzgesetz (BayDSG)  \n- Regelungen auch in anderen Gesetzen, im Umfeld von IT-Diensten besonders relevant z.B.  \n\t- Telekommunikationsgesetz (TKG)  \n\t- Telemediengesetz (TMG)\n\n基本原则: \n- Verbot mit Erlaubnisvorbehalt\n\t- 法律允许适当的收集, 处理, 使用\n\t- 知情同意\n- 数据规避和数据经济(必要性原则 Erfordernisprizip)\n- 目的导向\n- 数据透明(was, von wem, wozu, wie lange)\n\n\n##### 个人数据如何在网上传播?\n- 有意识: 个人主页, 社交媒体..\n- 无意识: 服务个性化, 邮件发送到带有网络档案的分发列表\n- 周围的人/组织\n\n**潜在危险**\n- 将不同来源的数据连接起来\n- 画像剖析及其商业用途\n- 没有「被遗忘的权利」\n\n##### 谁会拥有个人数据\n- 政府设施, 公共设施\n- 公司\n\t- 保险, 银行\n\t- 电信公司\n\t- 交通公司\n\t- 零售页(会员卡)\n\t- 互联网服务提供者\n\n### IT Sicherheitsgesetz\n..\n\n## Kryptographie\n\n### 术语\n\n##### Cryptography\n- 加密解密技术\n\n##### Cryptoanalyse\n- 没有密钥进行解密的技术\n\n##### Cryptology\n- = Cryptography + Cryptoanalyse\n\n##### Cryptography Protocol\n- 加密解密使用的协议\n\n##### 过程用语\n- plaintext 明文 Klartext\n- ciphertext 密文 Geheimtext\n- encryption 加密 Verschlüsselung, Chiffrierung\n- decryption 解密 Entschlüsselung, Dechiffrierung\n- Cryptographic Algorithm/Cipher 密码算法 Chiffriersystem\n\n##### Steganography\n- 隐写术\n\n##### Semagramme\n- linguistic steganography\n- 隐藏在文字作品或图像的细节中的信息\n\n##### Masking(open code)\n- 公开信息中的部分内容有事先商定的含义\n- 如日本天气预报中的「東の風、雨」(higashi no kaze, ame)重复两次意为「与美国的战争」\n\n##### Jargon, Millieu-Code\n- 行话, 黑话\n- 比如 \"Schnee\" 代表 \"Kokain\"\n- 用得多容易被识别, 同义替换会破坏原义\n\n##### Confusion\n- 1949 Shannon\n- (好的密码算法)明文和密文之间的联系越少越好\n\n##### Diffusion\n- 1949 Shannon\n- (好的密码算法) 明文的细微差别 应该导致 较大的密文差别\n\n##### Differential Analyse\n- 差分密码分析\n\n##### 课程 notation\n![[attachments/Pasted image 20230221175833.png|L|400]]\n\n### 工具\n[[permanent/密码学#工具站]]\n\n### MISC\n\n#### 图片隐写\n- 把信息写入色彩通道里最不明显的末位\n![[attachments/Pasted image 20230220110026.png|L|300]]\n\n识别: \n- 放大后+对比度增加\n- ![[attachments/Pasted image 20230220110255.png|L|300]]\n#### Plausible Deniability\n- 可推诿性?\n- 如果你有一样加密的东西(被发现了), 有时候可能会被强制要求交出密码\n- 解决办法是, 第一层加密下隐藏第二层加密, 并让这个第二层加密不被发现\n- 用 TrueCrypt/VeraCrypt\n- 避免对第二层加密的引用(win:最近使用过的文件)\n\n#### 隐蔽的渠道\n- 通过不可察觉的渠道/媒介进行信息传输\n- e.g.\n    - 数据在数据包头而不是在TCP有效载荷中（如TCP SeqNr.)\n    - 人为延迟传输数据包\n    - 不是内容，但文件的名称和大小是相关的 \n    - 大海捞针: 大量无效信息, 只有指定部分是有效的\n- 特征\n    - 可检测性: 只有指定接受者能识别\n    - 不可辨别性: 监控/审查员应该不能识别出当前是否正在传输隐藏数据\n    - 带宽：每单位时间内可隐蔽传输的数据长度\n\n#### Skytale/栅栏密码\n\n#### Excel 解锁宏\n- 新的MS Office文件格式基本上是基于开放的OpenXML，它基于XML并使用zip压缩。 因此，人们可以简单地用包装程序解开文件（或者用Windows中集成的zip程序将文件扩展名改为.zip）。 这样就得到了一个目录树，其中只有/xl/vbaProject.bin（宏）和/xl/worksheets/sheetXXX.xml（单个电子表格）是感兴趣的。 在二进制文件中可以找到代码部分 \\verb|CMG=|, \\verb|DPB=| 和 \\verb|GC=|。如果你把 \\verb|DPB=| 改为 \\verb|DPx=| ，你在下次启动时就会得到一个错误信息，但再次保存就会杀死密码。\n- XML片段`\u003cc r=\"A1\" s=\"3\"\u003e\u003cf\u003eSUM(C1:C6)/20\u003c/f\u003e\u003cv\u003e2.25\u003c/v\u003e\u003c/c\u003e`直接给出公式（未加密）。如果你想完全删除密码保护，只需删除\u003csheetProtection .../\u003e。\n\n### Cryptographical System\n\n#### Cryptosystem\n![[attachments/permanent/Cryptography#Cryptosystem]]\n\n#### 区块密码与流密码\n- Blockchiffren\n    - 将长度为 m 的密码分成 长度为 n 的 r 个块\n    - 最后一块可能后 padding\n- Stromchiffren\n    - 通信双方使用同一种子初始化的伪随机数生成器\n\n### 对称密码\n\n#### 对称密码算法\n![[attachments/permanent/对称密码#对称密码]]\n\n#### Permutation\n- 位移, 如恺撒密码\n![[attachments/Pasted image 20230220114608.png]]\n\n#### Substitution\n- 类似坐标的密码, 可以在维度上变化, \n![[attachments/Pasted image 20230220114547.png|L|400]]\n\n#### One-Time-Pad\n- 一次性密码本\n- 加密: c = XOR(m, k)\n- 解密: m = XOR(c, k)\n- 只要密钥不泄漏, 就是牢不可破的\n\n#### DES\n[[permanent/DES]]\n\n#### AES\n[[permanent/AES]]\n\n### 分组方式\n##### ECB\n![[attachments/permanent/Cryptography#ECB]]\n\n##### CBC\n![[attachments/permanent/Cryptography#CBC]]\n\n### 非对称密码\n\n#### 非对称密码算法\n![[attachments/permanent/非对称密码#非对称密码]]\n\n#### RSA\n[[permanent/RSA]]\n\n### Hybrid\n- SSL/TLS, PGP, SSH 等实际上是使用 hybrid 方法来加密的\n- 非对称方法交换对称方法的密钥\n- 对称方法加密内容\n\n### 密码分析/密码破解\n\n#### Bruteforce\n- 128 bit -\u003e 3.4e+38 种密码可能(如果计算机每秒尝试30亿次, 1000台电脑最多需要尝试3.6e+18年)\n- 256 bit -\u003e 配置同上, 1.2e+57年\n\n#### 撞库\n- 所以要[[permanent/加盐]]啊喂\n\n### 密钥安全性/破解难度\n\n#### 密钥长度\n![[attachments/Pasted image 20230221180935.png||L|400]]\n\n![[attachments/Pasted image 20230221181022.png|L|400]]\n\nsymmetric vs. asymmetric 同等安全性需要的 bits\n![[attachments/Pasted image 20230221181936.png|L|400]]\n\n### 电子签名\n![[attachments/permanent/电子签名#电子签名技术]]\n\n### quantensichere Kryptographie\n\n#### Quantencomputing\n![[attachments/permanent/量子计算]]\n\n#### Mosca's inequality\n![[attachments/Pasted image 20230222165355.png|L|400]]\n\n#### Post Quanten Security\n![[attachments/Pasted image 20230222165806.png|L|400]]\n\n#### 量子计算带来的密码威胁\n- 枚举的时间直接取 sqrt()\n    - AES-256: safe\n    - Tripple-DES: unsafe\n- 寻找 n 的因数: 𝑂($(\\log 𝑛)^3$)\n    - 大部分 非对称算法(RSA, ECDSA, EdDSA) 在量子比特数量到一定程度后不再安全\n- 大多数 \n    - 加密哈希函数（如SHA2，SHA3，BLAKE2），\n    - MAC算法（如HMAC和CMAK）和 \n    - 密钥衍生函数（bcrypt，Scrypt，Argon2）\n    是（基本上）量子安全的。-\u003e 只受到轻微影响。256bits的还能保留128bits程度的安全性\n\n## (crypto) HASH Function\n\n### 哈希函数/散列函数\n\n#### 哈希函数的特点\n- 任意长的输入, 计算都得到固长的 散列值\n- 单向函数, 非单射(x 能确定 y, 反过来不能) =\u003e 可能存在 collision\n- compression function G, 密文分组+padding, IV\n    - ![[attachments/Pasted image 20230222140636.png|L|400]]\n\n G 可以用比如 DES, 这样散列值就是 64bit (和 DES密钥长度一样)\n- ![[attachments/Pasted image 20230222140902.png|L|400]]\n\n#### 抗碰撞性\nEine (Einweg-)Funktion wird als kollisionsresistent bezeichnet, wenn es „schwer“ ist, verschiedene Eingaben zu finden, die auf denselben Wert abgebildet werden\n\n#### 强哈希函数/弱哈希函数\n- 弱: 给定一个 m, 基本上不可能找的一个(有意义的) m' 和它散列值相同\n    - 为什么说有意义呢, 因为 md5 构造碰撞是做得到的, 只不过是一堆乱码\n- 强: 基本上不可能找到一对 m 和 m', 散列值相同\n\n帮助理解:\n- 找 253 个人, 才有 50%+ 概率有人和你同生日\n- 找 23 个人, 就能有 50%+ 概率有两个人同生日\n- 对于长度为 k bits 的信息 m, $2^{k/2}$ 个信息里可能有撞哈希的\n\n#### 密码学中哈希函数的应用\n- 文件或信息的完整性检查 \n- 密码文件中密码的混淆\n- 作为数字签名的数据基础\n- 作为伪随机数生成器\n\n### MD5\n\n#### MD5 算法\n- src: [掌芝士 md5](https://www.bilibili.com/video/BV1u44y1z7t1/?spm_id_from=333.337.search-card.all.click\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n- 128 bit 散列值, 512 bits 块\n- 补位: 512\\*n + 448\n    - 如果源文件刚好满足, 也要补512\n    - 448 = 512 - 64, 64 用来记录原始数据长度\n- 每次处理 512 bits 中的 32 bits\n- IV: 4\\*4字节(称为ABCD), 也就是一共 128 bit\n    - 对每一个 32 bits, 要经过4轮函数\n    - ![[attachments/Pasted image 20230222155453.png]]\n- 四个函数, 通过位移, 异或改变 A 的值\n    - s, ac 是固定值, x 是当前处理的 32 bit\n    - ![[attachments/Pasted image 20230222154835.png|L|400]]\n    - ![[attachments/Pasted image 20230222155302.png|L|500]]\n- Merkle-Damgard 结构\n\n#### MD5 的安全性\n- 对4轮函数的一轮可以做到差分密码分析\n- 1993伪撞库: 可以找到散列值相同但没有意义的序列\n- 2004撞库: 一个多小时可以找到同散列值\n\n=\u003e MD5 不再安全(SHA-1也不安全)\n- 用这些替代: SHA-256, Whirlpool, SHA-3\n- 仅在同时使用多种散列算法时有意义\n\n### SHA-3\n- 又是 NIST, 这次他们来找 SHA-2 的升级, Keccak 赢了\n\n- SHA3-256: r=1152, c=448, Ausgabe abgeschnitten nach 256 Bits  \n- SHA3-512: r=576, c=1024, Ausgabe abgeschnitten nach 512 Bits\n- r 关系到速度, c 关系到安全性\n\n- collision-resistent\n\n![[attachments/Pasted image 20230222162046.png|L|400]]\n\n#### Keccak-f\n\n固定常数\n- Breite b = r + c = 25 \\* 2$^l$, w = 2$^l$\n- nr = 12 + 2$^l$\n\n变换\n- ![[attachments/Pasted image 20230222162430.png|L|400]]\n- ![[attachments/Pasted image 20230222162451.png|L|400]]\n\n#### 评价\n- 可变的长度, 适合做流密码\n\n\n## 安全技术\n\n### 对 C, I 的保护\n- Confidentiality: 加密 Verschlüsselung\n- Integrity: hash, (如果有) sequence nr\n\n### Authentisierung\n\n#### Authentisierung 认证了什么\n- 数据来源的认证\n- 用户认证\n- 通过实体认证: 单方/多方(如实体token+密码)\n\n#### Authentisierung 以什么认证\n- Wissen\n    - pw, PIN, ...\n- Besitz\n    - smartcard, token, token-App\n- Eigenschaft\n    - Biometrie\n        - fingerabdruck\n        - iris\n        - Stimmerkennung  \n        - Gesichtserkennung\n\n### 一次性密码\n\n#### S/Key\n![[attachments/Pasted image 20230223164617.png|L|400]]\n\n![[attachments/Pasted image 20230223164653.png|L|400]]\n\n- 好的 hash 能提供保护, 否则容易遭到中间人攻击\n- 会遭到重放攻击\n- 被 OTP 取代\n\n#### OTP(One Time Password system)\n- RFC 2289, S/Key 的继承者\n- 避免重放攻击: 每个登录者必须要自己的 OTP\n- 支持不同的 hash 函数, MD4, MD5, SHA...\n- 推荐使用 [[#IPSec]] \n\n#### S/Key 和 OTP 的攻击\n- 所有内容纯文本传输\n- 攻击者冒充认证服务器/中间人攻击是可能的\n- 所以建议用 IPSec 对服务器进行验证\n\n#### TOTP\n- time-based OTP\n- RFC 6238\n- HOTP(基于 HMAC 的 OTP\\[RFC 4226]) 的进一步发展\n    - HOTP(K,C) = HMAC-SHA1(K,C), key K, counter C\n- TOTP(K) = HOTP(K, C$_T$)\n    - $C_T = \\lfloor \\frac{T - T_0}{T_X} \\rfloor$\n    - $T_0$ unix 时间 in sec, 默认 0\n    - $T$ 现在的时间, 即 1970.1.1 以来的秒数\n\n### Smartcard\n- 属于通过实体认证\n![[attachments/Pasted image 20230223172300.png|L|300]]\n\n#### 分类\n- Speicherkarten  \n- Prozessor-Karten  \n- Kontaktlose Karten\n\n#### SecureID token\n- 每分钟产生一个新号码，只能由中央认证服务器预测 \n- 这个6到8位数的号码必须与用户密码一起输入（双因素认证）\n- 通常是基于时间的随机数\n\n![[attachments/Pasted image 20230223173025.png|L|500]]\n\n\n### Biometry\n- fingerabdruck\n- iris\n- Stimmerkennung  \n- Gesichtserkennung\n\n#### 生成/认证 大致流程\n![[attachments/Pasted image 20230223173139.png|L|500]]\n\n#### 指纹\n\n##### 取指纹算法\n- 定位\n- 纹路方向 ridge\n- 提取出微小的特征\n![[attachments/Pasted image 20230223173709.png|L|400]]\n\n##### 对指纹认证的攻击\n- Lichtreflexion 比如用玻璃反光之前的指纹痕迹\n- 比如指纹模具\n- 大多数传感器80%符合就能过\n\n##### 指纹扫描\n- Puls\n- Tiefenmuster\n- Wärmebild\n- ...\n\n### Datensprung\n- 对数据来源的认证\n\n#### 认证数据来源的几种方式\n- 加密信息(即知道密钥可解)\n- [[permanent/电子签名|Digital Signature]]\n- Message Authentication Code(MAC) = hash func + 共同密钥\n- Hashed MAC\n- 以上方案的组合\n\n#### 可能的问题\n- sym 加密的消息传递\n    - 否认\n- asym 加密的消息传递\n    - 否认\n    - 数据源未认证\n- 数字签名\n    - 接收方无法认证\n    - 无法加密\n- 非对称加密 + 数字签名\n    - ![[attachments/Pasted image 20230223182526.png|L|400]]\n    - 上述问题都解决了, 但不能确认 I (上面那些也不能)\n- 还有各种各样加 hash 的, 还是有问题\n\n#### MAC, HMAC\n- (Hashed) Message Authentication Code\n\n##### Message Authentication Code\n- 用于对消息 M 的加密\n- MAC(M) = A(K, M)\n    - A 特定算法\n    - K 密钥\n- e.g. \n    - ![[attachments/Pasted image 20230224112639.png|L|400]]\n- Brute Force 攻击 是有可能的\n- 如果使用 Merkle-Damgard 结构的 hash 函数, 则 Length Extension Attack 是有可能的\n\n##### hashed MAC\n- MAC, der nicht symm. Verschlüsselung, sondern kryptographische Hash- Funktion zur Kompression verwendet 使用 hash func 代替 sym. 加密\n- $HMAC(m) = H\\left[(K^+ \\oplus opad) || H[(K^+ \\oplus ipad)||m]\\right]$\n    - $S_i$ := $K^+ \\oplus ipad$ , $S_o$ = $K^+ \\oplus opad$\n    - b = $S_i$ 的长度\n    - $K^+$ := 长度为 b 的密钥 k\n\n#### Needham-Schroeder\n- 1979, 引入 Trusted Third Party(TTP) \n- 不能防御重放攻击(=\u003e Kerberos)\n- 第三方 Trent 与每个通信伙伴共享密钥\n- $E_A$ 指 Alice 与 Trent 的对称密钥\n![[attachments/Pasted image 20230224115447.png||L|500]]\n\n#### Kerberos\n[[permanent/Kerberos]]\n\n### Autorisierung und Zugriffkontrolle\n- Autorisierung: 权限的分配/指定\n- Zugriffskontrolle: 这些权限的执行\n\n#### 分类\n\n##### DAC (Discretionary Access Control) \n- 基于所有者原则\n- 所有者指定其对象的权限 \n- 根据对象分配访问权限\n##### MAC (Mandatory Access Control) \n- 基于规则的权利说明\n- 系统全局\n- 例如Bell-LaPadula；规则通过安全等级(非机密、机密、秘密、最高机密)指定\n##### RBAC（Role-Based Access Control） \n- 主体和任务的分离\n- 授权不再与主体相关，而是与特定的任务相关\n- 主体通过角色成员资格获得授权\n![[attachments/Pasted image 20230224154751.png|L|500]]\n\n#### Referenzmonitor\n- 用于访问控制的系统, 也称为 Access Control Monitor\n- 需要做到:\n    - 必须通过 Referenzmonitor 访问对象\n    - Referenzmonitor 必须能够识别访问主体\n    - Referenzmonitor 可以随时中断访问\n\n### Identification\n- 现实世界的实体和数字ID的联系\n- 两个步骤\n    1. Personalisation: 确认现实中的身份, 并给实体分配 ID\n    2. Identification: 识别, 将数字ID与只有该实体知道的信息(如密码)连接\n- 问题: 伪装攻击\n\n#### Certification Authority\n- 是一个受信任的第三方 TTP \n- 颁发数字签名(Digital Signature), 效果类似于公证(Notar)\n- CA的用户组:\n    - 一个领域中的所有用户都 \"信任 \"该 CA，即CA的 \"声明 \"被所有用户接受为有效、正确和真实\n\n##### Aufgabenspektrum einer CA\n- Certificate Issuance\n- Certificate Update\n- Certificate Revocation\n- Certificate Repository\n- Key Generation\n- Notarization\n- Certificate History\n- Cross-Certificate\n- Attribute Certificate\n\n#### 用户认证的流程\n1. 生成密钥, 密钥只由认证方保管\n2. Personalisation, 请求证书\n3. 生成所需的证书\n4. 颁布证书\n\n#### X.509v3\n- 证书\n![[attachments/Pasted image 20230224164548.png|L|500]]\n\n#### 证书的撤销\n- *Certificate Revocation Lists (CRLs)*: 一个列表, 记录证书的有效期和证书的ID\n- Zertifikat widerrufen: \n    - openssl ca -config openssl.cnf -revoke client-cert.pem  \n- Revocation List erzeugen: \n    - openssl ca -config openssl.cnf -gencrl -out crl.pem\n\n#### Online Certificate Status Protocol (OCSP)\n- 协议\n- 使用户能随时向 OCSP 服务器请求证书\n- OCSP 服务器是由 [[#Certification Authority]] 运营的\n- 流程\n    - 请求证书\n    - 验证证书\n        - \"good\" 在有效期内\n        - \"revoked\" 过期或被撤回\n        - \"unknown\"\n\n#### OIDC\n- Open ID Connect\n- 集中存储不同服务的 ID 信息\n\n目标/解决的问题\n- 对于开发者来说\n    - 用户认证，无需存储和管理密码/访问数据(责任！加密，泄漏......)\n    - 不同级别的认证\n- 对于用户\n    - \"不要在这样的网站上有其他账户......\"\n    - 没有必要相信任何蹩脚的网络应用...\n    - 所使用的身份供应商的认证安全（2FA/MFA，无密码，......），而不是应用程序的认证安全(\"转义\")\n\n流程\n- ![[attachments/Pasted image 20230225153435.png|L|500]]\n- Relying Party: 需要认证/需要使用 OIDC 服务的依赖方(你的应用)\n- OIDC Provider (OP) / Identity Provider (IdP): 为信赖方提供认证和授权. 可以使用一个OP或IdP，或者自己提供IdP\n\nOIDC token 的传递\n- 生成 JWT https://jwt.io/ + base64加密\n\n##### JWT\n![[attachments/Pasted image 20230225155435.png|L|500]]\n\n\n## Netzsicherheit-Schicht 2\n\n### Visualisierung von Netzen\n\n#### Virtual (Private) Network (VPN)\n- 通过各种技术将(距离比较远的)多个终端连接到一个逻辑上的网络\n- Layer 1:\n    - Virtual Private Wire Service(VPWS): 供应商提供点对点的连接 \n    - Virtual Private Line Service(VPLS): 供应商提供点对多点的连接\n- Layer 2:\n    - VLAN: 同一物理链路上的多LAN广播域, 使用 IEEE 802.1Q 标准\n    - Virtual Private LAN Services(缩写又是VPLS): 连接物理上分隔的 LAN\n    - [[#Point-to-Point Tunneling Protocol(PPTP)]]\n    - Layer2 Tunneling Protocol\n- Layer 3\n    - IPSec\n    - SSL/TLS\n    - OpenVPN\n\n#### Layer 2 的任务\n- Frames 的无差错传输\n- 流量控制\n- 共用传输介质的多媒体访问\n    - Ethernet: CSMA/CD (IEEE 802.3)\n    - WLAN: CSMA/CA (IEEE 802.11)\n\n#### VLAN\n- 跨多个交换机的局域网\n- 允许根据业务或者安全需求, 将 IT-System 分组或隔离\n- 现代大学网络的标配\n\n##### VLAN 技术\n- IEEE 802.1Q\n- 在 ethernet frame 的基础上, 拓展了 TAG\n    - ![[attachments/Pasted image 20230225095949.png|L|400]]\n    - ![[attachments/Pasted image 20230225203726.png|L|400]]\n    - TPID(Tag Protocol Identifier), PRI(Priority), CFI(Canonical Format Identifier), VLAN ID\n\n### Point-to-Point Protocol(PPP)\n- 为了拨号而发展的\n- RFC 1661, 1662, 1663, 2153\n    - Frame Format: Delimeter(分隔符号) + checksum\n    - Link Control Protocol(LCP) for \n        - Verbindungsauf-/abbau\n        - test\n        - Aushandlen von configuration\n    - Network Control Protocol(NCP) for\n        - 支持的第三层协议（如IP、IPX、Appletalk......）的配置协商，通过PPP链接可能有不同的第三层协议\n- 每个 partner 都能请求 配置 的 LCP Aushandlung 的 认证, 认证协议:\n    - Password Authentication Protocol ([[#PAP]])  \n    - Challenge-Handshake Authentication Protocol ([[#CHAP]])  \n    - Extensible Authentication Protocol ([[#EAP]])\n\n#### PAP\n- Password Authentication Protocol\n- RFC 1334\n- 不安全的协议, 认证实体知道所有 ID 和 密码, 客户端以明文发送 ID 和密码\n- RFC 1334: 应该优先使用更安全的方法(比如CHAP)\n\n#### CHAP\n- Challenge-Handshake Authentication Protocol\n- RFC 1334, RFC 1994\n- 通过 3-way-handshake 定义认证\n    - ![[attachments/Pasted image 20230225104030.png|L|400]]\n- 安全风险: PAP 回退\n    - 用户不知道区别, 只要它能工作\n    - 中间人攻击: 伪装成仅 PAP 服务器, 接受明文密码\n\n#### EAP\n- Extensible Authentication Protocol\n- RFC 3748, RFC 5247\n- 是一个认证框架, 提供了通用方法, 支持大约40种协商技术\n    - EAP-MD5 (=CHAP)\n    - EAP-OTP (One-Time-Password)\n    - EAP-GTC (Generic Token Card)\n    - EAP-TLS\n    - EAP-SIM (全球通信系统GSM(Global System for Mobile Communication) 的用户验证模块SIM(Subscriber Identity Model))\n\n### Point-to-Point Tunneling Protocol(PPTP)\n- PPP 需要物理连接, 而 PPTP 就是想做一个在互联网上用的 PPP\n- 自 WIN95 以来最易于配置的 VPN协议\n- Client 与 Remote Access Server(RAS) 自愿连接 (Voluntary Tunneling)\n- 使用 Generic Router Encapsulation Protocol (GRE) 传输 PPP PDU\n    - PPP Protocol Data Unit (PPP PDU)\n    - GRE 是个 Layer 4 协议\n- 微软开发, RFC2637, 作为 RAS 的一部分\n- 微软改进: PPTP v2 und MS-CHAPv2\n\n##### MS-CHAPv2\n![[attachments/Pasted image 20230225132253.png|L|500]]\n- 依赖好的用户密码\n- 没有对攻击做综合防御措施\n- 有更好的选择(但微软没用)\n- 因为向下兼容, 可能被恶意软件强制回滚v1来攻击\n\n### IEEE 802.1x\n![[attachments/permanent/IEEE 802.1X#IEEE 802.1X 家族]]\n\n![[attachments/permanent/IEEE 802.1X#协议中的角色]]\n\n![[attachments/permanent/IEEE 802.1X#协议流程]]\n\n### WLAN\n\n#### IEEE\n![[attachments/WiFi 技术#WiFi IEEE 标准]]\n\n#### Fachbegriff\n- Dualband-AP: 指 2.4GHz 和 5GHz 双频\n- Access Point(AS): WLAN 入口点\n- Station(STA): 有 WLAN配置 的设备\n- Basic Service Set(BSS): 一组同频段的 STA\n- Extended Service Set(ESS):\n    - 多个 BSS 组成的逻辑网络\n    - 通过 SSID 识别\n- Portal: 与其他网络的接口\n\n##### Infrastructure Mode\n- AP, STA, BSS, ESS\n- ESS 通过 DSS(Distribution System) 搭建\n- ![[attachments/Pasted image 20230225202140.png|L|200]]\n\n\n##### Ad-Hoc Mode\n- 不需要 AP\n- 所有 STA 权力平等\n- 以 BSS 为基础, BSS 之间不能通信\n- ![[attachments/Pasted image 20230225202410.png|L|150]]\n#### WLAN 安全技术\n安全要求:\n- 参与者的认证\n- 网络的访问控制(Autorisierung)\n- 数据的 Confidentiality, Integrity\n具体技术:\n- Wired Equivalent Privacy([[#WEP]])\n- WiFi Protected Access([[#WPA]])\n- WiFi Protected Access 2([[#WPA2]])\n- IEEE 802.11i\n- WiFi Protected Access 3([[#WPA3]])\n\n#### WEP\n加密\n- PRNG Pseudo Random Number Generator\n![[attachments/Pasted image 20230227125701.png|L|400]]\n\n解密\n![[attachments/Pasted image 20230227125735.png|L|400]]\n\n安全问题\n- CRC32 在现在看来不能保证 [[#Integrity]]\n- 可能的攻击: Traffic Injection, \"Breaking 104-bit WEP in less than 60 seconds\"\n- **不安全, 不要用**\n\n#### WPA\n- 使用了 TKIP\n- 密钥层次高-\u003e低: PMK, PTK, TK\n    - Pairwise Muster Key\n    - Pairwise Transient Key\n    - Temporal Key\n    - 通过上层密钥计算得到下一层密钥, 如果上层被攻破, 那下几层都被攻破了\n- 还有一个 Pre-share Key, 也就是显示中的 wifi密码\n- ![[attachments/Pasted image 20230227130319.png|L|500]]\n- ![[attachments/Pasted image 20230227130430.png|L|500]]\n- 别用, **不安全**!\n\n#### WPA2\n- CCMP 取代 TKIP\n- AES 取代 RC4\n- 目前是安全的, 在设备上强制标注(和WiFi标签一起)\n\n#### WPA3\n- 2018, 作为 WPA2 的补充\n\n## Netzsicherheit-Schicht 3\n\n### IPSec\n- 在 IP 和 TCP 包之间起作用\n- 作用\n    - 验证 [[#Integrity]]\n    - 认证 \n    - 预防重放攻击\n\n#### Transport Mode / Tunnel Mode\n- AH 和 ESP 都有两种模式\n- 如果需要通过 Gateway, 用 Tunnel 模式\n    - ![[attachments/Pasted image 20230227131501.png|L|400]]\n\n#### IP Authentication Header\n- ![[attachments/Pasted image 20230227131820.png|L|500]]\n\n#### IP Encapsulating Security Payload\n- ![[attachments/Pasted image 20230227131910.png|L|500]]\n\n### IKEv2\n目标\n- 产生IPSec所需的密钥材料\n- 在IKE中已经对另一方进行了认证(不仅仅是在IPSec中)\n\n#### Diffie-Hellman 密钥交换\n- 一种安全的, 通过不可信通道交换密钥的方式\n1. 选择质数 p(通常在几百以上), 质数 g(primitive Wurzel g (mod p)), 这两个是公开的\n2. ![[attachments/Pasted image 20230227144404.png|L|400]]\n\n#### IKE_INIT\n- 用来建立一个双向的 IKE SA\n- ![[attachments/Pasted image 20230227144722.png|L|500]]\n\n#### IKE_AUTH\n- 认证, 并建立第一个 IPSec SA\n- ![[attachments/Pasted image 20230227144947.png|L|500]]\n- ![[attachments/Pasted image 20230227145136.png|L|500]]\n\n#### IKE_CHILD_SA\n- 接下来的 IPSec SA\n- rekey\n- ![[attachments/Pasted image 20230227145016.png|L|500]]\n","lastmodified":"2023-06-16T20:08:59.3738849+02:00","tags":[]},"/permanent/pyinstaller":{"title":"pyinstaller","content":"\n#### 参数\n常用参数 含义  \n-i 或 -icon 生成icon  \n-F 创建一个绑定的可执行文件  \n-w 使用窗口，无控制台  \n-C 使用控制台，无窗口  \n-D 创建一个包含可执行文件的单文件夹包(默认情况下)  \n-n 文件名","lastmodified":"2023-06-16T19:58:34.3461847+02:00","tags":["Python"]},"/permanent/python-pandas%E5%BA%93":{"title":"python pandas库","content":"\n## 读写 Dataframe\n\n```python\nfrom pandas import DataFrame\n\ndata = { 'name': ['zs', 'ls', 'ww'], 'age': [11, 12, 13], 'gender': ['man', 'man', 'woman']}\ndf = DataFrame(data)\n\n# 保存为 xlsx 格式\ndf.to_excel('new.xlsx') # will erase\n\n# 保存为 csv 格式\ndf.to_excel('new.csv')\n```\n\n修改某列的所有性别\n```python\ndf = pd.read_excel(file_path)\ndf['gender'][df['gender'] == 'girl'] = 'female'\ndf['gender'][df['gender'] == 'boy'] = 'male'\n```\n\n新增行列\n```python\n# 新增一行\ndf.loc[6] = [5, 'Eric', 'male', 20, '2021-5-18']\n\n# 新增一列\ndf['favorite'] = None\n```","lastmodified":"2023-06-16T19:59:16.2306519+02:00","tags":["Python"]},"/permanent/python-string%E5%BA%93":{"title":"python string库","content":"\n```python\ns = string.ascii_letters   \ns1 = string.ascii_uppercase\ns2 = string.ascii_lowercase\n```","lastmodified":"2023-06-16T19:59:27.9868656+02:00","tags":["Python"]},"/permanent/python-tkinter%E5%BA%93":{"title":"python tkinter库","content":"\n#### 框架\n简版\n```python\nfrom tkinter import *\nroot = Tk()\ntk.mainloop()\n```\n\n应用\n![[attachments/Pasted image 20230526214024.png]]\n\n#### 浏览文件\n```python\nfrom tkinter import filedialog\n\n# 浏览本地文件\ndef get_local_file():\n    file_path=filedialog.askopenfilename()\n\n# 浏览本地文件夹\ndef get_local_dir():\n    file_path=filedialog.askdirectory()\n    path.set(file_path)\n\n```","lastmodified":"2023-06-16T19:59:44.2098186+02:00","tags":["Python"]},"/permanent/python-unrar%E5%BA%93":{"title":"python unrar库","content":"\nhttps://rarfile.readthedocs.io/api.html#rarfile-class\n\n\n```python\nfrom unrar import rarfile\n\nrf = rarfile.RarFile('sgz14.rar')\nfor f in rf.infolist():\n    print(f.filename, f.file_size)\npwd_list = []\nwith open('PwdDic.txt', encoding='utf-8') as pwd_file:\n    print('load pwd list..')\n    for ln in pwd_file:\n        pwd_list.append(ln.strip())\n    print('finished.')\nctr = 1\nfor pwd in pwd_list:\n    print(str(ctr) + ' try decrpyting..' + pwd)\n    try:\n        rf.extractall(pwd=pwd)\n        print('Found: ' + pwd)\n        break\n    except:\n        ctr += 1\n        pass\nrf.close()\n```","lastmodified":"2023-06-16T20:00:07.9619142+02:00","tags":["Python"]},"/permanent/return-to-libc":{"title":"return-to-libc","content":"\n#### return-to-libc\n一种类似[[permanent/Buffer Overflows|缓冲区溢出]]的攻击, 通过覆盖返回地址到 libc, 以便从 libc 调用(例如系统)函数\n会绕过 NX位(no-execute), 将 Stack 标记为不可执行","lastmodified":"2023-06-16T20:00:41.8882495+02:00","tags":["安全"]},"/permanent/shodan.io":{"title":"shodan.io","content":"\n","lastmodified":"2023-06-16T20:02:51.8150489+02:00","tags":[]},"/permanent/spaCy":{"title":"spaCy","content":"\n## Introduction\n- deep-learning-based NLP system\n- learn and summerize the syntax model from Corpus, \n\n### 安装\n```cmd\n// 安装\npip install spacy\n// 下载模块\npython -m spacy download en_core_web_sm\n```\n\n### 基本用法\n```python\n# 1. load model\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")  # lang\n\n# 2. parse\n# Doc 对象是 spaCy 里的基础 statement 对象\nanalyzed = nlp(\"I shot an elephant in my pajamas.\") # Doc object\n\n# 3. Visualizing\nspacy.displacy.render(analyzed, options={'distance':100})\n\n# 4. explain 某个标签\nprint(spacy.explain('poss'))\n# possession modifier\n```\n\n```python\n# 打印进阶信息\nfor token in doc:\n    print(token.text, token.lemma_, token.pos_, token.tag_, token.dep_, token.shape_, token.is_alpha, token.is_stop, sep='\\t')\n```\n\n| Dies   | dieser | PRON  | PDS    | sb    | Xxxx | True  | True  |\n|--------|--------|-------|--------|-------|------|-------|-------|\n| ist    | sein   | AUX   | VAFIN  | ROOT  | xxx  | True  | True  |\n| mein   | mein   | DET   | PPOSAT | nk    | xxxx | True  | True  |\n| erster | erster | ADJ   | ADJA   | nk    | xxxx | True  | True  |\n| Satz   | Satz   | NOUN  | NN     | pd    | Xxxx | True  | False |\n| .      | --     | PUNCT | $.     | punct | .    | False | False |\n\n### 可视化\n\n#### displacy\n```python\nfrom spacy import displacy\ndisplacy.render(doc)\n```\n![[attachments/Pasted image 20230204141750.png|L|300]]\n\n### 注意\nBEACHTE: unterschiedliches PP-Attachment englisches vs. deutsches Modell!\n\n-   `en`: PP als Dependent vom Kopf der VP (_shot_)\n-   `de`: PP als Dependent vom Kopf der NP (_Elefanten_)\n\nGrund: strukturelle Ambiguität! (Modelle favorisieren jeweils andere Attachment-Art)","lastmodified":"2023-06-16T20:04:44.3993967+02:00","tags":["Python"]},"/project/%E4%BC%9A%E9%A3%9E%E7%9A%84%E4%B8%91%E5%B0%8F%E9%B8%AD-%E6%95%99%E6%88%91%E5%85%84%E5%BC%9F%E5%AD%A6%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91":{"title":"会飞的丑小鸭 - 教我兄弟学安卓逆向","content":"\n系列目录: https://www.52pojie.cn/thread-742703-1-1.html\n\n## 一、安卓正向编程\n[01编写第一个 app](https://www.52pojie.cn/thread-648530-1-1.html)\n```Java\nEditText Name;\nName = (EditText) findViewById(R.id.Text_Name);\nButton Login; ...\nLogin.setOnClickListener(new View.OnClickListener() {\n\t@Override\n\tpublic void onClick(View view) {\n\t\tcheck(Name.getText().toString().trim(), Pwd.getText().toString().trim());\n\t}\n});\n\n```\n\n\n---\n\n## 二、破解第一个 app\n[02 破解第一个 Android 程序](https://www.52pojie.cn/thread-650395-1-1.html)\n\n安装 Android Killer, 配置 jdk(建议jdk8, 过高版本不能用).\n在`配置`里, 选中 jdk 的 `bin` 文件夹\n\n`move result v0` 把上一条的结果移动到v0, 真为1, 假为0\n`if-eqz v0, :cond_0` 如果 v0\\==0, 跳转到 `:cond_0`\n\n\n- 关于 Android Killer 卡死和 smali 反编译失败以及 apk 安装失败:\n[前传00 环境](https://www.52pojie.cn/thread-844248-1-1.html)\n\n- AK 反编译 java 源码丢失\n[解决androidKiller反编译高版本java源码出错的工具优化篇](https://www.52pojie.cn/thread-646293-1-1.html)\n\n- AK 编译失败\n[AndroidKiller安装、设置及使用教程4月15日网盘文件有更新(2019.6.21更新下载地址)](https://www.52pojie.cn/thread-726176-1-1.html)\n另外高版本的 jdk 只能用 jdk 签名, 不能用 apktool 签名. 低一点的版本就可以(比如jdk8)\n\n\n[作业-破解滚动的天空](https://www.52pojie.cn/thread-632178-1-1.html)\n似乎已经版本过旧\n\n\n## 破解第一个 Android 游戏\n[03 破解游戏](https://www.52pojie.cn/thread-654654-1-1.html)\n\n[练习 切水果大战][https://www.52pojie.cn/thread-642371-1-2.html](https://www.52pojie.cn/thread-642371-1-2.html)\n\nswitch 语句在 smali 里会变成 label, 如 `pswitch_0`\n\n[作业 火柴者联盟](https://www.52pojie.cn/thread-620244-1-1.html) (已过期)\n\n","lastmodified":"2023-06-15T17:19:42.3598442+02:00","tags":["逆向","Android"]},"/project/%E5%8D%81%E4%BA%94%E5%88%86%E9%92%9F%E9%80%BB%E8%BE%91%E5%AD%A6":{"title":"十五分钟逻辑学","content":"\n- 记住：**逻辑追求的是确定性**\n## 第一章 入门\n### 逻辑学是什么?\n#### 什么是逻辑\n 逻辑是：\n- 1. 指客观事物的规律，如“大自然有其内在的逻辑”\n- 2. 特殊的理论， 如“侵略者奉行的是强盗逻辑”\n- 3. 指**思维的规律，规则**\n- 4. 指逻辑学这门科学\n    - 逻辑 =\n        - 思维的规则、规律、形式、结构……\n    - 语言与逻辑的关系\n        - 逻辑离不开语言，思考就如同自己说话。\n        - 语言有区域性，但逻辑没有\n        - 区分语法错误和逻辑错误\n       \n#### 什么是逻辑学\n逻辑学是**研究思维的规律的科学**\n**目的**\n- 揭示人脑思维的规律\n**对象**\n- 人脑的思维\n**方法**\n- 通过研究人类的语言\n\n我们在表述的时候可能会省略逻辑结构词（因为……所以，只要……就等），但思考的过程中不会省略\n##### 逻辑学的分类\n- **形式逻辑学**\n- **辩证逻辑学**，基于形式逻辑学\n\n#### 什么是思维\n##### 思维\n思维是**人的理性认识**\n- 理性认识与感性认识或情感体验不同：\n    - 感性认识：感知觉、表象\n    - 理性认识：概念，判断，推理\n    - 情感体验：喜怒哀乐\n##### 思维的三种类型\n- **概念**，有实际含义的\n- **判断**，对思维中的某个对象有所断定\n- **推理**，基于一个或一些判断为前提，作出另外的判断\n##### 思维的规律是\n- 人的大脑对事物的认识活动，是借助概念、判断和推理等思维的形式进行的。\n- **思维的过程**就是运用概念作判断和推理的过程\n##### 如何理解思维的形式和内容\n- ![image.png](../attachments/image_1640974960708_0.png)\n- 如果要用逻辑反驳一个观点，首先应该攻击大前提\n\n### 如何学习逻辑学\n#### 1、用逻辑去怀疑一切，养成用逻辑思考的自觉意识\n- 广告词啊\n#### 2、始终记住逻辑追求的是确定性\n- 什么是逻辑追求的确定性\n    - ![image.png](../attachments/image_1641120712420_0.png)\n- 例子\n    - 官话里的积极性，主动性，创造性，就没有明确的定义\n- 避免**循环定义**，循环定义在逻辑学中是无效定义\n- **循环论证**是无效论证\n\n## 第二章 逻辑思维基本规律\n### 概述\n- 思维/逻辑的三种基本形式：概念、判断、推理\n- 三种基本形式的共性，也称为逻辑思维的基本规律：\n    - 同一律\n    - 矛盾律\n    - 排中律\n### 同一律\n- 原初的定律，另两条定律都是由它推出来的\n- 违反同一律：歧义\n    - ![image.png](../attachments/image_1641146250520_0.png)\n#### 什么是同一律\n- **在同一思维过程中，每一思想与其自身必须保持同一**\n- 公式：A就是A; A=A\n    - A可以是概念，也可以是判断\n- 不能把不同的东西当成同一个，也不能把同一个东西当成不同的\n- 同一律保证了思维的确定性\n\n#### 违反同一律的情况：\n- 转换论题（非故意），偷换论题（故意）\n- 转换概念（非故意），偷换概念（故意）\n- 把人的认识和物体本身混淆\n    - 错误：人看到颜色，所以物体存在颜色\n    - ![image.png](../attachments/image_1641147308986_0.png)\n### 矛盾律\n- 公式： $A\\neq 非A$\n- 同一律 = 矛盾律\n- 不能既表达肯定，又否定这种肯定\n#### 什么是同一思维过程或同一确定的前提\n- ![image.png](../attachments/image_1641227168668_0.png)\n#### 直接断定导致的矛盾\n- 这是苹果，又不是苹果\n#### 间接推论导致的矛盾/悖论\n- 上帝万能悖论。\n- **悖论**： 悖论是这样的一类判断，由这一判断的真可以得出它是假的，反之亦然。\n#### 辩证法？\n- ![image.png](../attachments/image_1641228568560_0.png)\n- ![image.png](../attachments/image_1641228582945_0.png)\n- ![image.png](../attachments/image_1641228618980_0.png)\n- ![image.png](../attachments/image_1641228699426_0.png)\n- ![image.png](../attachments/image_1641228786574_0.png)\n### 排中律\n- 在两个矛盾的观点中，必有一个是成立的\n- 公式：$A或者非A$\n- 同一律=矛盾律=排中律，都在保证思维的确定性\n- 注意：\n    - 排中律针对两个互为矛盾的思想或观点而言\n    - 排中律要不能都否定\n    - 排中律要求必选其一\n- ![image.png](../attachments/image_1641229631598_0.png)\n- 如果基于现有的确定前提不能得出相应的确定的结论，就直接说不清楚\n- ![image.png](../attachments/image_1641230187165_0.png)\n- 排中律解逻辑题黑科技：互为矛盾必有一真\n    - ![image.png](../attachments/image_1641230375910_0.png)\n### 充足律\n#### 什么是充足律\n- 充足律也叫因果律。指**任何判断都必须有充足的理由**\n- 充足律认为，任何事物的存在都有其充足根据，任何事物都不能自我解释，没有什么事物是其自身存在的鸢原因\n- 语言上表现为：因为所以\n- 循环论证就是一种违反充足律的论证\n## 第三章 概念\n### 概述\n#### 什么是概念\n- 概念是**反映对象本质属性的思维方式**\n    - 可以是真实存在的，也可以是想象的\n    - 可以被什么思维所思考的对象\n- **本质属性**把一类对象与他类对象区别开来, 但思维中的本质属性不一定就正确反映了客观事物的本质属性\n#### 概念和语词\n- 概念存在于思维系统，有对应语词\n- 语词存在于语言系统，不一定有对应概念\n#### 概念的内涵和外延\n- **内涵**：反映概念中对象的本质属性，习惯上称为含义。“是什么含义?”\n- **外延**：具有概念所反映的本质属性的对象。“指的是什么?\"\n- 例：「人」\n    - 内涵：能使用文字符号的动物 （这是人的一个定义）\n    - 外延：世界上所有的人\n- **「概念要明确」**就是明确概念的内涵和外延\n- 内涵决定外延\n- 内涵不同的概念，外延却可能相同：等边三角形和等角三角形\n- 只用**内涵和外延都相同**，两个概念才能算作同一个\n### 概念间的关系\n- **全同关系**：两个概念的**外延**是全部重合的\n- **从属关系**：一个概念的**外延**包含另一个概念的外延。大的概念叫**属概念**，小的叫**种概念**\n- **交叉关系**：两个概念的**外延**部分重合\n- **全异关系**： 两个概念的**外延**没有任何重合。分为两种：\n    - **矛盾关系**：两个全异的概念的并集等于两者的属概念。\n    - **反对关系**：两个全异的概念的并集不等于两者的属概念。还有其他（中立）概念。\n- ![image.png](../attachments/image_1641296579402_0.png)\n### 明确概念的逻辑方法\n#### 明确概念就是明确其内涵和外延\n- 三种方法:\n    - **定义**:明确内涵\n    - **划分**:明确外延\n    - **限制和概括**: 明确内涵和外延的关系\n#### 定义\n- **定义**由三部分组成:\n    - 被定义项(主语)\n    - 定义联项(谓语)\n    - 定义项(宾语)\n- 被定义概念 = 种差+临近的属 (种差加属)\n    - 1. 首先确定被定义概念反映的对象属于哪一个**属**\n    - 2. 把被定义概念和属中的其他比较, 找出被定义概念所反映对象与其他对象之间的差别, 即**种差**. **种差即概念的本质属性**.\n    - ![image.png](../attachments/image_1641302743973_0.png)\n- 定义的**核心**是必须将不同的对象区别\n    - ![image.png](../attachments/image_1641303139600_0.png)\n- 定义的**规则**\n    - 定义项与被定义项的外延必须相等(同一律)\n    - 禁止循环定义\n    - 一般用肯定的语句形式\n        - ![image.png](../attachments/image_1641307516729_0.png)\n    - 不得使用含混的言辞或比喻\n- 概念的建立过程\n    - 人对外部世界的认识过程，是先认识基本概念，再建立概念体系。基本概念的定义，不能使用其本身的概念，或者其上概念体系的概念，而只能用其外的概念定义，否则必然出现循环定义。\n    - 比如一个小孩，先认识铅笔，橡皮，再建立文具的概念。也就是从小概念到大概念。\n    - 比如数学本身的正确性交由**元数学**研究，就是用其体系外的概念。\n#### 划分\n- 如何得知一个概念的内涵是否被正确定义了？\n    - 以此内涵为标准，看看满足此标准的对象是否正确（寻找是否有反例）。\n    - **什么是划分**\n        - 把一个大类分为若干小类，小类概念都具有大类概念的属性\n        - 划分的标准必须相同\n        - 所有小类的外延是大类的外延的Partition(集合划分)\n- [[亚里士多德]]《四因说》对西方哲学的划分\n    - ![image.png](../attachments/image_1641308371875_0.png)\n    - **唯心主义**主张，物质是源自于心灵，因此只有心灵是真实的。\n        - 客观唯心和主观唯心的区别：客观不再强调自己内心就是法则，而是把法则归于自己身外的一个不存在的抽象物体，或者概念\n    - **物理主义**认为，心灵是一种物理现象，由身体组织的运作而产生，提出心身（mindbody）一体论。\n#### 限制和概括:明确内涵和外延之间的关系\n- **限制**: 增加内涵则减少外延, 或减少外延则增加内涵, 的两者之间的关系\n- **概括**: 反之\n- 外延越大, 内涵越小；外延越小, 内涵越大 (成反比)\n- 这种关系叫**反变关系**\n### 概念的种类\n- 老师说, 讲这一章, 只是因为所有的逻辑学课本上都会有这一章\n#### 分类的一般性原则\n- 分类的目的仅仅是源于人的某种需求. 有了标准, 才有所谓的分类.\n- 分类的标准不是唯一的, 但在某一次分类中, 标准必须唯一\n- 不同的分类标准没有什么必然联系\n#### 概念的种类概述\n- 根据**外延的数量**, 可分为:\n    - **单独概念**, 只有一个对象, 如「黄山」, 「杜甫」\n    - **普遍概念**, 不只一个对象, 如「国家」, 「城市」\n- 根据概念指的是**某类事物还是该类事物以外的事物**, 可分为:\n    - **正概念**, 如「金属」, 「有性繁殖」\n    - **负概念**, 如「非金属」, 「无性繁殖」","lastmodified":"2023-06-14T20:17:56.9520809+02:00","tags":[]},"/project/%E6%96%AD%E5%A2%A8%E5%AF%BB%E5%BE%84":{"title":"断墨寻径","content":"\n## Intro\n\n问自己几个问题：\n- 一个学习方法高效，为什么高效？\n- 学会了方法，该什么时候使用，失效的时候，又该怎样调整？\n\n系列目标：\n- 学习是什么？\n- 讲清楚学习行为的目标，让学生能根据目标设计符合自己的做题方式、学习方式、记笔记方式和听课方式等。\n\n## 01 记忆学习与目标学习\n**信息**\n- 含义：描述一个情况\n- e.g. 2 是偶数\n- 需要「记忆」，目标是「重现」\n    \n**知识**\n- 含义：描述同一类问题的所有情况，包括从未提及的新情况\n- e.g. 所有能被 2 整除的数都是偶数\n- 需要「学习」，目标是「生成」「泛化」\n\n学习与记忆\n- 判断一个行为是学习还是记忆，看该行为是否能解决新情况\n- 并不是学习比记忆高级，而是二者有不同的目标\n- 小时候的学习通常需要记忆，但这种方式在后来的学习中不那么适用。高考实际上是一个在有限时间内，比拼泛化能力的游戏\n- **有意义学习**：学习材料 -\u003e 泛化\n- **机械记忆**： 学习材料 -\u003e 背诵材料\n- 在学习范畴中，**机械记忆**指把本应用于泛化的材料记忆下来，使学习材料失去了其用有的意义的行为\n  \n## 02 指令学习与归纳学习\n- 不同的建构方式（掌握规律的方式）\n    - 指令学习\n    - 归纳学习\n    \n#### 指令学习\n- 含义：通过概念、规律、共性的**语言**描述学习\n- e.g. 看书，记笔记\n- 是学校里最常见的，常见得令人觉得除了这种方式都不叫学习。\n- 实际上，是人脑**最不擅长**的一种建构方式\n\n#### 归纳学习\n- 含义：通过观察多个实际案例，让大脑自动找到不同实例中的共性，用共性推测从未见过的情况怎么处理\n- e.g. 如何学会使用遥控器，手机按键的作用\n- 出现的时间非常古老，是人和动物共有的学习方式。归纳学习不需要依赖语语言。\n- 归纳的过程是无意识的，自动的\n\n##### 为什么人类非常擅长归纳学习，却还需要指令学习？\n- 人不可能见过所有情况，容易以偏概全\n- 指令学习更精准，全面，只是不容易理解\n- 指令学习能够 get rig of 直接经验， 能够学习间接知识\n\n##### 指令学习和归纳学习结合使用\n- 「指令学习」大致确定规律\n- 「归纳学习」帮助大脑理解和建构规律\n- 对于较难的知识，以「归纳学习为主，指令学习为辅」\n- 指令学习就像绘画时底稿，防止大脑自动归纳的规律偏离客观规律太远；归纳学习就像填充和上色，有底稿会更轻松\n- e.g. 应试教育，做题，理解定义，再做题，再理解定义，反反复复。而不是背定义，背题。\n\n##### 什么是「理解」？\n- To understand is to perceive patterns. —— Isaiah Berlin\n- 理解即是感知模式。——以赛亚·伯林\n- 模式：可重复的共性\n\n## 03 欠拟合和过拟合\n\n#### 拟合\n- 「从旧情况建构一个规律，使这个规律能(尽可能地)符合所有旧情况」的过程叫**拟合**\n- 旧情况(已见过的情况)也叫**经验**\n- 拟合不等于学习，拟合可确保重现，不能确保泛化\n#### 欠拟合\n- 拟合出来的规律连旧情况都无法满足\n- 解决方法：足够多的训练\n#### 过拟合\n- 拟合出来的规律可以满足旧情况，但无法预测新情况，仅仅是以偏概全的局部规律，损失了通用性\n- 解决方式：1. 搜集更多经验；2. 增加规律的通用性（奥卡姆剃刀：如无必要，勿增实体），如果拟合出多个规律，选择最简单的规律，是最通用的\n#### 例子：\n- 做题求快求多 -\u003e 欠拟合\n- 做题求每题都牢 -\u003e 过拟合\n- 合适的方法：做完题要总结\n#### 双例比较法\n- 1 选定知识\n- 2 指令学习\n- 3 做练习题\n- 4 归纳比较：(key)做完两道题后，停下来比较两道题的中该知识点的共性和差异性，同时再去理解知识点的讲解\n- 5 测试新题\n- 重复 2-5\n## 04 可泛化性和有效范围\n- 问题：学了很多知识(道理)，却无法应用。（表现：说起来什么都懂，却光说不做）\n\n**原因1：有些道理不是知识，知识必须具有可泛化性**\n- 知识付费的“套路”：\n    - ![image.png](../attachments/image_1645542717842_0.png)\n    - 因为规律是根据所讲故事总结的，所以必然完美拟合故事，听起来很有道理\n    \n**原因2：知识的可泛化范围是有限的**\n- 知识 $\\neq$ 永恒真理，只能确保在特定条件下泛化\n- e.g. 牛一的限定条件是「某物体所受外力为零」。（牛顿第一定律：任何物体都要保持匀速直线运动或静止状态，直到外力迫使它改变运动状态为止。）\n- e.g. 经济学的基本假设：理性人假设和完全信息假设\n- **知识有使用范围和限定条件**\n\n## 05 有效实例和有效描述\n- 问题：看不懂书/学习资料，是智商问题吗？\n#### 完整实例和不完整实例\n- 有因有果，有问有答，这叫完整实例\n- 不完整的实例输入，比如，只做题不看答案，只听一段听不懂的听力，不去看意思\n#### 描述性材料作为实例\n- 要作为有效实例，就需要了解其中每个词的意思\n- 如果描述性材料中的专有名词不理解，那这个材料就是无效的\n- ![image.png](../attachments/image_1645543849650_0.png)\n- 中文的特性容易使人直接揣测词语的意思，形成似懂非懂的状态\n- **遇到专有名词，要追溯含义/遇到很多字母的公式，理解每个字母所指代的概念**\n\n## 06 材料瓶颈与模型瓶颈\n- 问题：明明都是有效材料，为什么学习却没有提升？\n#### 由材料带来的瓶颈\n- 瓶颈的出现源于泛化的特性。泛化是通过已见情况预测未见情况。当遇见的材料多了，就更容易遇见重复材料。\n- 就像抽卡，持有多了，就更容易抽出重复的。\n- 边际效用递减\n\n##### 学习的实际案例\n- 「广义上的学习」定义：学习是指由经验引起的个体知识或行为的相对持久的变化。——伍尔克福教育心理学（第12版）\n- 学习这一知识点，不是背诵下来，而是利用这句话建构一个映射，来判断某个情况是否属于广义上的学习\n- ![image.png](../attachments/image_1645557934440_0.png)\n- 图：绿色属于无意识不好的变化，根据新材料，仍会归为广义上的学习\n- 当一个材料不够时，就需要新的材料\n\n#### 瓶颈的另一成因：固守旧认识\n- 对新材料的抗拒带来的瓶颈\n- 人的生存依赖于已有的认识，所以必然会保护自己已建构的认识\n- 《地穴寓言》，囚徒面对新认知就是愤怒的，认为玷污了现有的“世界”\n- 让人接受新认识的解决思路：\n    - **用实例材料来让大脑意识到已有的认识是不足的，解除抗拒**\n    - 相对来说，大脑对实例性材料没有描述性材料那么抵触。\n    - **苏格拉底式提问**抛出新情况，让对方用现有认识预测，再展示他的预测不符合实际情况(辩论中常用)\n    - ![image.png](../attachments/image_1645558505820_0.png)\n## 1-6 总结\n- ![image.png](../attachments/image_1645559073503_0.png)\n\n## 07 存储位置和存储过程\n- 问题：如何顺应大脑的特性学习\n#### 知识存储\n- 学习与神经细胞间形成的突触有关，但不是突触越多越好\n- 大脑建构的规律是由神经细胞所形成的网络实现，网络通过电信号的频率告诉身体怎么做，电信号的频率受神经细胞之间的突触结构所控制，如果突触结构不合适，就无法生成正确的电信号、**总结：在细胞层面，学习相当于让特定的神经细胞形成适合所学任务的正确结构。**\n- ![image.png](../attachments/image_1645559550656_0.png)\n- 形成特定结构需要有效的训练\n- 大脑大规模调整结构的时间段正是睡眠期间\n- 对于复杂的知识，神经细胞也需要多次迭代来形成一个最合适的(普遍性)结构\n\n## 08 有效训练和精细加工\n- 问题：什么是(学习的)有效训练？如何刺激相关神经细胞群？\n- 方法\n    - 想象和观察：有效\n    - 实际执行**并得到结果和反馈**：全面高效，最好的方式(反馈e.g. 对答案)\n- 对实例性材料，实际执行并反馈是比较容易的\n- 指令性材料: 精细加工\n    - 对大脑结构的调整能力并没有实例性材料那么好\n    - 尤其是大脑不理解时，遗忘速度非常快\n    - **需要自己扩充实例材料**，比如自己提问自己回答，最好能用来解释周围的现象\n    - 「知识不是建立在名字上的」——费曼\n    - 「先把书读厚，再把书读薄」——华罗庚\n        - 读厚：扩充材料\n        - 读薄：建构完成 (误区：读薄可不是说划重点，读薄不是行为，而是一种状态)\n    - (心理学) **精细加工 Elaboration**：举例，建立联系等做法\n## 09 新例预测和表达转述\n- 问题：经过了有效训练，保证了充足睡眠，学习过程就结束了吗？\n- 学习的最后一步：**成果验证**\n    - ![image.png](../attachments/image_1645561105488_0.png)\n    - 验证的是自己的脑中建构的知识\n    - 在细胞层面，「**验证**」相当于给大脑一个反馈信号，告诉大脑不需要再调整结构了\n    - ![image.png](../attachments/image_1645561212946_0.png)\n#### 验证的作用\n- 给大脑反馈\n- 确保建构知识是正确的\n#### 如何验证\n- 如果不能解决新问题，说明所建构的知识没有足够的泛化能力\n- 1. **新例预测**：用实例性材料验证（比较容易）（下图是“身边任意事物”）\n    - ![image.png](../attachments/image_1645561447687_0.png)\n    - “做题保持手感”\n- 2. **转换表述**：指令性材料的验证方法\n    - 同义转换：用自己的话说\n        - ![image.png](../attachments/image_1645561632256_0.png)\n- 「以教促学」即是复习和巩固知识的方法\n    - 教别人的时候，举个例子、换句话说，其实就是新例预测和转换表述\n    - 这就是为什么教别人学得快\n    - 以教促学能够\n        - 确保成果正确\n        - 给大脑发送信号，巩固知识存储\n## 10 内容串讲和学习案例\n- 断墨取自「断墨残楮」\n- 在经验残缺不全，充满未知的条件下，寻找出通用的模式\n- 学习即是对抗未知\n- ![image.png](../attachments/image_1645617505274_0.png)","lastmodified":"2023-06-15T13:17:09.4038996+02:00","tags":[]},"/project/%E6%AD%A3%E5%B7%B1-%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B":{"title":"正己 - 安卓逆向这档事","content":"\n## 一、模拟器环境安装\nsrc\n [《安卓逆向这档事》一、模拟器环境搭建](https://www.52pojie.cn/thread-1695141-1-1.html)\n\n#### 三个文件\n- 雷电模拟器9\n- Magisk\n- LSPosed\n本地文件在d/52\n\n#### 安装雷电模拟器\n在雷电多开器里新建一个并启动, 小磁盘模式可开\n\n#### 模拟器的准备\n- 给模拟器root, 重启\n\t-\u003e模拟器软件设置-其他设置\n- 打开共享文件夹, 把网盘里的 LSPosed 压缩包放进去\n\t-\u003e模拟器右侧更多-*共享文件夹*\n- 如果是最新版本雷电, 要打开磁盘写入\n\t-\u003e模拟器软件设置-性能设置\n\n#### 安装 Magisk Delta\n- 把文件拖进模拟器界面, 安装完打开\n- 永久允许root\n- 安装-请求访问存储-允许, 然后什么都不要做, 后台关掉软件\n- 重新打开-安装\n- 下一步-安装到磁盘(这个是模拟器的特殊选项)\n- 显示 all done 就算安装成功, 重启模拟器\n\n\n#### 设置 Magisk\n设置里打开 Zygisk\n\n#### 安装 LS Posed 模块\n这是一个 hook 框架, 后面会讲\n-  Magisk-模块-从本地安装, 找到共享文件夹的压缩包\n- 重启模拟器, 在 Magisk 模块里看到 `Zygisk-LSPosed` 就是成功了\n\n\n\n## 二、初识APK, 双开, APK汉化, Android Manifest\n\nsrc\n [二、初识APK文件结构、双开、汉化、基础修改](https://www.52pojie.cn/thread-1695796-1-1.html )\nvideo \n https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5\n\n#### 使用的工具\n- MT管理器\n- NP管理器\n- 开发者助手\nMT要会员的可以用NP, 两者都是反编译工具\n\n### APK文件结构\n[00:56](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=56.533764)\n\n7zip可以查看apk\n文件说明\n|文件|注释|\n|---|---|\n|assets目录|存放APK的静态资源文件，比如视频，音频，图片等|\n|lib 目录|armeabi-v7a基本通用所有android设备，arm64-v8a只适用于64位的android设备，x86常见用于android模拟器，其目录下的.so文件是c或c++编译的动态链接库文件|\n|META-INF目录|保存应用的签名信息，签名信息可以验证APK文件的完整性，相当于APK的身份证(验证文件是否又被修改)|\n|res目录|res目录存放资源文件，包括图片，字符串等等，APK的脸蛋由他的layout文件设计|\n|AndroidMainfest.xml文件|APK的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息|\n|classes.dex文件|classes.dex是java源码编译后生成的java字节码文件，APK运行的主要逻辑|\n|resources.arsc文件|resources.arsc是编译后的二进制资源文件，它是一个映射表，映射着资源和id，通过R文件中的id就可以找到对应的资源|\n\n\n### 双开及原理\n[05:11](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=311.87924)\n双开就是让手机系统认为是两个不同的程序, 生成两个数据存储路径\n  - 双开有多种方法, 推荐改包名\nNP双开\n[09:29](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=569.39371)\n\n修改包名会修改签名, 如果原软件做了签名校验, 就会导致闪退\n\n\n### 汉化\n[11:09](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=669.23779)\n\n![[Pasted image 20221011230219.png]]\n还有更偏的.so汉化\n\n##### 第一关\n[13:49](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=829.259804)\n- 运用MT的全局搜索替换已知文字, 直接反编译修改\n- 开发者助手复制不会输入的文字\n- arsc翻译模式, 一键翻译要vip装插件(视频里用的Yandex)\n- dex编辑器++里可搜索\n\n\n### Android Manifest\n[23:29](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1409.766367)\n应用的信息描述文件\n\n|属性|定义|\n|---|---|\n|versionCode|版本号，主要用来更新，例如:12|\n|versionName|\t版本名，给用户看的，例如:1.2|\n|uses-permission android:name=\"\"|\t应用权限，例如：android.permission.INTERNET 代表网络权限|\n|android:label=\"@string/app_name\"|\t应用名称|\n|android:icon=\"@mipmap/ic_launcher\"|\t应用图标路径\n|android:debuggable=\"true\"|\t应用是否开启debug权限|\n\nbilibili 有一个 so 层的签名校验\n\n\n修改 demo 名字和图标\n\t[28:22](https://www.bilibili.com/video/BV18G411j7gV/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5#t=1702.709853)\n\tMT\n\t包-功能-通用编辑\n\n\n\n## 三、初识 smali\n[课件帖](https://www.52pojie.cn/thread-1701353-1-1.html)\n[视频](https://www.bilibili.com/video/BV1G8411e7HT/?spm_id_from=333.788\u0026vd_source=92451653bea4ed324c9bfc0287256aa5)\n\n#### 使用的工具\n- jadx-gui\n- MT管理器\n- 开发者工具\n- 核心破解\n- 模拟器\n\n\n### JVM, Dalvik 和 Art\n\n![[permanent/JVM, Dalvik, Art]]\n\n### Smali 语法\n[[permanent/Smali]]\nsmali 是 Dalvik 的寄存器语言, 由 .dex 反编译而来\n\n### 简单破解方法\n1. 定位\n\t- 搜索关键字\n\t- 抓取按钮id(开发者工具)\n2. 修改\n\t- 修改寄存器的值\n\t- 强制跳转\n\t- 修改判断\n\n##### 第二关\n很简单啦\n在 AK 反编译失败无法查看 Java 源码的情况下, 可以使用 jadx-gui\n有时候还会编译失败, 那就用 MT管理器改\n\n![[permanent/控制流混淆]]\n\n","lastmodified":"2023-06-16T20:04:23.8136705+02:00","tags":["逆向","安卓"]},"/project/%E7%BC%96%E6%9B%B2%E4%BA%8C%E4%B8%89%E4%BA%8B-%E5%92%8C%E5%BC%A6%E5%A4%A7%E5%B8%88%E8%AF%BE%E9%A2%84%E8%AF%BE":{"title":"编曲二三事 - 和弦大师课预课","content":"\n[教案](https://www.kdocs.cn/l/cnem1qq4L4Kj)\n[视频](https://www.bilibili.com/video/BV1mg411978P/)\n\n## 一、音高的相对性\n\n**绝对音高**\n- CDEGAB\n- 这个音是什么\n\n**相对音高**\n- do re mi fa sol la si/1234567\n- 这个音和其他音的关系是什么\n\n**调性**\n- 这首歌是什么调的\n- 根音是哪个\n- e.g. 1 = C, 1 = D\n\n## 二、音程\n\n![[attachments/Pasted image 20230502140959.png]]\n| 音程          | 距离 | 听感                       |\n| ------------- | ---- | -------------------------- |\n| 小二度        | +1   | 刺耳                       |\n| 大二度        | +2   | 不和谐, 有点叠音的厚重感   |\n| 小三度        | +3   | 和谐, 组成和弦的基础音程   |\n| 大三度        | +4   | 和谐, 组成和弦的基础音程   |\n| 纯四度        | +5   | 和谐, 理解五度圈的基础音程 |\n| 增四度/减五度 | +6   | 不和谐, 诡异感             |\n| 纯五度        | +7   | 和谐, 理解五度圈的基础音程 |\n\n## 三、和弦的组成和表示\n\n\u003e **和弦**是音程的叠加\n\n[和弦表](https://www.kdocs.cn/l/ceOjtvWcSCGP?openfrom=docs) 表格很长, 不用都记, 记住常用的, 需要的时候查就好\n\n## 四、和弦级数\n\n\u003e 级数 就是在调性基础上的相对音高\n- 就是前面的 Xm7 中的 X\n\n#### 级数表示法\n例如在 C 调上:\n![[attachments/Pasted image 20230502152614.png]]\n\n在 C 调, 所有白键的都是在调的, 而所有黑键音都是*离调的*\n\n在 1645 进行中, 用非离调和弦代替三和弦 (如1add9-6m7-4Maj7-5sus4), 听感和三和弦的 1645 是差不多的\n\n级数表达法就是这样粗犷的表达方式, 用如 1645 的一个**框架**表示了很多可能的复杂变化\n\n### 和弦分析\n\n1. 这个和弦在什么调上?转换为级数表示. 关注音之的相对位置, 而不是绝对音高\n2. 规律: 和弦进行通常以 1, 4, 6m 开始, 比较少以 2m 开始, 基本不会以 3m, 5 开始\n\n## 五、和弦进行\n\n\u003e 和弦按一定的节奏变化, 就叫和弦进行\n\n\n## 六、其他\n\n\u003e 和弦的听感取决于 根音 + 组成音\n\n而其中, 钢琴伴奏的时候, 会左手根音右手组成音, 右手的部分会在相近的位置把组成音演奏出来而无关顺序, 近似转了位的感觉","lastmodified":"2023-06-14T23:17:17.3761708+02:00","tags":[]},"/project/%E9%A3%9E%E6%A1%A8AI-%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%AE%9E%E6%88%98":{"title":"飞桨AI 大模型应用开发技巧与实战","content":"\nsrc: [飞桨AI Studio - 人工智能学习实训社区](https://aistudio.baidu.com/aistudio/education/group/info/28611)\n\n###  大模型时代的开发者新机遇\n\n![[attachments/Pasted image 20230607171051.png]]\n\n游戏npc逻辑, 游戏音乐美术都可以AI协助完成\n\n应用场景\n过去 -\u003e 大模型时代的现代\n- 写作: 语法纠错-\u003e写作助手\n- 外语: 语言学习平台 -\u003e AI 陪练\n\n算力需求增长也很快\n![[attachments/Pasted image 20230607171617.png]]\n\n![[attachments/Pasted image 20230607171858.png]]\n当时少参数的 GPT 效果还不超过 预训练模式\n\n预训练模型:预训练+适配不同场景(微调)\n\n![[attachments/Pasted image 20230607172158.png]]\n\n知道了历史才知道为什么会通向通用人工智能\n\n![[attachments/Pasted image 20230607172342.png]]\nDecoder: 给前文推后文\nIncoder: 挖空, BERT那一套\n\n1.0败给了 BERT\n\n零样本: 没给平行语料, 比如翻译, 没给中英文对应关系, 在大量文本训练里具备了翻译能力\n\n![[attachments/Pasted image 20230607172826.png]]\nGPT3 是应 API 的形式上线的, 没有开源\n\n3.0 最重要的成果就是上下文学习能力\n\n![[attachments/Pasted image 20230607173055.png]]\nEmergent Ability\n\n![[attachments/Pasted image 20230607173648.png]]\n\n大模型典型问题: 胡说八道 安全性 \n-\u003e alignment 这个是InstructGPT在做\n-\u003e 人类的表达方式 处理方式\n\nStep 1\nSFT: 人去编写prompt datase, 这个 prompt 是按人的价值观或者说类似真实的人的prompt. 然后用这个去做(有监督的) fine tune GPT-3\n-\u003e 结果: \"我是一个人工智能模型, 我回答不了什么什么问题\"\n(范文)\n\nStep 2\n排序答案, 形成奖励模型\n(打分)\n\n![[attachments/Pasted image 20230607174654.png]]\n\n![[attachments/Pasted image 20230607175118.png]]\n\n![[attachments/Pasted image 20230607235530.png]]\n比如说旅游规划拆分成行程和耗费估计\n\n![[attachments/Pasted image 20230607235835.png]]\n\n评定大模型不应该是量化的指标, 而是由人类来感受/大模型能不能像人一样作出反应\n\n产品的竞争应该是大部分都在应用开发层面\n\n生成式其实不限于 text\n\n![[attachments/Pasted image 20230608001710.png]]\n\n### 大模型底层原理与应用开发范式\n\n![[attachments/Pasted image 20230608131859.png]]\n\n![[attachments/Pasted image 20230608132145.png]]\n\n![[attachments/Pasted image 20230608132359.png]]\n\n![[attachments/Pasted image 20230608134234.png]]\n- temperature: 按概率选的时候概率平滑\n- top_p/top_k: 只在前几个选\n- repetition_penalty: 已生成的做一个惩罚, 越大越不可能重复\n\n![[attachments/Pasted image 20230608135041.png]]\n\n![[attachments/Pasted image 20230608140517.png]]\n\n---\n大模型以前的开发\n\n![[attachments/Pasted image 20230608140908.png]]\n\n![[attachments/Pasted image 20230608162902.png]]\n\n---\n\nLLM 时代的开发范式\n\n![[attachments/Pasted image 20230608163133.png]]\n\n---\nprompt 工程\n\n![[attachments/Pasted image 20230608163246.png]]\n\n![[attachments/Pasted image 20230608163438.png]]\n\n![[attachments/Pasted image 20230608163622.png]]\n比如说给一篇使用文档, 问大模型一些问题或者让他找到我遗漏的点\n\n---\nembedding 辅助(外接知识)\n\n![[attachments/Pasted image 20230608163820.png]]\n\n![[attachments/Pasted image 20230608164054.png]]\n\n可以用LLM获取到知识库的embedding\n\n![[attachments/Pasted image 20230608164332.png]]\n\nclient.search 是去获取和这个向量最相关的五篇文档(广义)\n\n---\n大模型微调\n![[attachments/Pasted image 20230608164732.png]]\n\n![[attachments/Pasted image 20230608164753.png]]\n\n![[attachments/Pasted image 20230608164920.png]]\nAPI微调是开发大模型的大厂提供, 让用户以简单的方式微调(背后也是前两种微调)\n\n![[attachments/Pasted image 20230608165245.png]]\n\n![[attachments/Pasted image 20230608165348.png]]\n\n![[attachments/Pasted image 20230608165627.png]]\n\n---\n\n开发者必备能力和工具\n\n![[attachments/Pasted image 20230608165655.png]]\n\n![[attachments/Pasted image 20230608165845.png]]\n\n---\nChatPaper 王荣胜\n\n![[attachments/Pasted image 20230608170303.png]]\n\n![[attachments/Pasted image 20230608170412.png]]\n\n![[attachments/Pasted image 20230608170419.png]]\n\n![[attachments/Pasted image 20230608170842.png]]\n\n![[attachments/Pasted image 20230608170849.png]]\n\n![[attachments/Pasted image 20230608170910.png]]\n\n![[attachments/Pasted image 20230608171023.png]]\n\n![[attachments/Pasted image 20230608171030.png]]\n\n![[attachments/Pasted image 20230608171224.png]]\n\n![[attachments/Pasted image 20230608171333.png]]\n\n![[attachments/Pasted image 20230608171509.png]]\nGradio\n\n![[attachments/Pasted image 20230608171611.png]]\n\n![[attachments/Pasted image 20230608171737.png]]\n\n![[attachments/Pasted image 20230608171813.png]]\n\n![[attachments/Pasted image 20230608172038.png]]\n\n### 用 Prompt 提示词构建你的专属聊天机器\n\n![[attachments/Pasted image 20230616142858.png]]\n\nPrompt 包括指令和上下文, 通常表达了用户期望的任务.\n\nPrompt Engineering 只是优化和开发 Prompt, 并不设计修改和训练模型. 目的是使大模型的输出更加有效.\n\n图中的案例类型:\n- 情感分析\n- 实体抽取\n- 翻译\n\n![[attachments/Pasted image 20230616143349.png]]\n\nPrompt 构造:(推荐顺序)\n- 任务提示\n- 上下文\n- 输入\n- 输出格式\n\n![[attachments/Pasted image 20230616143527.png]]\n\n![[attachments/Pasted image 20230616143622.png]]\n\n构造时:\n- 明确给出任务, 最好是任务名字\n- 给出少量的参考案例(想想[[project/断墨寻径|断墨寻径]])\n\n调整:\n- 直接对话(你忘记了xxx, 请用xx格式)\n- 增加案例\n\n![[attachments/Pasted image 20230616144156.png]]\n\n![[attachments/Pasted image 20230616144258.png]]\n\n(Stable Diffusion 笑话)\n\n![[attachments/Pasted image 20230616144436.png]]\n\n![[attachments/Pasted image 20230616144501.png]]\n\n![[attachments/Pasted image 20230616144534.png]]\n\n![[attachments/Pasted image 20230616144731.png]]\n\n(浇什么呢人工智障???)\n\n![[attachments/Pasted image 20230616144923.png]]\n\n使用技巧:\n- 避免AI感, 避免重复\n- 善用上下文(有上下文的时候就不那么容易重复)\n- 可以通过对话告诉模型以上目的\n\n![[attachments/Pasted image 20230616145421.png]]\n\n![[attachments/Pasted image 20230616145744.png]]\n\n通过paddleNLP?\npackingface?\n\n转到 GPU?\n\nhalf -\u003e 半精度转变\n\n![[attachments/Pasted image 20230616145954.png]]\n\n![[attachments/Pasted image 20230616150340.png]]\n\n可以改进的角度:\n- 实时修改 input\n\n代码核心是箭头指的那\n\n![[attachments/Pasted image 20230616150542.png]]\n\nfastapi/django/go 等都可以部署\n\nchatGLM 支持微调\n\n![[attachments/Pasted image 20230616150939.png]]\n![[attachments/Pasted image 20230616151001.png]]\n\n![[attachments/Pasted image 20230616151012.png]]\n\n![[attachments/Pasted image 20230616151133.png]]\n\n![[attachments/Pasted image 20230616151237.png]]\n\n40分左右喵喵AI案例\n\n做了「遗忘」, 在超过一定长度时砍掉最前面的一段, 避免显存爆炸. 没有被遗忘的内容在每一轮都会作为再次作为输入使用\n\n显存会更快, CPU 会稍微更慢\n\n![[attachments/Pasted image 20230616152110.png]]\n\n47分问答","lastmodified":"2023-06-16T17:11:00.019979+02:00","tags":["AI"]},"/project/3Blue1Brown-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%9A%84%E6%9C%AC%E8%B4%A8":{"title":"3Blue1Brown - 线性代数的本质","content":"\n\u003e 作者：3Blue1Brown\n\u003e 来源：Bilibili\n\n## 01 - 向量究竟是什么？What exactly a vector is\n\n- （在坐标轴里，物理学角度），向量是沿着某个特定方向的运动。这就可以解释两个向量相加为什么是头尾相连。\n-   向量数乘被称作 **scaling** 缩放，而用于缩放的数字称为 **scalars** 标量。\n-   线性代数围绕两种基本运算：向量加法和向量数乘\n\n## 02 - 线性组合、张成的空间与基 Linear combinations, span, and bases\n\n-   另一个视角：把向量看成标量 $\\hat{\\imath}, \\hat{\\jmath}$ 的延伸（伸展）\n    -   $\\hat{\\imath}$ 是\\[1,0], $\\hat{\\jmath}$ 是 \\[0,1]，两者是**基向量**, basis vectors\n-   如果选择两个新的基向量（两个基向量要不在一条线是上）（也不能的是零向量）\n-   给定向量的**张成空间span**, 即给定向量通过线性组合( $a\\vec{v} + b\\vec{w}$ )能形成的向量的集合\n    -   换句话说，通过对给定向量的向量加法和向量数乘能得到的向量集合\n-   三维空间中两个不共线的向量的张成空间是一个平面，而三个不共面的向量的张成空间整个三维空间\n-   \\*\\*线性相关(linear dependent)\\*\\*的向量指的就是二维共线或者三维共面的向量，他们不能张成更多的空间，是多余的\n-   \\*\\*线性无关(linear independent)\\*\\*的向量能够张成空间添加新的维度\n-   向量空间的一组**基(basis)是**张成该空间的一个**线性无关**向量集\n\n## 03 矩阵如同线性变换 Matrices as Linear transformations\n\n### Linear transformation\n\n-   **transformation** -\u003e function\n-   input-output relation\n-   \"transformation\" for movement: move input vector to output vector\n-   **linear**: line remains line, without curves; origin remains fixed. -\u003e Grid lines remain parallel and evenly spaced(保持平行并等距分布)\n-   线性变换实际上是改变基向量\n\n\u003c!----\u003e\n\n-   线性的(准确)定义\n\n    ![](attachments/image_1645732742278_0_ZD_1dCh8nS.png)\n\n    ![](attachments/image_1645732795014_0_0FoljEi7SG.png)\n-   一个 2x2 矩阵实例\n    -   已知 $\\vec{v} = \\left[ \\begin{array}{c} -1 \\\\ 2 \\end{array} \\right]$ , 即 $\\vec{v} = -1\\hat{\\imath} + 2\\hat{\\jmath}$\n    -   应用线性变换 $\\hat{\\imath} = \\left[ \\begin{array}{c} 1 \\\\ -2 \\end{array} \\right], \\hat{\\jmath} = \\left[ \\begin{array}{c} 0 \\\\ 3 \\end{array} \\right]$\n    -   则此时 $\\vec{v} = -1\\hat{\\imath} + 2\\hat{\\jmath} = -1\\left[ \\begin{array}{c} 1 \\\\ -2 \\end{array} \\right] + 2\\left[ \\begin{array}{c} 0 \\\\ 3 \\end{array} \\right] = \\left[ \\begin{array}{c} 5 \\\\ 2 \\end{array} \\right]$\n    -   写成矩阵计算就是 $\\left[ \\begin{array}{cc} 1 \u0026 3 \\\\ -2 \u0026 0 \\end{array} \\right] \\ \\left[ \\begin{array}{c} -1 \\\\ 2 \\end{array} \\right] = \\left[ \\begin{array}{c} 5 \\\\ 2 \\end{array} \\right]$\n    ![](attachments/image_1645731904137_0_PZCo-UQRUV.png)\n\n    ![](attachments/image_1645731955736_0_GZh5mmcAl-.png)\n-   所以你可以很容易地看出旋转\n\n    ![](attachments/image_1645732151891_0_m1zea5iEaN.png)\n\n    ![](attachments/image_1645732365177_0_7YF_bpPR75.png)\n-   行和列的线性相关也很容易想象\n\n    ![](attachments/image_1645732151891_0_7QppyNAiOx.png)\n\n## 04 矩阵乘法与线性变换复合 Matrix multiplication as composition\n\n-   两个矩阵相乘可以看作两次连续的线性变换\n    -   如果两个线性变换组合的效果和一个线性变换的效果相同\n    -   那么这两个线性变换的矩阵相乘等与另一个线性变换的矩阵\n    -   变换的顺序是从右往左\n\n        ![](attachments/image_1645733878066_0_HjUnZXGGPi.png)\n\n        ![](attachments/image_1645733889158_0_WxfY9y6fAY.png)\n-   **矩阵乘法满足结合律**：线性变换的顺序不会影响结果\n\n## 附注1 三维空间中的线性变换 Linear transformations in three dimensions\n\n## 05 行列式 The determinant\n\n-   线性变化后，某一特定区域的面积如何变化？\n    -   行列式的值就是面积变化的倍数\n    -   或者说，一个 m行n列的行列式，计算的是 n个m维向量围成的空间大小\n-   想知道**行列式的值是否为0**，只要看是否线性相关（二维的时候面积为0，三维的时候体积为0）\n-   如果行列式的值出现**负数**，说明整个空间被翻转过了(The Orientation has been reversed)\n-   Parallelepiped 平行六面体\n-   三维中的正方向需要用到右手定则：食指 $\\hat{\\imath}$ , 中指 $\\hat{\\jmath}$ , 拇指 $\\hat{k}$\n-   行列式计算公式**理解**\n    -   如果 b, c 都为 0，放大的倍数就像计算正方形\n\n        ![](attachments/image_1645816109476_0_7cYMvqo6T4.png)\n    -   如果只有 b 为 0，平行四边形的计算公式还是一样的\n\n        ![](attachments/image_1645816173872_0_UXZzmev8OQ.png)\n    -   如果你想思考全不为0\n        -   下面的行列式即是在计算黄色部分的面积\n        ![](attachments/image_1645816229546_0_19-tY74GUt.png)\n    -   平行六面体的体积\n\n        ![](attachments/image_1645816647973_0_r5eLIjL_o5.png)\n    -   行列式的**计算**\n\n        ![](attachments/image_1645816563647_0_9_Z8cGVTGE.png)\n\n## 06 逆矩阵，列空间，秩与零空间 Inverse matrices, column space, rank and null space\n\n-   高斯消元法 Gaussian elimination\n-   行阶梯型 Row echelon form\n-   **线性方程组** Linear system of equations\n    -   $A\\vec{x} = \\vec{v}$ 的含义：寻找一个未知向量 $\\vec{x}$ , 使得 向量 $\\vec{x}$ 在经过矩阵 $A$ 的线性变换后，与向量 $\\vec{v}$ 重合\n    ![](attachments/image_1645817809475_0_se71KxpvSN.png)\n    -   因此，如果矩阵的秩小于列数，或者行列式等于0（相当于线性变换会导致降维），这个线性方程组是无解的\n    -   所以： $\\det(A) \\neq 0$ -\u003e $A^{-1}\\ exists$ , 没有逆矩阵的矩阵就是降维了\n        -   但 $\\det(A) = 0$ 时依然可能有解，这是因为向量 $\\vec{v}$ 刚好就落在降维后的空间里\n        ![](attachments/image_1645818714324_0_d5z34Ywksn.png)\n-   **逆矩阵**就是逆向的线性变换\n    -   比如说顺时针旋转90度的逆矩阵就是逆时针旋转90度\n-   **秩**\n    -   秩：输出空间的维数。一个n维矩阵最大的秩是n，这时称这个矩阵满秩(full rank)\n    -   rank 1 = line, rank 2 = plane, rank 3 = space\n-   **列空间**\n    -   列空间 Column space \u003c=\u003e 列张成的空间 span of columns\n    -   秩更精确的定义是列空间的维数\n    -   零向量一定在列空间中，因为原点fixed\n-   零空间\n    -   \\= Null space = 核 Kernel\n    -   变换后落在原点的向量集合，被称为矩阵的**零空间**或**核**\n    -   $A\\vec{x} = \\vec{v}$ 中，如果 $\\vec{v}$ 是零向量，那零空间就是 $\\vec{x}$ 的所有解\n\n## 附注2 非方阵 Nonsquare matrices\n\n-   非方阵，比如3x2矩阵，就是把二维的两个基向量，转转两个三维基向量\n\n## 07 点积与对偶性 Dot products and duality\n\n-   几何解释\n    -   将 $\\vec{w}$ 投影在 $\\vec{v}$ 所在的直线，将 $\\vec{w}$ 的投影长度与 $\\vec{v}$ 的长度相乘\n    ![](attachments/image_1645987844850_0_FIRzhVW_VE.png)\n    -   所以当两个向量垂直时，点积是0\n-   Scaling 对点积的影响是线性的\n-   矩阵向量乘积与点积的关系\n    -   将二维向量投射到数轴上，数轴的基向量是 $\\hat{u}$\n    ![](attachments/image_1645988629950_0_98-84qfbzT.png)\n\n    ![](attachments/image_1645988766076_0_9LMy872QIb.png)\n-   **对偶性 Duality**\n    -   super tricky to define\n    -   自然而出乎意料的对应关系\n    -   每当你看到一个（多维）空间到数轴的线性变换时，它都与那个空间的唯一的向量相关\n\n## 08 以线性变换的眼光看叉积 Cross products in the light of linear transformations\n\n-   正方向\n    -   乘号右边的向量在左边的向量的逆时针方位时得到的面积为正\n    ![](attachments/image_1645989491342_0_54bJgYC8kz.png)\n    -   这个式子计算出的面积也等同于将两个向量列成2x2矩阵，计算行列式得到的值\n-   **真正的叉积**是通过两个三维向量生成一个新的三维向量\n\n    ![](attachments/image_1645990163550_0_ZFyZ-wVakO.png)\n-   用行列式计算叉积\n\n    ![](attachments/image_1645990321322_0_jX-NqdDd8l.png)\n\n    ![](attachments/image_1645990573061_0_rUqAk22mju.png)\n-   理解这个变换\n\n    ![](attachments/image_1646123335827_0_XslTMusE1e.png)\n    -   将第一个向量看成变量，得到一个**线性**函数\n    ![](attachments/image_1646123495327_0_jdKAKrS50c.png)\n    -   找到一个 $\\vec{p}$ , 使得\n    ![](attachments/image_1646123706211_0_0noHTNriVT.png)\n-   我们找到的这个 $\\vec{p}$ , 在看起来是这样的，垂直于 $\\vec{v}$ 和 $\\vec{w}$ 形成的平面。将向量变量(白)投影到 $\\vec{p}$ 所在的直线上，就能计算这个平行六面体的体积\n\n## 09 基变换 Change of basis\n\n-   如何转化两个基向量不同的坐标系统\n    -   我们用了标准基向量，Jennifer: $\\hat{\\imath} =\\left[ \\begin{array}{c} 2 \\\\ 1 \\end{array} \\right], \\hat{\\jmath} = \\left[ \\begin{array}{c} -1 \\\\ 1 \\end{array} \\right]$\n    ![](attachments/image_1646125144380_0_HloqF2m7Nz.png)\n    -   向要反过来就求这个矩阵的逆矩阵\n-   旋转90度如何转化给另一个坐标系统\n    -   在自己的坐标上逆时针旋转90度，也就是乘上 $\\left[ \\begin{array}{cc} 0\u0026-1 \\\\ 1\u00260 \\end{array} \\right]$\n    -   需要\n        -   用我们的语言描述对方的坐标系统\n        -   应用变换矩阵\n        -   用对方的语言描述这个结果\n        ![](attachments/image_1646125918845_0_ZneQBBpkNb.png)\n    -   前三个矩阵相乘，可以看做直接应用的函数/变换矩阵\n-   表达式 $A^{-1}MA$ 按时了一种数学上的转移作用\n\n    ![](attachments/image_1646125918845_0_ymspkqcBf7.png)\n\n## 10 特征向量与特征值 Eigenvectors and eigenvalues\n\n-   要求基础知识牢固\n-   向量在空间变换后通常会离开它原本张成的空间\n-   特殊的向量不会离开，如 $\\hat{\\imath}$\n-   矩阵的**特征向量**，就是这些特殊向量，在变换之后不离开原本张成的直线。特征向量不一定存在\n-   **特征值**，就是特征向量在变换中拉伸或压缩比例的因子，可以为负\n-   三维空间中，特征向量就是变换的旋转轴\n    -   旋转的特征值必定为1\n    -   说绕着某某向量旋转多少度，比给出一个旋转的变换矩阵，直观得多\n-   求矩阵 $A$ 的特征向量和特征值\n    -   即求解 $\\lambda$ 和 $\\vec{v}$ ,使下面这个等式成立\n    ![](attachments/image_1646127914357_0_Zr4I7sis-Z.png)\n\n    ![](attachments/image_1646128043085_0_cmsrVb24rE.png)\n\n    ![](attachments/image_1646128070766_0_Ms9MtwFDh1.png)\n    -   $\\vec{v}$ 非零，所以需要找一个特征值 $\\lambda$ , 使行列式为0，也就是将空间降维\n    ![](attachments/image_1646128070766_0_AsspQnq3Bw.png)\n\n    ![](attachments/image_1646128383037_0_sBMLvv4S1v.png)\n-   **特征基**，基向量也是特征向量，这时候计算很容易。因为都是缩放操作，变换矩阵是对角矩阵\n\n## 11 抽象向量空间 Abstract vector spaces\n\n函数也可以看作向量乘法 - 比如一个 xxx 的多项式，选定关于 xxx 的基函数为 b0(x)=1b\\_0(x) = 1b0(x)=1, b1(x)=xb\\_1(x) = xb1(x)=x, b2(x)=x2b\\_2(x) = x^2b2(x)=x2, ... - 然后以系数为变量，基函数为基向量\n\n函数的**空间性**: 比如上一个例子中，当前空间就是全体多项式\n\n求导(derivative) 是线性运算\n\n把求导运算转换成矩阵(线性变换)是这样的\n\n![](attachments/image_KOmUMBt6A4.png)\n\n-   **向量是什么**：如果要让已经建立和的理论和概念适用于一个向量空间，那么它必须满足八条公理\n\n    ![](attachments/image_VlnO7P_aJ6.png)\n\n    问向量是什么就好像问数字3是什么一样\n","lastmodified":"2023-06-14T22:46:43.0674302+02:00","tags":[]},"/project/Project-Asteria":{"title":"Project Asteria","content":"\n## 微积分\n- 求一个函数的倒数，就是求它的斜率，因此有 $\\frac{dy}{dx} = \\frac{f(x+\\Delta x)-f(x)}{\\Delta x}$\n- *求导 differentiate* 是一个 *线性算符 linear operator*\n- 幂函数 $f(x)=x^{n}$, 导数是 $nx^{n-1}$\n- Product rule 的推导跟面积是类似的：\n    - ![[attachments/Pasted image 20230512220445.png|200]]\n    - $\\Delta S = f \\cdot g + f \\cdot \\Delta g + \\Delta f \\cdot g$\n- 有了Product rule，就能用 $\\frac{d}{dx} (f(x) \\cdot \\frac{1}{g(x)})$ 推出Quotient rule\n- $e^{x}$:  自然对数$e^{x}$的导数为什么是它本身？将 $\\exp x$ 展开求导就知道了$$\\exp(x) = \\sum^{\\infty}_{n=0}\\frac{x^n}{n!}$$\n- $ln(x)$ : 已知 $e^{x}$ 的导数的导数是它本身，就能求其反函数 $ln(x)$ 的导数:\n    - 令 $y=exp\\ x$ ,  则 $x=ln\\ y$\n    - ∵ $\\frac{dy}{dx} = exp\\ x$\n    - ∴ $\\frac{dx}{dy} = \\frac{1}{exp\\ x} = \\frac{1}{y}$\n- $\\partial$ 称为偏微分算符, 强调对多元函数的求导(其实和微分算符没什么区别)\n- 同上反函数的求导法，可以用三角函数的导数得到反三角函数的\n- 1.8讲了个对方程求导的黑科技:把方程的两边对同一个自变量求导，方程仍然成立\n    - $y=x^{x}$  (求对数)\n    - $ln\\ y = x\\ ln\\ x$   (两边对x求导)\n    - $\\frac{1}{y} \\cdot \\frac{dy}{dx} = ln\\ x + 1$\n    - $\\frac{dy}{dx} = y(ln\\ x+1) = x^{x}(ln\\ +1)$\n    - 也可以用来解椭圆的切线\n    - 椭圆公式 $\\frac{x^{2}}{a^2} + \\frac{y^2}{b^2} = 1$\n- 什么函数可以求导？断掉的(不连续), 爆掉的(趋于无限, blow up)\n- 对没有断的分段函数，计算分割点的两边的导数，如果相同，就在分割点上可求导\n\n## 复变函数与级数\n- 首先记几个公式：\n1.  $\\sin\\ x$ 和 $\\cos\\ x$ 用$\\exp\\ x$表示出来\n    - $\\sin\\ x = \\frac{1}{2i} (e^{ix} - e^{-ix})$\n    - $\\cos\\ x = \\frac{1}{2} (e^{ix} + e^{-ix})$\n2. 把虚数去掉，就变成了双曲正弦函数和双曲余弦函数\n    - $\\sinh\\ x = \\frac{1}{2} (e^{x} - e^{-x})$\n    - $\\cosh\\ x = \\frac{1}{2} (e^{x} + e^{-x})$\n3. 关系\n    - $\\sin\\ x = -i\\ \\sinh\\ ix$\n    - $\\sinh\\ x = -i\\ \\sin\\ ix$\n    - $\\cosh\\ x = \\cos\\ ix$\n    - $\\cos\\ x = \\cosh\\ ix$\n    - $\\frac{d}{dx} \\sinh\\ x = \\cosh\\ x$\n    - $\\frac{d}{dx} \\cosh\\ x = \\sinh\\ x$\n- $\\sin (x+y)$ 展开式的作图推导 https://zhidao.baidu.com/question/33089867\n- 把三角函数表示成指数可以方便地推导**积化和差公式**\n- 如 $\\sin\\ a\\ \\sin\\ b = \\frac{1}{2} (- \\cos(a + b) + \\cos(a - b))$\n- **级数**是将数列的项依次用加号连接起来的函数\n- **泰勒级数**。它求导就会发现它满足“x = 0 处的值和任意阶导数都与ln(1 + x) 相等”这个条件。泰勒级数的思想可以看妈咪说的泰勒展开式讲解\n- **小量近似**的一个思想是，在 $|x|\\ll 1$ 时，可以把高阶项忽视，只剩下 $a_0 + a_1 x$\n- 当然，每多保留一项就会更精确一点\n- 小量计算的重要公式 $(1+x)^n = 1+ nx$\n- 【练习】求exp ln(1 + x) 的泰勒级数，保留到三阶。结果当然是1 + x。\n\n##  微分方程\n- 补课 常系数线性微分方程\n- 补课 费曼物理学讲义第一卷\n\n## 线性代数\n- 建议阅读: [[project/3Blue1Brown - 线性代数的本质|3Blue1Brown - 线性代数的本质]]\n- 矩阵乘法不满足交换律, 但满足结合律\n- **坐标的旋转操作**:\n    - 如果用矢量 $\\mathbf{P} = \\left[ \\begin{array}{c} x_p \\\\ y_p \\end{array} \\right]$ 表示 $P$ 的坐标,\n    - 矩阵 $\\mathbf{R}(\\theta) = \\left[ \\begin{array}{cc} \\cos \\theta \u0026 - \\sin \\theta \\\\ \\sin \\theta \u0026 \\cos \\theta \\end{array} \\right]$ 表示旋转操作(它的元素是 $\\theta$ 函数),\n    - 那么 $P$ 旋转后的坐标 $\\mathbf{P^{\\prime}} = \\mathbf{R}(\\theta)\\mathbf{P}$\n    - 这是为什么呢?原理就和 $\\sin(x+y)$ 以及 $\\cos(x+y)$ 是一样的. 或者证一下 $\\mathbf{R}(a)\\mathbf{R}(b) = \\mathbf{R}(a+b)$ 就明白了\n- **坐标的缩放操作**:\n    - $\\mathbf{S} = \\left[ \\begin{array}{cc} 2\u00260 \\\\ 0\u00261 \\end{array} \\right]$, $\\mathbf{SP}$ 表示 x 坐标放大两倍, y 坐标不变\n    - $\\mathbf{S^{\\prime}} = \\left[ \\begin{array}{cc} 1\u00260 \\\\ 0\u00262 \\end{array} \\right]$, $\\mathbf{S^{\\prime}P}$ 表示 y 坐标放大两倍, x 坐标不变\n- 这样表示后就可以进行连贯操作:\n    - $\\mathbf{P^{\\prime}} = \\mathbf{R}(\\phi)\\mathbf{S}\\mathbf{R}(\\theta)\\mathbf{P}$\n    - 表示: 把 $P$ 旋转 $\\theta$ 度, 把 x 坐标放大两倍, 再旋转 $\\phi$ 度得到 $\\mathbf{{P^{\\prime}}}$. 虽然直观上应该从右往左计算, 但矩阵满足结合律, 于是可以从左往右\n- **矩阵的换行换列操作**:\n    - $\\mathbf{A} = \\left[ \\begin{array}{cccc} 0\u00260\u0026x\u00260 \\\\ y\u00260\u00260\u00260 \\\\ 0\u0026z\u00260\u00260 \\\\ 0\u00260\u00260\u00261 \\end{array} \\right]$\n    - $\\mathbf{AB}$ 表示, 将 B 矩阵第 3 **行** 乘 x 换到第一行, 第 1 行乘 y 换到第二行, 第 2 行乘 z 换到第三行, 第4行不变\n    - $\\mathbf{BA}$ 表示, 将 B 矩阵第 3 **列** 乘 x 换到第一列, 第 1 列乘 y 换到第二列, 第 2 行乘 z 换到第三列, 第4行不变\n    - 变换矩阵 A 第 i 行 j 列的 1 表示(AB为例) 将 B 矩阵的 第 i 行换成 原本第 j 行\n    - 可以加入连贯操作套餐\n- 有一天爱因斯坦说：两个矩阵相乘，如果有相同的下标就表示求和，求和号可以不写. 比如 $C_{ik} = \\sum_{j} A_{ij}B_{jk}$ 可以写成 $C_{ik} = A_{ij}B_{jk}$\n- 对一个矩阵求导, 相当于对矩阵中的每个元素分别求导\n- 对两个矩阵的乘积求导,, 跟对两个数的乘积求导是一样的\n- 如果两个矩阵 $\\mathbf{A}$ 和 $\\mathbf{A^{\\prime}}$ 相乘得到 **单位矩阵** $\\mathbf{I}$ , 那么 $\\mathbf{A}$ 和 $\\mathbf{A^{\\prime}}$ 互为**逆矩阵**\n- 三阶行列式 $$ \\left| \\begin{array}{ccc} a\u0026b\u0026c \\\\ d\u0026e\u0026f \\\\ g\u0026h\u0026i \\end{array}\\right|  = aei + bfg + cdh - ceg - afh - bdi$$  (+\\\\-/)\n- 截止 4.5的第一页\n\n![[attachments/Project Asteria.pdf|Project Asteria]]","lastmodified":"2023-06-14T22:50:14.5399796+02:00","tags":[]},"/project/gmail-set-auto-forward":{"title":"gmail-set-auto-forward","content":"\n这是一次探索, 后来因设置完转发邮箱需要去转发邮箱点击链接确认而不了了之.\n\n### Google API\n[官方API quickstart](https://developers.google.com/gmail/api/quickstart/python?hl=zh-cn)\n\n[一个 Google API 的教程](https://blog.csdn.net/dingshi7798/article/details/105818987#:~:text=1%20handleClientLoad%20%28%29%20%E5%8F%AA%E9%9C%80%E8%AE%BE%E7%BD%AEAPI%E5%AF%86%E9%92%A5%EF%BC%8C%E5%B9%B6%E5%9C%A81%E6%AF%AB%E7%A7%92%E5%90%8E%E4%BC%A0%E9%80%92%E7%BB%99%20checkAuth%20%28%29%20%E3%80%82%202,%E4%BD%86%E5%B0%86%E7%94%A8%E6%88%B7%E5%91%88%E7%8E%B0%E7%99%BB%E5%BD%95%2F%E6%9D%83%E9%99%90%E6%A8%A1%E6%80%81%E3%80%82%20...%205%20%E4%B8%80%E6%97%A6%E6%89%A7%E8%A1%8C%E4%BA%86%E8%BF%99%E4%BA%9B%E7%B3%BB%E5%88%97%E7%9A%84%E5%8A%9F%E8%83%BD%E5%B9%B6%E4%B8%94%E7%94%A8%E6%88%B7%E5%B7%B2%E9%80%9A%E8%BF%87%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%B1%E5%BA%94%E8%AF%A5%E5%A7%8B%E7%BB%88%E5%9C%A8%20loadGmailApi%20%28%29%20%E5%87%BD%E6%95%B0%E4%B8%AD%E6%89%BE%E5%88%B0%E8%87%AA%E5%B7%B1%E3%80%82%20)\n\n### selenium \n[模拟谷歌邮箱登录](https://blog.csdn.net/qq_44790423/article/details/115494045)\n\n[读取已打开的浏览器 url](https://blog.csdn.net/weixin_43126355/article/details/122405740)\n\n[selenium设置代理](https://zhuanlan.zhihu.com/p/158494380)\n\n[打开新页面的N种方法](https://blog.csdn.net/kinghzking/article/details/122626574)\n\n### pyHook\n安装:\n1. 下载 [swig](https://www.swig.org/download.html)\n2. 解压 swig 并将根目录添加到环境变量\n3. VS 安装工具, 在生成工具的单个组建里找到并安装\n```text\nMSVC v140  - VS 2015 C++ 生成工具\n```\n4. pip install PyHook3\n\n\n","lastmodified":"2023-06-16T19:33:00.9064468+02:00","tags":[]},"/project/lmu-Betriebsystem":{"title":"lmu - Betriebsystem","content":"\n## K1 Das Betribssystem\n\n### 1.1 Einordnung des Machinensprache\n- 机器语言的分类/编排\n\n#### Logische Hierarchie in einem Rechner\n  ![[attachments/image_1638879655684_0.png]]\n- BS: Anwendungsprogramme, Systemprogramme, Betriebssystem\n- RA: Machinensprache, Mikroprogrammierung, Physikalische Geräte\n- Mikroprogrammierung: 微指令集，对硬件解释机器语言\n\n### 1.2 Aufgabe des Betriebssystem\n\n#### Aufgabe des Betriebssystem\n- Komplexitätreduktion\n- Verwalrung und Verteilung(Multiplexing) von Systemressourcen\n    - Time Multiplexing\n    - Space Multiplexing\n- Zugriffskontrolle\n\n#### Kernel Mode and User Mode\n- Systemmodus:\n    - **Privilegiert**.\n    - Zum **Betriebssystem** zählen Programme, die im Systemmodus lafen.\n    - Dazu zählen unter anderem Gerätetreiber, Prozessmanager, Fenstermanager usw.\n- Nutzermodus:\n    - Nicht privilegiert.\n    - Benutzerprogramme laufen im Nutzermodus.\n    \n#### Systemaufruf\n- syscalls\n- Die **Schnittstelle** zwischen Kernel Mode und User mode.\n- Ein Anwendungsprogramme, das nicht direkt auf eine Ressource zugreifen darf, führt dazu einen **Systemaufruf** mit den entsprechenden Parametern aus.\n\n### 1.3 Geschichte der Betriebssystem\n- skipped\n- [[蒋炎岩]]-南京大学“操作系统：设计与实现： P1 [绪论]操作系统的历史\n  https://www.bilibili.com/video/BV1N741177F5?spm_id_from=333.999.0.0\n\n## K2 Programme und Unterprogramme\n\n### 2.2 Unterprogramme und Prozeduren\n#### Offenes Unterprogramm\n- Der entsprechende Programmtext wird an den erfordlichen Stellen ins Hauptprogramm **hineinkopiert**. (Makroaufruf宏调用)\n- \\- Speicherplatz verschwenden\n- \\- Hoher Arbeitsaufwand bei der Änderungen\n#### Geschlossenes Unterprogrammm(Prozedur)\n- Das Programmstück wird über seine Anfangsadresss angesprungen.\n- Springen -\u003e Ausführen -\u003e Rückspringen\n- \\+ Wiederholung des Codes vermeiden\n- \\- Bei besonders kleinen Unterprogrammen ist es aber wiederum ungünstig. (Sprüge, Parameterübergaben, Sicherung und  Wiederherstellung des Caller-Kontexts, Ergebnisrückgaben.)\n- Wir unterscheiden:\n    - **Announcement**: ohne Ergebnisparameter\n    - **Invocation**: mit Ergebnisparameter\n- **Informationen** der UP: Was sind benötig?\n    - Anfangsadresse\n    - Rücksprungadresse\n    - Aufrufparameter\n    - Rückgabewert(e)\n- **Kommunikation** der UP: Wie tauschen?\n    - Stack: meistens\n    - Spezielle Register: eine schnelle Möglichkeit\n#### UP调用流程（4-stufige Aufrufkonvention）\n- Prolog des Callers: push Register, Rücksprungadresse, Parameter\n    - Prolog des Callees: pop Parameter\n      `\u003cCODE\u003e`\n      Epilog des Callees: pop Rücksprungadresse, push Rückgabewert(e)\n- Epilog des Callers: pop Rückgabewert(e), Register\n### 2.2.1 CALL und RET (und JMP)\n- **PC**: Program Counter, 指向的地址中是下一条要被执行的指令\n  **RA**: Register\n  PUSHR: 所有寄存器入栈\n#### JMP\n```assembly\n      COMMAND JMP addr\n      BEGIN\n        PC := addr;\n      END\n```\n#### CALL\n- CALL(RA)\n```pseudo-assembly\n      COMMAND CALL addr\n      BEGIN\n        RA := PC + 1;\n        PC := addr;\n      END\n```\n- CALL(Stack)\n```pseudo-assembly\n      COMMAND CALL addr\n      BEGIN\n        PUSH PC + 1;\n        PC := addr;\n      END\n```\n#### RET\n- RET(RA)\n```pseudo-assembly\n      COMMAND RET addr\n      BEGIN\n        PC := RA;\n      END\n```\n- RET(Stack)\n ```pseudo-assembly\n      COMMAND RET addr\n      BEGIN\n        PC := POP;\n      END\n ```\n \n### 2.3 Realisierung eines Unterprogrammaufrufs\n\n## K3 Prozess\n\n### 3.1 Das Prozess Konzept\n\n#### 3.1.1 Grundlagen von Prozessen\n##### Prozess\n- Ein in Ausführung befindliches Maschinenprogramm.\n- Program $\\xrightarrow[]{execute}$ Process\n##### (Prozess-)Kontext\n- Zum Kontext eines Prozessese gehören alle Informationen, die den aktuellen Ausführungszustand eines Prozess genau beschreiben.\n- 进程中断后，在同一台计算机上继续执行所需的内容\n##### (Prozess-)Image\n- Die Gesamtheit der physischen Bestandteile eines Prozesses, also insbesondere seine Befehlsfolge (Trace), aber auch seinen\n  Kontext, lokale und globale Variablen und der Ausführungs-Stack.\n- Kontext + Programm + Stack\n- 进程中断后，移动到另一台计算机并执行所需的内容\n##### Uniprogramming\n- Prozesse werden **sequenziell nacheinander, vollständig und ohne Unterbrechung** ausgeführt.\n##### Multiprogramming\n- Der Prozess wird zwischen mereren Prozessen hin und hergeschaltet.\n- Quasiparallel/Pseudo-parallel\n##### Multiprocessoring\n- Stehen mehrere Prozesseoren zur Verfügung.\n- Echt-parallel\n\n#### 3.1.2 Erzeugung von Prozessen\n- System:\n    - ##### Unter Linux/Unix\n        - fork()\n        - 子程序也可以产生子程序\n        - 所有程序都是`init`的后代\n    - ##### Unter MS DOS\n        - 父子不能并行执行\n    - ##### Unter Windows\n        - keine echte Prozesshierarchie\n        - 不停切换\n        - 父进程会收到子进程的句柄(Handle)\n- ##### Ursachen für Erzeugung eines Prozess\n    - Neuer Stapelauftrag 新的批处理任务\n    - Benutzeranmeldung 用户以交互模式登录\n    - Dienstleistungsprozess 服务流程，比如一个APP要打印文件时就会创建一个新的进程在后台接管打印工作\n    - Kindprozesse\n- ##### Schritte für Erzeugung eines Prozess\n    - 进程以唯一的**PID**进入**进程表**\n    - **进程图像**大小的内存空间被分配给进程\n    - **PCB**初始化\n    - 进程放入调度队列\n    - 如有需要，拓展结构\n    \n#### 3.1.3 Realisierung von Multiprogramming\n- **Scheduling** vs. **Dispatching** K5\n\n#### 3.1.4 Das 2-Zustands-Prozessmodell\n- ![[attachments/image_1638964022319_0.png]]\n- ![[attachments/image_1638963980331_0.png]]\n#### 3.1.5 Das 5-Zustands-Prozessmodell\n- ![[attachments/image_1638964081968_0.png]]\n- Status\n    - **Running**: Der Prozess befindet sich in der Ausführung. Bei Einprozessor-Systemen\n      kann sich zu jedem Zeitpunkt nur ein Prozess in diesem Zustand befinden.\n    - **Ready**: Der Prozess ist zur Ausführung bereit.\n    - **Blocked**: Der Prozess wartet auf ein Ereignis (z.B. Ende einer E/A-Operation, Benutzereingabe) und kann erst zur Ausführung kommen, nachdem das Ereignis eingetretenist.\n    - **New**: Der Prozess wurde erzeugt, aber noch nicht durch das Betriebssystem zur\n      Menge der ausführbaren Prozesse hinzugefügt.\n    - **Exit**: Der Prozess wurde durch das Betriebssystem aus der Menge der ausführbaren Prozesse entfernt.\n- Paths\n    - **Null-\u003eNew**: Ein Prozess wird erzeugt.\n    - **New-\u003eReady**: Das Betriebssystem ist in der Lage, einen zusätzlichen Prozess aufzunehmen (genug Speicher vorhanden).\n    - **Ready-\u003eRunning**: Ein rechenbereiter Prozess wird zur Ausführung ausgewählt.\n    - **Running-\u003eExit**: Das Betriebssystem beendet den Prozess.\n    - **Running-\u003eReady**: Ein anderer Prozess soll zur Ausführung ausgewählt werden (z.B. weil die maximale Zeit für einen Ausführungs-Slot abgelaufen oder ein höher-priorer Prozess ins System gekommen ist).\n    - **Running-\u003eBlocked**: Der Prozess muss auf ein Ereignis warten.\n    - **Blocked-\u003eReady**: Das Ereignis, auf das gewartet wurde, ist eingetroffen.\n#### 3.1.6 Das 7-Zustands-Prozessmodell\n- **Virtueller Speicher**\n    - Der virtuelle Speicher ist die Menge an Speicher (in Bytes), die dem Betriebssystems maximal zur Abbildung von Prozessen auf dem Hintergrundspeicher zur Verfügung steht.\n    - 虚拟内存：虚拟内存是操作系统可用于在后台内存上映射进程的最大内存量（以字节为单位）。约等于主内存+suspend进程的数据。\n    - 虚拟内存是计算机系统内存管理的一种技术。 它使得应用程序认为它拥有连续的可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。 目前，大多数操作系统都使用了虚拟内存，如Windows家族的“虚拟内存”；Linux的“交换空间”等。\n- ![[attachments/image_1638964425643_0.png]]\n- Suspendierung原因\n    - suspend: 将程序从Hauptspeicher移动到Hintergrudspeicher, 节省空间\n    - 如Monitoring-Prozess, 长期很少地执行，不该占用太多主内存-\u003eready suspend\n- Das 9-Zustands-Prozessmodell 见3.3.5\n### 3.2 Prozess Beschreibung\n- Virtueller Speicher\n    - Der virtuelle Speicher ist die Menge an Speicher (in Bytes), die dem Betriebssystems maximal zur Abbildung von Prozessen auf dem Hintergrundspeicher zur Verfügung steht.\n      虚拟内存：虚拟内存是操作系统可用于在后台内存上映射进程的最大内存量（以字节为单位）。约等于主内存+suspend进程的数据。\n      虚拟内存是计算机系统内存管理的一种技术。 它使得应用程序认为它拥有连续的可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。 目前，大多数操作系统都使用了虚拟内存，如Windows家族的“虚拟内存”；Linux的“交换空间”等。\n#### 3.2.1 Kontrollstrukturen des BSs\n- Virtueller Speicher ~= HSP + HiSP\n- **Frames**(Seitenrahmen)\n    - Speicherzelle in **Hauptspeicher**\n    - je 2-16 KB\n- **Pages**(Seiten)\n    - Speicherzelle in **Hintergrundspeicher**\n    - alle sind gleich gross\n    - frame的大小和page的大小一样\n- **Laden**:\n    - copy page into frame\n- **Swapping**\n    - Auslagern von Prozessen aus dem Hauptspeicher in den Hintergrundspeicher\n- 操作系统管理的四张表和功能\n    - **Speichertabellen**\n        - 跟踪(ueber ... der Ueberblick behalten)主内存和虚拟内存\n        - 主内存中的一部分会为系统进程保留\n        - 内存表包括：\n            - 进程的Page分配到的Frame\n            - 虚拟内存分配到进程\n            - 页面或框架的属性和权限\n    - **E/A-Tabellen**\n        - 一个I/O设备要么是可用的，要么被分配给一个特定的进程\n    - **Dateitabellen**\n        - 包含文件的存在，在HiSP的位置，当前状态和其他信息\n        - 如果有独立的文件系统(常见)，很多信息会放到文件系统\n    - **Prozesstabellen**\n        - 包括如：进程的状态，进程被block时在什么位置\n#### 3.2.2 Prozesskontrollstrukuren\n- 管理一个进程需要知道两件事：进程被存储在哪(Prozesslokalisierung)？进程管理相关属性的值是什么(Prozesskontrollblock)？\n- ##### Prozesslokalisierung\n- 2 Variante\n- **Segmentierung**\n    - dynamische Partitionierung\n    - alle Daten in ein Segment\n    - ![[attachments/image_1639416061890_0.png]]\n- **Paging**\n        - feste Partitionierung\n        - alle Daten in soviele Pages wie noetig\n        - ![[attachments/image_1639416118711_0.png]]\n- ##### Prozesskontrollblock(PCB)\n- ![[attachments/image_1639416148380_0.png]]\n- (a) **Prozessidentifikation**\n    - PID\n    - PPID\n    - UserID\n- (b) **Prozesszustandsinfo**\n    - 1. Inhalt der Prozessorregister\n    - 2. 若是被中断的进程：\n        - 用户寄存器\n        - 堆栈指针\n        - PC，状态码(Condition codes)\n    - 3. **Programmstatuswort**(PSW):\n        - Die Menge der Register, die Statusinformationen enthalten\n- (c) **Prozesskontrollinformationen**\n  collapsed:: true\n    - 1. Schedling- und Zustandsinfo\n        - Prozesszustand(\"ready\"..)\n        - Priorität\n        - Scheduling-Strategie-spezifische Zustandsinformationen(如已等待的时间)\n        - Ereignisse, auf die der Prozess wartet\n    - 2. Datenstruktur，例如，如果所有等待的进程都在一个队列中管理，则是对下一个进程的引用\n    - 3. 两个独立进程之间交换的 Signale 或 Nachrichten（进程间通信）\n    - 4. 有关进程的权限、内存管理、资源所有权等的额外信息。\n    - ![[attachments/image_1639417190103_0.png]]\n### 3.3 Prozesskontrolle\n- ##### Funktionen des BS-Kerns\n    - Support-functions\n    - Selbstverwaltungs-functions(FCAPS)\n    - I/O Management (canal and cache)\n    - Speichermanagement (Segmentierung, Paging)\n    - Prozessmanagement(erzeugen und wechseln)\n#### 3.3.1 Kontext-Switch\n- 1. **Aktualisierung und Sicherung** des PCB des bisherigen Prozesses, also insb. Sicherung der Zustandsinformationen\n- 2. **Einfügen** des Prozesskontrollblocks des bisherigen Prozesses in die Warteschlange des Schedulers\n- 3. **Auswahl** eines anderen Prozesses zur Ausführung\n- 4. **Wiederherstellung und Aktualisierung** des Prozesskontrollblocks des neuen Prozesses (einschließlich der Änderung des Ausführungszustands auf “Running”)\n#### 3.3.2 Unterbrechungen\n- ##### Externe Unterbrechung (Interrupt)\n    - 外部中断请求，如输入设备(CTRL+C，鼠标)\n    - 移交给Unterbrechungsroutine\n- ##### Interne Unterbrechung (Exception)\n    - 内部异常\n- ##### Unterbrechungsroutine(Interrupt Handler)\n    - 处理中断的组件 Die Komponente, die die Unterbrechungsbehandlung durchführt\n    - 决定最后执行的进程能否继续，或者是否有必要切换到另一个进程\n#### 3.3.3 Moduswechsel\n- 1. **Aktualisierung und Sicherung** der _Zustandsinformationen des PCB_ des gerade aktiven Prozesses (also insb. des Programmstatusworts)\n- 2. **Durchführung** des eigentlichen Moduswechsels durch Freigabe aller Privilegien\n- 3. **Sprung** zur Unterbrechungsroutine (Programmzähler wird auf dessen Anfangsadresse gesetzt)\n#### 3.3.4 Konflikte bei Unterbrechungen\n- **Lösung** von Konflikten: Zur Lösung von Konflikten werden **Prioritäten** von Unterbrechungen eingeführt.\n    - Benutzerprozesse 0\n    - Externe Unterbrechungen \u003e Interne\n    - 如果IPL有5位，则0到31\n    - 如果中断中又中断，只有后一个的优先级echt高于前一个才会被响应\n- **中断优先级（IPL）**：IPL是进程控制块中程序状态字（PSW）的一部分，它包含对用户或系统进程或中断处理程序的中断优先级。\n- **Interrupt Priority Level (IPL)**: Das IPL ist Teil des Programmstatuswortes (PSW) im Prozesskontrollblock. und enthält die Unterbrechungs-Priorität zu einem Nutzer- oder Systemprozess bzw. zu einem Interrupt Handler.\n#### 3.3.5 Ausführung des Betriebssystems \n- 操作系统是进程吗？在不同系统有不同答案\n    - 1. **独立内核（非进程内核）的概念****：\n        - 在这种方法中，代表了较早的操作系统，操作系统的内核在任何进程之外执行。如果一个正在执行的进程被中断，那么它的上下文必须被保存，并将控制权转移给操作系统的内核。操作系统有自己的内存和自己的系统地下室，用于控制过程调用和相应的返回。\n        - ![[attachments/image_1639418601755_0.png]]\n    - 2. **在用户进程中执行**：\n        - 这是小型计算机的一种常见方法，所有的操作系统软件都在每个用户进程的上下文中执行。假设操作系统是一个可以被用户进程调用的例程集合（参见支持功能），并且也在各自的用户进程的环境中执行。只有在这些环境之外才会发生流程性的改变。这种方法的一个代表是Unix系统5。\n        - ![[attachments/image_1639418611816_0.png]]\n        - ![[attachments/image_1639418808499_0.png]]\n    - 3. **基于进程的操作系统概念**：\n        - 在这里，操作系统被实现为系统进程的集合。每个功能都被组织成一个独立的过程。因此，操作系统的结构是完全模块化的，只有实现进程变化所需的少量代码是在每个进程之外执行的。\n        - ![[attachments/image_1639418634668_0.png]]\n#### Das 9-Zustands-Prozessmodell\n- 上述的第二种方法中，Running被分成User running 和 Kernel running, 7状态模型也因此可以被拓展为9状态模型\n- ![[attachments/image_1639418846166_0.png]]\n- ![[attachments/image_1639418853154_0.png]]\n- ![[attachments/image_1639418858399_0.png]]\n## K4 Threads\n- 本章不是script而是ppt教学\n- **Threads und Einführung in Java**\n### Threads\n- Einheit, die eine gewisse Aufgabe erledigt\n- 特点\n    - Teilen sich **gleichen Adressraum**\n    - Habe **gemeinsamen Zugriff** auf Speicher und Ressourcen d. Prozesses\n    - Eigener Stack für lokale Variablen\n    - Eigener Deskriptor\n### Multithreading \n- ![[attachments/image_1640609901369_0.png]]\n### Thread-Zustände \n- ![[attachments/image_1640609963734_0.png]]\n- Zustände zur **Suspendierung** von Threads nicht sinnvoll, da die Auslagerung ein Konzept von Prozessen ist\n  → gemeinsamer Adressraum aller Threads eines Prozesses\n### Thread-Arten\n#### User-level-Threads ULT\n- 在用户模式\n- Vor\n    - kann in jedem BS ablaufen. 可以在任何系统运行不需要任何改变\n    - Threadwechsel, Threaderzeugung benötigen keine Privilegien\n    - Das auf BS-Ebene implementierte Scheduling kann auf Thread-Ebene anwendungsspezifisch realisiert werden\n- Nach\n    - Wird ein Thread blockiert, so blockiert gleichzeitig der gesamte Prozess\n    - Können in einer **Multiprozessor**umgebung **nicht parallel** ausgeführt werden\n#### Kernel-level-Threads KLT\n- 在系统模式\n- **Threadmanagement vom Betriebssystemkern** durchgeführt\n  – muss vom Betriebssystem unterstützt werden\n- KLTs **deutlich schneller** als Prozesse erzeugt, gewechselt und terminiert werden\n- Ist ein Thread **blockiert**, so kann die Kontrolle einem anderen Thread desselben Prozesses (der sich im Zustand ready befindet) **übergeben** werden\n- KLTs können in einer Multiprozessorumgebung **echt parallel** ausgeführt werden\n### Nebenläufigkeit \n- ![[attachments/image_1640611297381_0.png]]\n### Vor- und Nachteile paralleler Programmierung\n\n#### Vorteile:\n- Komplexität in parallele Teilbereiche zerlegen\n- Höherer Durchsatz/Performanz\n- Hardware-Ausnutzung\n- Ausnutzung von eingebetteten und verteilten Systemen\n\n#### Nachteile:\n- –Erhöhte Komplexität in der Verwaltung\n- –Abläufe sind häufig schwer zu durchschauen\n- –Sehr fehleranfällig\n- –Schwer zu Debuggen bei Laufzeitfehlern\n- –Konzepte zur Synchronisation und Thread-Sicherheit erforderlich, um deterministisches Verhalten zu gewährleisten\n\n#### Nachteil: Race Conditions\n- Race Condition: Wettlaufsituationen, bei der der zeitliche Ablauf das Ergebnis bestimmt\n\n#### Kritischen Bereich\n- Phase, in der ein Prozess gemeinsam benutzte (globale) Daten oder Betriebsmittel nutzt.\n\n### Wechselseitiger Ausschluss\n- Es gibt Ressourcen, die als ganzes oder bzgl. einzelner Operationen nur exklusiv, d.h. zu einem Zeitpunkt nur durch einen einzigen Prozess nutzbar sind\n- Lösungen zur wechselseitiger Ausschluss\n    - 1. **Mutual Exclusion**: Zu jedem Zeitpunkt darf sich höchstens ein Prozess im kritischen Bereich befinden.\n    - 2. **Progress**: Befindet sich kein Prozess im kritischen Bereich, aber es gibt einen Kandidaten für diesen Bereich, so hängt die Entscheidung, welcher Prozess ihn betreten darf, nur von diesem Kandidaten ab und fällt in endlicher Zeit.\n    - 3. **Bounded Waiting**: Zwischen der Anforderung eines Prozesses, in den kritischen Bereich einzutreten und dem tatsächlichen Eintreten in den kritischen Bereich kann eine gewisse Zeitdauer liegen. Es muss jedoch möglich sein, für diese Wartezeit eine endliche obere Schranke anzugeben.\n### Deadlocks\n- Zugriff auf unteilbare Ressourcen (kritische Bereiche) birgt die Gefahr von Verklemmungen\n- ![[attachments/image_1640613196042_0.png]]\n### Semaphore \n- integer Variable\n- 信号量，表示可以同时进入Kritische Bereich的数量\n- 3 Operationen:\n    - init(S, Anfangswert)\n    - wait(S), 减少\n    - signal(S) = release(S) 增加\n- ![[attachments/image_1640613503812_0.png]]\n- ![[attachments/image_1640613358662_0.png]]\n### Monitore\n- 管程。实现对共享资源的互斥访问.\n- Hoare的管程：将 \"数据 \"和 \"对其定义的操作\"、\"访问同步\"（对进入的进程/线程的队列）组合成一个抽象的数据类型，其操作保证相互排斥。技术上的实现通常是通过一个与对象相连的信号/锁，并在受保护方法的输入端分配，在其结束时再释放。\n- Ziel:\n  Wechselseitiger Ausschlusses der Monitoroperationen ⇔\n  zu jedem Zeitpunkt ist höchstens ein Thread in einem Monitor aktiv\n## Threads in Java \n- 特点\n    - （对于现在的操作系统）echt parallel\n    - KLT\n    - ![[attachments/image_1644419475024_0.png]]\n- Problem\n    - Race-Conditions\n    - Deadlocks\n    - Fairness\n    - Sicherheit\n    - Ressourcenverbrauch\n### Nebenläufigkeit in Java (Java相关类)\n- Java库中的类：\n    - **Thread **\n        - java.lang.Thread\n        - Jeder laufende Thread stelle ein Exemplar副本 dieser Klasse dar\n    - **Runnable**\n        - Programmcode, der parallel ausgeführt werden soll\n    - **Lock**\n        - Mit Lock können kritische Bereiche markiert werden (nur 1 Thread innerhalb krit. Bereich)\n    - **Condition**\n        - Threads können auf Benachrichtigungen anderer Threads warten\n### 实践\n- 继承`java.lang.Thread`类\n- 继承 Thread 类的类中实现`run()`\n- 调用时用`Thread.start()` 则为并行执行`run()`方法\n- 需要的方法加`synchronized`关键字\n- ![[attachments/image_1640616317159_0.png]]\n- Train.java\n```java\npublic class Train extends Thread {\n     private RailAB  railAB;\n     private boolean west;\n     \n     public Train(RailAB ab, boolean w) {\n        railAB = ab;\n        west = w;\n     }\n     \n     public void run() {\n        if(west) {\n           System.out.println(\"Try to go West!\");\n         railAB.goWest();\n        }\n        else {\n           System.out.println(\"Try to go East!\");\n           railAB.goEast();\n        }\n        railAB.leaveAB();\n     }\n}\n```\n\n- TrainNet.java\n```java\npublic class TrainNet {\n    public final static int MAX_THREADS = 10;\n    public final static int MAX_TRAINS = 3;\n    \n    public static void main(String[] args) {\n        RailAB ab= new RailAB(MAX_TRAINS);\n        for(int i = 0; i \u003c MAX_THREADS; i++) {\n           Train train = new Train(ab, (i % 2 == 1));\n           train.start();\n        }\n    }\n}\n```\n\n- RailAB.java\n```java\npublic class RailAB {\n    private boolean west;\n    private int MAX_TRAINS;\n    private int numberTrains;\n\n    public RailAB(int MAX_TRAINS) {\n        this.MAX_TRAINS = MAX_TRAINS;\n        this.west = true;\n        this.numberTrains = 0;\n      }\n      \n    public synchronized void goEast(){\n        // wait?\n        while(numberTrains == MAX_TRAINS || (west \u0026\u0026 numberTrains \u003e 0)) {\n            try {\n                wait();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n          \n          // run\n          west = false;\n          numberTrains++;\n    }\n      \n    public synchronized void goWest(){\n        while(numberTrains == MAX_TRAINS || (!west \u0026\u0026 numberTrains \u003e 0)) {\n            try {\n                wait();\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n          \n        west = true;\n        numberTrains++;\n    }\n      \n    public synchronized void leaveAB(){\n        numberTrains--;\n        notifyAll();\n    }\n}\n  \n```\n\n## K5 Scheduling\n### 5.1 Prinzip\n- **Scheduling**: Auswahl eines rechenbereiten Prozesses, der als nächstes dem Prozessor zugeordnet werden soll\n- **Dispatching**: Realisierung des eigentlichen Kontextwechsels. Unterbrechung des aktuellen Prozesses, Starten des neuen Prozesses.\n#### 5.1.1 Varianten des Schedulings\n##### 1. Nicht preemptives Scheduling\n- oder Run-to-Completion\n- 非抢占式调度\n- 在一个任务执行完之前不可打断\n##### 2. Preemptives Scheduling\n- 抢占式调度\n- 可以打断\n#### 5.1.2 Anforderungen an einen Scheduling-Algorithmus \n- **Fairness**\n- **Policy Enforcement**: wird stets durchgesetzt, d.h. es gibt keine Ausnahmen\n- **Balance**: Alle Teile des Systems sind (gleichmäßig) ausgelast.\n- **Datensicherheit**\n- **Skalierbarkeit**: 可扩展性, 随着负载（进程数量）的增长，平均性能得以保持。 没有任何阈值，超过这个阈值，调度工作就会非常缓慢或根本不工作。\n- **Effizienz**\n- 并非所有要求都必须满足，只是一种权衡\n##### Batch-System 的其他指标\n- Durchsatz\n- Verweildauer 停留时间\n- Prozessorauslastung\n##### Interaktive System 的其他指标\n- Antwortzeit 响应时间\n- Verhältnismäßigkeit 相称性 算法应该对用户的期望做出反应（例如，简单地点击一个图标的反应不应该太长）\n- Interaktion 交互 交互用户的数量应该是最大的。\n##### Echtzeitsystem 的其他指标\n- Sollzeitpunkte 目标时间\n- Vorhersagbarkeit 可预测性\n\n### 5.2 Scheduling Algorithmus\n#### 5.2.1 Begriff\n- ![[attachments/image_1640885683960_0.png]]\n- **Ankunftzeit**, der Zeitpunkt ab dem ein Prozess existiert.\n- **Startzeit**, der Zeitpunkt, an dem der Prozess zum ersten mal dem Prozessor zugewiesen wird.\n- **Beendigungszeit**, der Zeitpunkt an dem der Prozess terminiert ist.\n- **Wartezeit** = Startzeit - Ankunftzeit\n- **Bedienzeit** = Beendigungszeit - Startzeit\n- **Verweildauer** = Wartezeit + Bedienzeit\n\n#### 5.2.2 Nicht-preemptive Scheduling-Algorithmen\n##### First Come First Served (FCFS)\n- 先到的先处理\n- 问题：在这种处理器分配的情况下，I/O设备的阻塞问题很难受。(当I/O设备未被使用时，要求I/O访问的进程在准备队列中等待）。\n- simple, fair\n##### Shortest Process Next (SPN) / Shortest Job First (SJF)\n- 先处理等待队列里用时最短的\n- 问题1：操作系统如何知道作业需要多长时间来处理？ 可能的解决方案：对于类似的作业，看看已经处理过的作业的平均值。\n- 问题2：较长进程的饥饿。(当然，只有在一开始就不知道所有要处理的进程的情况下，才会出现饥饿现象）。\n- optimal for NP-Scheduling, short Antwortzeit,  but hard to realise\n#### 5.2.3 Preemptive Scheduling-Algorthmen\n- 注意： race condition\n##### Shortest Remaining Processing Time (SRPT)\n- SPN的剩余停留时间版\n- SPN存在的问题同样存在\n##### Round Robin (RR)\n- 排队发糖，还要就重新排\n- extern vor intern: 刚结束的在刚来的后面\n- 优点： fair, kein Verhngern; praktisch implementierbar\n- AWZ与现有的Prozess数量相关\n#### 5.2.4 Priority Scheduling (PS)\n- Vorteile:\n    - Wichtige Prozesse können bevorzugt werden:\n      Bislang haben wir bei “guten” Scheduling-Algorithmen ein Bevorzugen kurzer Prozesse\n      beobachtet )wichtige=kurze Prozesse sollen schnell abgearbeitet werden, d.h. eine hohe Priorität bekommen.\n    - praktisch implementierbar\n- Nachteile:\n    - Verhungern von Prozessen mit niedriger Priorität\n    - relativ schlechte mittlere Verweildauer\n#### 5.2.5 Multilevel Feedback Queueing (MLFQ)\n- ![[attachments/image_1640886347948_0.png]]\n- ![[attachments/image_1640886352177_0.png]]\n### 5.3 Prozess wechsel\n- **Dispatcher**\n- **Dispatching**: Realisierung des eigentlichen Kontextwechsels. Unterbrechung des aktuellen Prozesses, Starten des neuen Prozesses.\n### 5.4 Arten des Schedulings\n- ![[attachments/image_1640886773159_0.png]]\n\n## K6 Deadlock\n- Philosophenproblem\n- **Deadlock**\n    - 死锁 如果至少有两个进程处于相互等待状态，并且即使释放其他可能的进程的所有资源也不能释放这种状态，那么系统就处于死锁状态。\n    - 四个条件\n        - ![[attachments/image_1644414243833_0.png]]\n### Arten von BM\n- wiederverwendbar\n    - teilbar\n    - unteilbar: kann von nur einem Prozess gleichzeitig verwendet werden\n- konsumierbar\n- **Prozessfortschrittsdiagramm**\n    - 路线只能向上或向右，分别代表两个进程的处理\n    - unmöglich: 两者都需要同一个BM的区间，线不可能走进去\n    - unsicher: 暂时没有deadlock, 但继续走下去必定遇到deadlock的区间\n    - ![image.png](../attachments/image_1640946462463_0.png)\n    - ![image.png](../attachments/image_1640946468617_0.png)\n- 此处引入：[[permanent/Petri-Netze]]\n \n## K7 Prozesskoordination\n### 7.1 Nebenläufigkeit\n- **Unabhängige Abläufe**\n    - 需要不同的资源\n    - Gegebenfalls parallel auszuführende Benuzeraufträge, die sich gegenseitig nicht beeinflussen, d.h die für ihre Ausführung unterschiedliche Ressourcen des Systems benötigen(Speicher, Peripheriegeräte, etc)\n- **Abhängige Abläufe**\n    - 需要一样的资源\n    - Koorperierende Proyess, die voreinander abhängig sind, da sie z.B. über geimeisame Speicherbereiche Daten austauschen oder Betriebsmittel gemeisam nutzen.\n- **Quasi-Paralleilität**\n    - mehrere Prozesse von einer CPU\n    - Parallele Abläufe sind quasi-parpallel, wenn mehrere Prozesse von einem Prozessor stückweise bearbeitet werden(preemptive Schedulingstrategien)\n- **Paralleilität**\n    - mehrere Prozess von mehreren CPUs\n    - Parallel Abläufe sind (echt) parallel, wenn mehrere Prozessoren ein oder mehrere Prozesse bearbeiten (Mehrprozessorsysteme)\n- **Nebenläufigkeit**\n    - Nebenläufigkeit = Parallelität + Abhängigkeit\n- **Synchrones Ablaufverhalten**\n    - Alle Abläufe sind streng getakt, so dass jeder der  beteiligten Prozess zu einem bestimmten Zeitpunkt an einer bestimmten Stelle seiner Ausführung angekommen ist.\n- **Asynchrones Ablaufverhalten**\n    - Alle Abläufe erfolgen ungeregelt, d.h. eine Koordination wird durch das Eintreffen bestimmter Ereignisses erzielt. z.B. wenn ein bestimmte Signal kommt, dann wird ein bestimmter Ablauf initiiert.\n### 7.2 Kritische Bereiche\n- **Kritische Bereich**\n    - Teil eines Programms (ein paar Zeilen Programm code), in der bei Ausführung der Prozess auf gemeinsam genutzte BM zugreift\n- 问题: 没有sync的E/V问题\n    - ![image.png](../attachments/image_1641674389583_0.png)\n- Lösungen:\n    - 1. nicht-preemptive\n    - 2. Ringpuffer\n- **Ringpuffer**\n    - ![image.png](../attachments/image_1641674470577_0.png)\n    - **in** 指向第一个空位置\n    - **out** 指向第一个要被取出的位置\n    - 开始时 in = out\n    - 判断饱和: out = (in+1) mod MAX\n    - ![image.png](../attachments/image_1641674555955_0.png)\n### 7.3 Wechselseitiger Ausschluss 互斥访问\n- **Wechselseitiger Ausschluss**\n    - Das Problem wechselseitiger Ausschluss besteht darin, Algorithmen zu finden, die - sobald sich ein Prozess in KB befindet - es keinem anderen Prozess mehr gestatten, den kritischen Bereich zu betreten\n- Drei **Bedingungen** fuer eine richtige Loesung des WA:\n    - 1. **Mutual Exclusion**\n      Zu jedem Zeitpunkt darf sich hoechstens ein Prozess im KB befinden.\n    - 2. **Progress**\n      Kein Prozess der ausserhalb seines KB laeuft, darf andere Prozess blockieren.\n    - 3. **Bounded Waiting**\n      Kein Prozess darf beliebig/unendlich lange warten muessen, bis er in einer KB kommt(endliche Zeit zwischen Anforderung und Betreten)\n#### Der Algorithmus von Decker (Erster Ansatz) 软件算法\n- 思想\n    - 有一块变量, 存储一个int, 该编号表示现在可以访问BM的进程\n    - 该进程访问完成后, 将编号改为下一个进程的编号\n- 问题\n    - Progress不满足: 如果其中某个进程已经结束, 那它不再需要使用BM, 也不会再去调整编号, 下一个进程永远等待\n- Code \n  ![image.png](../attachments/image_1641679997004_0.png)\n#### Der Algorithmus von Decker (Zweiter Ansatz) 软件算法\n- 思想\n    - 所有进程都有一个布尔变量, 0 表示目前没有访问BM\n    - 进程想要访问BM时, 先 check 一遍所有其他进程, 如果全为 0, 将自己的改为 1, 访问BM, 完成后改回 0\n- 问题\n    - Mutual Exclusion不满足: check 需要时间(下面代码while和设置flag之间), 如果同时间有另一个进程也发现其他所有进程全0, 就可能出现同时访问的情况\n- Code \n  ![image.png](../attachments/image_1641680325837_0.png)\n#### Der Algorithmus von Decker (Dritter Ansatz) 软件算法\n- 思想\n    - 前两者结合\n    - 所有进程都有一个布尔变量, 0 表示目前没有访问BM**的需求**(will)\n    - 有一块变量, 存储一个int, 该编号表示现在可以访问BM的进程(darf)\n    - 当一个进程想要访问BM, 先将自己的will设为1, 再把darf变量**设为对方**(ich will, du darfst)\n    - 当且仅当「对方will+对方darfst」时等待, 否则可以访问BM\n- Code\n  ![image.png](../attachments/image_1641680898602_0.png)\n  ![image.png](../attachments/image_1641680903918_0.png)\n  ![image.png](../attachments/image_1641680909607_0.png)\n- 三个条件都满足\n#### Interrupt Disabling(Unterbrechungsvermeidung) 硬件算法\n- Code\n  ```Pseudo\n  REPEAT\n    \u003cDisable Interrupt\u003e\n      \u003cKB\u003e\n      \u003cEnable Interrupt\u003e\n      \u003cunkB\u003e\n  FOREVER\n  ```\n- 缺点:\n    - Ban掉中断很危险, 如果出了错, 没有中断处理机制来接手\n    - 多进程环境下无法使用, 因为真并行是无法避免的\n- Test and Set\n    - 思想\n        - `i = 0`: BM 可用\n        - `testset = true`: 允许使用\n        - `testset(i)`\n            - i = 0 =\u003e i = 1, testset = true\n            - i = 1 =\u003e i = 1, testset = false\n    - Code\n      ```关键代码\n      REPEAT {nothing} UNTIL testset(i);\n        \u003cKB\u003e\n          i := 0;\n          \u003cunkB\u003e\n      FOREVER\n      ```\n      ```Python\n      def testset(i):\n            testset = !i\n          i = 1\n      ```\n### 7.4 Semaphor 信号量\n#### 3 atomare Operationen\n- init(S, Anfangswert);\n```\nS := Anfangswert;\n```\n- wait(S); \n    - ohne Warteschlange \n```\nWHILE(S\u003c=0) SKIP;\nS := S - 1;\n```\n- wait(S); \n    - mit Warteschlange \n```\nS := S - 1;\nIF (S\u003c0) THEN\n    \u003cordne Prozess in Warteschlange and Position -S ein\u003e\n```\n- signal(S);\n    - ohne Warteschlange \n```\nS := S + 1;\n```\n- signal(S);\n    - mit Warteschlange \n```\nS := S + 1;\nIF (S\u003c=0) THEN\n    BEGIN\n        \u003csetze laengsten wartenden Prozess rechnend\u003e\n        \u003cerlaube Zugriff auf KB\u003e\n    END;\n```\n- 使用\n```\nREPEAT\n    wait(S);\n    \u003ckB\u003e\n        signal(S);\n        \u003cukB\u003e\n    UNTIL FALSE;\n```\n#### E/V mit Semaphor\n- S = Speicher 进入Speicher的权限\n  P = Platz 空位\n  B = Bestand 已使用位置\n  S = 1\n  b + p = MAX\n- ==正确示范==\n  ```\n  init(s, 1)     // Zugriff\n  init(b, 0)\n  init(p, MAX)\n  ```\n  ![image.png](../attachments/image_1642676923542_0.png)\n- 错误示范\n  ![image.png](../attachments/image_1642677038424_0.png)\n#### L/S mit Semaphor\n```\n(* Writer *)\nREPEAT\n  wait(S);\n    \u003cSchreibvorgang\u003e;\n    signal(S);\nUNTIL FALSE;\n  \n(* Reader *)\nREAPEAT\n  wait(l);\n    n := n+1;\n    IF (n=1) THEN wait(s);\n    signal(l);\n      \n    \u003cLesevorgang\u003e;\n      \n    wait(l);\n    n := n-1;\n    IF (n=0) THEN signal(s);\n    signal(l);\n```\n- ![image.png](../attachments/image_1642677119003_0.png)\n### 7.5 Monitore 管程\n- **管程机制**：代表共享资源的数据结构，以及由该共享数据结构实施操作的一组过程)所组成的资源管理程序共同构成了一个操作系统的资源管理模块，称为**管程**\n- **Monitor**.\n    - ein Objekt, das sich im wesentlichen aus eine **Menge von Prozeduren** auf gegebenfalls gemeinsam genutzen Daten zusammensetzt.\n    - Zu jedem Zeitpunkt stets nur von **einem** Prozess genutzt werden darf.\n#### Operationen\n- cwait(c); 暂停调用该操作的进程，直到条件c发生\n- csignal(c);  恢复一个等待条件c的已暂停的进程的执行。如果有多个进程则选其一。如果没有则不作为。\n#### Bestandteilen von Monitoren\n- Ⅰ. lokale Daten 局部于管程的共享数据结构\n- Ⅱ. Bedingungsvariablen 条件变量 condition\n- Ⅲ. Prozeduren 对数据结构进程操作的一组进程\n- Ⅳ. initialisierungscode 对局部于管程的共享数据设置初始值的语句\n- 除了在管程中的进程，其他进程：\n    - 1. 要么已经离开\n    - 2. 要么在WS里等到进入\n    - 3. 要么进入了 Ⅲ Prozuduren 的等待队列\n- 结构图\n  ![image.png](../attachments/image_1642678752196_0.png)\n- Bsp.\n    - ![image.png](../attachments/image_1642678853835_0.png)\n    - ![image.png](../attachments/image_1642678858436_0.png)\n### 7.6 Message Passing\n- 分成 send 和 receive\n- 分成 mit Blockierung 和 ohne Blockierung\n#### 7.6.1 Blockierung\n- 1. Bl send, bl receive: ineffezient, sender 和 receiver 一起等\n- 2. nb send, bl receive: effizienter, sender 只 bl 发送需要的时间\n- 3. nb  receive:Blockierung \u0026 Puffer\n- ![image.png](../attachments/image_1642948390734_0.png)\n#### 7.6.2 Addressierung\n- 1. direkte addressierung\n    - Send Primitiv 拥有 Zielprozesses 的 Identifikator\n      Zielprozesse 要么知道发送源， 要么什么消息都收\n- 2. Inderekte Addressierung\n    - 先发送到共用的Datestructure\n    - 四种：\n      ![image.png](../attachments/image_1642949868321_0.png)\n- 用Mailbox实现互斥\n  思想：收到NULL邮件的人才能进入KB，没有msg收的全被blockiert\n  ![image.png](../attachments/image_1642949895028_0.png)\n- ![image.png](../attachments/image_1642949921424_0.png)\n\n## 8 Speicher\n### 8.1 Speicherverwaltung\n- 5 Anforderung an die Speicherverwaltung\n    - **Relocation** 搬迁，重复代码必须能转化成实际的物理地址\n    - **Protection**\n    - **Sharing**. Die Verwaltung muss verschiedenen Prozessen den Zugriff auf einen gemeisam genutzen Speicherbereich ermoeglichen.\n    - **Logical Organization**. Die HS und Sekundaerspeicher has 1d Adressraum -\u003e besser eine modulare Organisation realisieren.\n    - **Physical Organization**. Transport von Daten zwischen HS und HinteS.\n### 8.2 Speicherpartitionierung\n- ![image.png](../attachments/image_1644091035729_0.png)\n- **Interne Fragmentierung**\n    - Als interne Fragmentierung bezeichnet man die Effekt, viele kleine Module belegen die Partiionen, so dass viel Platz verschwendet wird.\n- **Externe Fragmentierung**\n    - Ist keine genuegend grosses, zusammenhaegende Speicherstueckt mehr frei, obwohl die Summe  der freien Stueckt reichen wurde.\n#### 8.2.1 Feste Partitionierung\n- 1) alle Partitionen gleich gross\n- 2) nicht gleich\n- Problem: **Interne Fragmentierung**.\n#### 8.2.2 Dynamishe Paritionierung\n- verwendet so viele wie gebraucht\n- Problem: ** Externe Fragmentierung**\n- ![2022-01-19-14-16-17.png](../attachments/2022-01-19-14-16-17_1644051202635_0.png)\n- **Compaction**: Von Zeit zu Zeit werden die Prozesse zu inem Block zusammengechoben\n#### 8.2.3 Buddy-System\n- Buddy-Bau: Halbieren Strategie, bis das Programm fit ist.\n- aber: nicht optimal!\n- Addressierung\n    - Bisection, gemeisame Prefix zu suchen !\n    - ![skript_ws2122 2.png](../attachments/skript_ws2122_2_1644051299794_0.png)\n- \\- interne und externe Fragmentierung\n### 8.3 Virtueller Speicher\n#### 8.3.1 Prinzip\n- Def. 8.1 **Physischer Adressraum**. Die Menge der im Arbeitsspeicher physisch vorhandenen Speicherplaetze bildet den realen oder physischern Adressraum P.\n- Def. 8.2 **Logischer Adressraum**. Dem Physischen oder realen Adressraum steht ein virtueller oder logischer Adressraum L gegenueber.\n- Die **Aufgabe** der Speicherverwaltung besteht in der Zuordnung von logischen zu physischen Adressen. L -\u003e P.\n    - |L| \u003c= |P|: einfach problemlos.\n    - |L| \u003e |P|: Klassische Fall. -\u003e\n- CPU kann nur die Hauptspeicher zugreifen.\n#### 8.3.2 Datentransport\n- **Seite/Page**: Feste Laenge definierte Transporteinheiten in logischem Adressraum.\n- **Seitenrahmen/Frame**:**: Feste Laenge definierte Transporteinheiten in realem Adressraum(HS).\n- laden:\n    - Hintegrundspeicher -\u003e Hauptspeicher\n    - Page -\u003e Frame\n    - Pages und Frames sind gleich gross.\n#### 8.3.3 Abbildung virtueller auf reale Adressen\n- ![skript_ws2122 3.png](../attachments/skript_ws2122_3_1644052460386_0.png)\n- ![image.png](../attachments/image_1644052751266_0.png)\n- e.g. MI-Programmadresse\n  ![image.png](../attachments/image_1644052963104_0.png)\n### 8.4 Paging\n#### 8.4.1 Paging-Strategien\n- **Demand Paging**. Wird von HS gefordert.(liegt ein Seitenfehler)\n- **Demand Prepaging**. Zu viel gefordert, erst behalten.\n- **Look-Ahead-Paging**. Auch nach anderen Kriterien nachladen koennen.\n#### 8.4.2 Seitenaustausche Algorithmen\n- 总览\n    - **Resident Set Management Policy**\n        - 规定给定的页数是固定的还是可变的进程在处理时应始终位于主内存中。 （重复：一些信息需要作为进程的驻留集不断地存在于主存中能得到的。）此外，此政策可用于限制符合交换条件的数量页面是受限的，这个事实被称为 **Replacement Scope**。\n    - **Fetch Policy**\n        - 本质上确定是否只有在出现页面错误时才重新加载新页面（Demand Paging）或是否也可以重新加载页面如果没有页面错误（Demand Prepaging）。后一种情况可能很有用 - 例如在页面错误的情况下几页也可以一次很好地作为一个块传输。大多数操作系统都实现了Demand Prepaging。\n    - **Placement Policy**(Unwichtig)\n        - 确定将进程的一部分写入内存的位置，例如根据最佳拟合、首次拟合……算法。\n          此规则与分页无关，因为它不会带来任何存储优势\n    - **Replacement Policy** 页面置换算法\n        - OPT 6\n        - FIFO-Strategy 9\n        - LRU 7\n        - LFU -\n        - Climb 6\n        - Clock 8\n- 算法\n    - **Optimal Strategy(OPT)**\n        - am laengste nicht gefordert\n        - +optimal\n        - -nicht realisierbat\n    - **FIFO Strategy**\n        - am laengst im Frame bleiben.\n        - +einfach\n        - -nicht beste\n    - **Least Recently Used(LRU)**\n        - verkette Liste, am einfachsten realisierbar\n    - **Least Frequently Used(LFU)**\n        - Aufwand gross, kaum genutzt\n    - **Climb**\n        - bei jedem Aufruf eine Position hoeher\n        - relative einfach, gut\n    - **Clock-Strategie**\n        - in einer zyklischen Liste mit m Ziffern\n        - Zeige auf aelteste Seite\n        - 引入 Use Bit\n        - 走开擦掉一次当前UB\n        - e.g.\n            - ![2022-01-29-17-51-39.png](../attachments/2022-01-29-17-51-39_1644053766582_0.png)\n              ![2022-01-29-17-55-25.png](../attachments/2022-01-29-17-55-25_1644053771656_0.png)\n              ![2022-01-29-17-59-35.png](../attachments/2022-01-29-17-59-35_1644053775524_0.png)\n              注意最后三个\n#### 8.4.3 Minimierung von Seitenfehlen\n- **Belady's Anomalie(异常)**: bei mehr Rahmen nicht immer weniger Seitenfehlrer\n- **Stackalgorithmen**: 保证Rahmen越多 Seitenfehler不会越多\n- **Reference String**: eine eindeutige Folge von Speicherzugriggen waehrend seiner Aus fuehrung.\n    - e.g. 2 3 2 1 5 2 4 5 3 2 5 2\n- **Distance String**\n    - wie viele Frames m brache ich mind., damit KEIN Seitenfehlerauftritt.\n    - ![2022-01-29-18-34-17.png](../attachments/2022-01-29-18-34-17_1644053938378_0.png)\n    - $C_k$ Anzahl der vorkommen von k in DS\n    - 给出DS，求 m Rahmen 时的 \\#Seitenfehler: $C_\\infty$ + $\\sum{C_k}$, $\\forall k:k\u003em$\n- ![2022-01-29-18-53-33.png](../attachments/2022-01-29-18-53-33_1644053988462_0.png)\n    - r: Nr. der Referenz\n    - m: Anzahl der Frames\n    - M: eine Menge, das den Status des Speichers beschreibe\n#### 8.4.4 Working Set Strategie\n- **Lifetime function**\n    - ![2022-01-29-20-29-06.png](../attachments/2022-01-29-20-29-06_1644054037818_0.png)\n    - 找的这个 optimal 的 m\n- **Lokalitaetzprinzip**: Die Vergangenheit ist (oft) mit der unmittelbare Zufunft korelliert.\n- **Working Set Strategie**\n- m variabel\n- W(t,h)\n    - Menge von Seiten\n    - t: der exakte Zeitpunkt einer Ersetzung\n    - h: Die Groesse des Rueckwaertsfernster\n    - ![2022-01-29-20-43-12.png](../attachments/2022-01-29-20-43-12_1644054134410_0.png)\n- w(t,h)\n    - Maechtigkeit\n    - ![2022-01-29-20-44-30.png](../attachments/2022-01-29-20-44-30_1644054159983_0.png) ![](2022-01-29-20-44-30.png)\n- Strategie\n    - ![2022-01-29-20-51-46.png](../attachments/2022-01-29-20-51-46_1644054165754_0.png)\n### 8.5 Segmentierungsstrategien\n- **Segmentierung Strategie**\n    - First Fit (FF):Plaziere das Segment in die erste passende Lücke.\n    - Best Fit (BF): kleinste\n    - Rotating First Fit (RFF)\n        - 放置方式与 FF 相同，但下一个间隙是从上一次放置的位置开始搜索的，即使用过的间隙的末端\n        - von vorne begonnen(wurde simulativ gezeigt die beste)\n        - von hinten begonnen\n    - e.g.\n        - ![image.png](../attachments/image_1644054264107_0.png)\n\n## 9 E/A Verwaltung\n\n## 10 Lokale Interprozesskommunikation\n\n## 11 Verteilte System","lastmodified":"2023-06-15T12:53:58.8955027+02:00","tags":[]},"/project/lmu-Database-system":{"title":"lmu - Database system","content":"\ndbs\n## Organization\n\n- jede Woche Übungsblatt\n- Tut ab 3. Woche\n\n## Einführung\n\nArbeitsspeicher?\n- 主内存, 电脑上内存条那个\n- persistent speichern müssen\n- Arbeitsspeicher nicht gross genug\n\nVirtueller Speicher?\n- 从硬盘里扣出来暂时用一下的 \n- nicht ausreichen: von der Persistenz zu denken\n\n![[attachments/permanent/内存和外部存储]]\n\n![[attachments/permanent/主存储器技术]]\n\n![[attachments/#磁盘的结构和原理]]\n\n![[attachments/#更改异常(Update-Anomalie)]]\n\n![[attachments/permanent/数据系统DBS的九个任务]]\n\n### 数据库的内容\n- Database Schema\n\t- 描述可能的数据\n\t- 元数据, 数据的结构和类型\n\t- 可以修改, 但很少修改\n- 数据项 Ausprägung, Datenbank-Zustand\n\n[[permanent/SQL|SQL语言]]\n\n### 数据模型类型\n- 关系型数据库: 表\n- 树型, 层次型\n- 网型\n- 面向对象型\n\t- 纯的很少\n- 对象关系型\n\t- 现在有些关系型数据库允许复杂的对象存储 \n- NoSQL-database\n\t- e.g.\n\t\t- MongoDB, documentorient\n\t\t- 图数据库\n\t\t- KV数据库\n\t- 通常用于运行时间高相关型应用\n\t- [[permanent/数据系统DBS的九个任务#^6e8319|一致性监视]]常常受限\n\n![[attachments/permanent/数据库比较]]\n\n### 数据库与软件的连接\n- 通过库\n\t- API\n\t- SQL语句通过参数传递\n\t- e.g. \n\t\t- OCI: Oracle Call Interface\n\t\t- ODBC: Open Database Conectivity\n\t\t- JDBC\n- 嵌入到语言\n\t- C, C++\n\t- SQLJ/JSQL for Java\n\t\te.g. SQLJ![[attachments/Pasted image 20221021203907.png]]\n\t- 由预编译器调用API\n\n### 数据库的结构\n![[attachments/Pasted image 20221021204103.png|600]]\n\n#### Konzeptionelle Ebene\n- 独立于单个数据库的, 所有数据的视图\n- 由DDL指定\n- 没有数据细节\n\n#### Externe Ebene\n- 用户应该看到的数据\n- 界面层\n\n#### Interne Ebene\n内部模式描述了系统特定的数据库对象（物理存储）的实现，例如 \n- 存储数据记录的结构 \n- 索引结构，如搜索树 \n- 内部模式极大地决定了整个 DBS 的性能表现 -应用程序不受内部模式变化的影响（物理数据独立性）。\n\n#### Logische Datenunabhängigkeit\nDie Datenbank wird von die Änderungen und Erweiterungen des Anwenderschnittstellen abgekoppelt.\n数据库与使用接口的变化和拓展脱钩.\n\n#### Physische Datenunabhängigkeit\nDie Anwendungen sind von die Änderung des internen Schemas nicht betroffen.\n(数据库的)使用不受其内部模式变化影响.\n\n\n## Das Relationale Modell\n\nDomain\nKartesische Produkt\nRelation\nKardinalität\n\n### Relation in der Mathematik\n`Attribute` Spalte einer Tabelle\n`Grad/Stelligkeit` k in $R \\subseteq D_1 \\times D_2 \\times \\ ... \\ \\times\\ D_k$\nRelation = Menge von Tupel\n\n### Relation in DBS\n- `Relation r` Ausprägnung eines Relaionen-Schemas.\n- `Attribute` Spalte einer Tabelle\n- Position relative\n![[attachments/Pasted image 20221029164838.png|600]]\n- geordnetes Relationschema\n\t- `Attributnamen` $A_i$, $R = (A_1\\ :\\ D_1,\\ ...\\ A_k\\ :\\ D_k)$\n- Relationenschema mit Domänenabbildung\n\t- `dom(m)` $R = \\{A_1,\\ ...\\ A_k\\}, dom(A_i) = D_i, 1 \\le i \\le k$ 属性类型\n- e.g.\n\t- ![[attachments/Pasted image 20221029163408.png|600]]\n一行是一个项, 一个 关系的元素, 一个 tuple\n一列是一个属性\n一个关系是一张表\n\n### Key\nKey K 是 RelationenSchemas $R$ 的 Attribute 的子集 ($K\\subseteq R$)\n就是可以辨识唯一性的属性, 可以是一组属性或一个属性\n- `Eindeutigkeit` $\\forall r,\\ t_1, t_2 \\in r,\\ t_1 \\neq t_2 \\Rightarrow t_1[K] \\neq t_2[K]$\n- `Minimalität` $\\forall T$ Attributmengen, die Eindeutigkeit erfüllen, $T \\subseteq K \\Rightarrow T = K$\n\n##### Superkey\nSuperschlüssel\n满足 Eindeutigkeit, 而不一定 Minimalität (这意味着超钥也可以作为唯一辨识, 而且不一定所有属性都需要用上)\nKey 是 minimal Superkey\n\n##### Unique\nSchlüsselkandidate\nunique 约束\n符合 key, 即可作为唯一辨识符的一个或一组属性, 作为(数据表的 primary key)候选\n\n##### Primary key\n从候选里选出的主键\n符合 not null 约束\n\n##### Foreign key\n一个表中的 foreign key 指向另一个表的 unique key\n\n##### Referential Integrity\n通过外键连接起来的行的完整性\n含有外键的行的完整性也包括引用的行的完整性\n\n### SQL\n[[permanent/SQL#DDL#数据表的创建]]\n[[permanent/SQL#SQL 数据类型]]\n[[permanent/SQL#SQL 约束]]\n[[permanent/SQL#DDL#修改属性, 增加属性, 删除属性]]\n\n\n## Die Relationale Algebra\n\n### Relationale Algebra\n\n![[attachments/permanent/Linear Algebra Concepts 线性代数概念#Algebra 代数]]\n\n![[attachments/permanent/Linear Algebra Concepts 线性代数概念#Closure 闭包]]\n\n##### Relationale Algebra\n- Operanden: Relationen(Tabelle)\n- Operatoren: Selektoren(value\u003e1000), UNION\n- Abgeschlossenheit: Ergibnisse immer eine Relation\n\n##### Grundoperationen\n- Vereinigung\n- Differenz\n- Kartesisches Produdt(Kreuzprodukt)\n- Selektion\n- Projekt\n- (Umbenennung der Element)\n\n##### Projektion\n删除不需要的列\ne.g. $\\pi_{Name,Abteilung}(Mitarbeiter)=...$\n|Name |Abteilung |\n|---|---|\n|Huber |01 |\n|Mayer |01 |\n|Müller |02 |\n|Mayer |01|\n\n\n### Operation\n\n##### Duplicate-Elimination\n- $n\\ log(n)$\n- sort\n\n##### Durchschnitt\n$A \\cap B = A - (A - B)$\n- abgeleitete Operation\n- 有时候被定义为 Grundoperation, 而 $-$ 是 abgeleitete\n\n##### Quotient\n有一点 $\\forall$ 的意思, $R_1 \\div R_2$, $R_1$ 中只有完整包含 $R_2$ 中每一个项的项才被保留\n![[attachments/Pasted image 20221108205306.png|600]]\n\n\n##### JOIN\nSelektion+Kreuzprodukt\ne.g. $\\sigma_{Ableitung=ANr}(Mitarbeiter \\times Abteilung)$\n|PNr| Name |Vorname |Abteilung |ANr |Abteilungsname|\n|---|---|---|---|---|---|\n|001| Huber| Erwin|01|01|Buchhandlung|\n|002 |Mayer |Hugo |01 |01|Buchhaltung|\n|003 |Müller |Anton |02 |02|Produktion|\n\n符号\n$R\\ \\bowtie\\ S$\n\n分类:\n- Theta-Join(Selector) $R \\underset{A\\ \\Theta\\ B}{\\bowtie} S$\n- Equi-Join $R \\underset{A=B}{\\bowtie} S$\n- Natural-Join 同名的 Attribute 会合并\n\n![[attachments/SQL#SQL JOIN]]\n\n### SQL \u0026 relational operators\nSQL is relational complete\n\n**SELECT - projector** \nSELECT 但不会删除相同的项, 需要 SELECT DISTINCT\n\n**FROM - crossproduct**\n通配符*, as\n\u003e SELECT m.\\*, a.Name AS Abteilungsname, ... \n\u003e FROM Mitarbeiter m, Abteilung a\n\n可以 self-join, 即 FROM 两次自己，可以在将整个数据表与某一项的某一值比较时用\n\n**WHERE - selector**\ncompare oprater: \u003c=, \u003c\u003e, ...\n可以有 Prädikat: 加减乘除，concatenation `||`, substring, 逻辑运算\n\ninexact: A1 LIKE ‘Datenbank%‘\n% 任意个任意字符\n_ 一个任意字符\n\nIN: A1 in (2, 3, 5, 6)\n\n##### Kompatible Wertebereich\n![[attachments/SQL#数据类型兼容]]\n\n##### UNION, INTERSECT, EXCEPT, MINUS\nUNION - with duplication\nUNION ALL - without duplication\nUNION CORRESPONDING - same attribute name only\nINTERSECT - intersection\nEXCEPT, MINUS - difference\n\nUNION 支持不同属性名合并, 也可以用 NULL 作占位符\ne.g. \n\u003e SELECT A,B,C FROM R UNION SELECT A,D,C FROM S\n\n##### UPDATE\n\u003e UPDATE relation SET a1 = v1 WHERE con\n\n##### DELETE\n\u003e DELETE FROM relation WHERE con\n\n##### INSERT\n将一个表或表的某些列复制到另一个表\n\u003e INSERT INTO table2 (column_name(s))  \n\u003e SELECT column_name(s) FROM table1;\n\n## Relationen Kalkül\n\n### Relationen Kalkül\n- deklarative Sprache, vgl. Relationale Algebra ist prozedurale Sprache\n- Tupelkalkül \u0026 Bereichskalkül\n\n###  Tupelkalkül\n\n|**Syntax** |Interpretation-\u003e |**Semantik**|\n|:--|---|:--|\n|Tupelvariablen|-\u003e|konkrete Tupel|\n|Formeln|-\u003e|true/false|\n|Ausdruck|-\u003e|Relation|\n\n##### Tuplevariablen\n- kann in einer Formel frei oder gebunden auftreten\n- haben Schemas\n- $Schema(t) = (A_1: D_1, A_2: D_2)$\n\n##### Atom\n- $R(t)$\n- $t.A \\ \\Theta \\ s.B$\n- $t.A \\ \\Theta \\ c$, c constant\n\n##### Formel\n$\\neg \\wedge \\vee \\ \\forall \\ \\exists$ von Atom\n\n$I(\\psi)$\nInterpretation von Formel\ne.g. I(R(r)) = true\n\n##### Ausdruck(Anfrage)\n$\\{t | \\psi(t)\\}$\n\n**ψ(r | t)**  \nt Tuplevariable mit Schema(t)\nr konkrete Tuple\nψ(r | t): alle t durch r ersetzt\ne.g.\n![[attachments/Pasted image 20221117083434.png|600]]\n\n![[attachments/Pasted image 20221117084414.png|600]]\n\n\n### Bereichkalkül\n\n##### Sicher(Ausdruck)\nTuplevariable 只能用 gespeicherten Relation 可接受的值, 即 positiv in einem Atom R(t) vorkommt\n\n##### Bereichvariablen\n$x_1: D_1, \\ x_2: D_2$\n\n##### Ausdruck\n$\\{x_1, \\ x_2, \\ ... | \\psi (x_1,\\ x_2\\ ...)\\}$\n\n##### Atom\n- $R_1(x_1,\\ x_2,\\ ...)$\n- $x\\ \\Theta \\ y$\n\n##### Formel\nanalog.  [[project/lmu - Database system#Formel|Tupelkalkül Formel]]\n\n![[attachments/Pasted image 20221117092918.png|600]]\n\n### 某作业\n$\\{Nummer,Datum | \\exists abt, art, lie:Verkauf(Nummer, Datum, abt, art, \\_, \\_, \\_)$  $\\wedge Abteilung(abt, \\_, \\_, 3, \\_) \\wedge Artikel(art, \\_, \\_, \\_, \\_, lie)$ \n$\\wedge Lieferant(lie, \\_, \\_, Land)$\n$\\wedge (Land=Italien \\vee Land=Frankreich)\\}$\n\nc)\n$Schema(t) = Schema(Nummer: Integer, Name: String, Abteilung: String)$\n$\\{[t.Nummer, t.Name, t.Abteilung]|$\n$(\\exists u \\in Angestellter)(u.Nummer=t.Nummer \\wedge u.Name=t.Name \\wedge$\n$(\\exists v \\in Abteilung)(v.Nummer=u.Abteilung \\wedge v.Name=t.Abteilung \\wedge$\n$(\\exists w \\in Filiale)(w.Nummer=v.Filiale \\wedge w.Stadt=Koeln)))\\}$\n\n$\\{nr, name, abt|\\exists abtnr, filnr: Angestellter(nr, name, \\_, abtnr, \\_, \\_) \\wedge$\n$Abteitung(abtnr, abt, filnr, \\_, \\_) \\wedge Filiale(filnr, Koeln, \\_) \\}$\n\nd)\n$Schema(t) = Schema(Angestellter)$\n$\\{[t.Nummer, t.Name, t.Gehalt, t.Geburtsjahr]|(t \\in Angestellter) \\wedge$\n$(\\exists v \\in Verkauf)(v.Angestellter=t.Nummer \\wedge v.Datum\u003e01.10.2019) \\wedge$\n$(\\neg \\exists u \\in Abteilung)(u.Leiter=t.Nummer)\\}$\n\n$\\{nr, name, gehalt, geburtsjahr|$\n$Angestellter(nr, name,gehalt, abtnr, geburtsjahr, \\_) \\wedge$\n$\\exists datum:Verkauf(\\_, datum, \\_, \\_, nr, \\_) \\wedge$\n$\\neg \\exists abtnr:Abteilung(abtnr, \\_, \\_, \\_, nr)\\}$\n\n\ne)\n$Schema(t) = Schema(Lieferant)$\n$\\{[t.Nummer, t.Name] |t \\in Lieferant \\wedge$\n$(\\exists art1, art2, art3 \\in Artikel)(art1.Lieferant=t.Nummer \\wedge$ \n$art2.Lieferant=t.Nummer \\wedge art3.Lieferant=t.Nummer \\wedge$\n$art1 \\neq art2 \\wedge art1 \\neq art3 \\wedge art2 \\neq art3)\\}$\n\n$\\{nr, name| Lieferant(nr, name, \\_, \\_) \\wedge \\exists art1, art2, art3:$\n$Artikel(art1, \\_, \\_, \\_, \\_, nr) \\wedge Artikel(art2, \\_, \\_, \\_, \\_, nr) \\wedge$\n$Artikel(art3, \\_, \\_, \\_, \\_, nr)\\wedge art1 \\neq art2 \\wedge art1 \\neq art3 \\wedge art2 \\neq art3)\\}$\n\n\na)\n$Schema(t) = Schema(R)$\n$\\{t|t \\in R \\wedge t.A=x\\}$\n\n$\\{a, b, c|R(a, b, c) \\wedge a=x\\}$\n\nb)\n$Schema(t) = Schema(R)$\n$\\{[t.A, t.B]|t \\in R \\}$\n\n$\\{a, b|R(a, b, \\_)\\}$\n\nc)\n$Schema(t) = Schema(A, B, C, D, E$)\n$\\{t|(R.C=S.C \\wedge R.A=t.A \\wedge$\n$R.B=t.B \\wedge S.D=t.D \\wedge S.E=t.E)\\}$\n\n$\\{a, b, c, d, e| R(a, b, c) \\wedge S(c, d, e)\\}$\n\nd)\n$Schema(t) = Schema(R)$\n$\\{t|t \\in R \\vee t \\in S\\}$\n\n$\\{a, b| R(a, b, c) \\vee S(a, b, c)\\}$\n\ne)\n$Schema(t) = Schema(R)$\n$\\{t|t \\in R \\wedge t \\in S\\}$\n\n$\\{a, b| R(a, b, c) \\wedge S(a, b, c)\\}$\n\nf)\n$Schema(t) = Schema(R)$\n$\\{t|t \\in R \\wedge t \\notin S\\}$\n\n$\\{a, b| R(a, b, c) \\wedge \\neg S(a, b, c)\\}$\n\ng)\n$Schema(t) = Schema(A, B, C, D, E, F)$\n$\\{t|t.A=R.A \\wedge t.B=R.B \\wedge t.C=R.C \\wedge t.D=S.D \\wedge t.E=S.E \\wedge t.F=S.F\\}$\n\n$\\{a, b, c, d, e, f|R(a, b, c) \\wedge S(d, e, f)\\}$\n\nh)\n$Schema(t) = Schema(B)$\n$\\{t|(\\forall s \\in S)((\\exists r \\in R)(R.A=S.A \\wedge r.B=t.B))\\}$\n\n$\\{b|\\forall a: S(a) \\ \\exists r: R(a, b)\\}$\n\n---\n\n### Query By Example (QBE)\n![[attachments/Pasted image 20221117103233.png|600]]\n- Kommandos\n\t- `P.`  print/projektion\n\t- `I.`  insert\n\t- `D.`  delete\n\t- `U.`  update\n- Bereichsvariablen\n\t- \\_x, \\_y\n- Konstanten\n- Operator\n- Condition-Box\n\t- AND, OR, but no NOT\n\n\n#### Umsezung von Bereichkalkül zu QBE Anfrage\n![[attachments/Pasted image 20221117104407.png|600]]\n\n![[attachments/Pasted image 20221117104419.png|600]]\n![[attachments/Pasted image 20230215191404.png|600]]\n\n### Quantoren und Subqueries in SQL\n$\\{x \\in R\\ |\\ \\exists y \\in S: con\\} \\equiv \\pi_{R.^*}(\\sigma_{con} (R \\times S))$\n$\\{x \\in R\\ |\\ \\forall y \\in S: con\\} \\equiv (\\sigma_{con} (R \\times S)) \\div S$\n\n$\\{x \\in R\\ |\\ \\forall y \\in S: x.a \u003e y.b\\} \\equiv (\\sigma_{x.a\u003ey.b} (R \\times S)) \\div S$\n\n![[attachments/SQL#子查询]]\n\n\n## Sortieren, Gruppieren und Views in SQL\n\n\n### Sortieren\n![[attachments/SQL#ORDER BY 关键字]]\n\n\n### Aggregation\n![[attachments/SQL#SQL 函数]]\n\n### Gruppierung\n![[attachments/SQL#GROUP BY 关键字]]\n\n![[attachments/SQL#根据多属性分组]]\n\n![[attachments/SQL#HAVING 关键字]]\n\n### Auswertung\n![[attachments/SQL#SQL运算顺序]]\n\n\n## Das E/R Modell\nEntity/Relationship Model\n\n- Entity: class, **两个 Entity 之间只能通过 Relationship 连接**\n- Attribute\n- Relationship: e.g. belegt(Anton, dbs)\n关系也是可以有属性的\n\n- (erweiterte) Vererbung\t\n\n### Notation\n- 1:1(双箭头)\n- m:1(多指向1)\n- m:n(无箭头)\n![[attachments/Pasted image 20221205144431.png|500]]\n\nVererbung\n![[attachments/Pasted image 20221205144754.png|500]]\n\n### E/R 转 Relation\n\n#### 1:1\n如果合理的话, 两个实体合为一个\n\n#### 1:n\n将 1 的主键加入到 n 作为外键\n\n#### m:n\n将 关系 作为新的表, 将关系双方的主键作为外键且是新的表的主键\n\n#### 多方关系\n也是创建新的表, 将关联的表的主键作外键+主键\n\n#### 同类关联\n按照上面的规则, 属性改个名字就好\n![[attachments/Pasted image 20221205150134.png|400]]\n\n\n#### 继承\n通常可以转化为 1:m\n也可以直接将父类的属性加入到子类, 取消父类\n\n### UML\n类似类图\n- 关系没有特殊符号, 直接标注在线上, 只有三元+关系用菱形\n- ..\n![[attachments/Pasted image 20221205151051.png|480]]\n\n### 某作业\n(提示: 这不是E/R图, 我做错了)\n```mermaid\nclassDiagram\ndirection LR\n    class Angestellter {\n        +Nummer\n        Name\n        Gehalt\n        Geburtsjahr\n        Einstellungsdatum\n    }\n    class Abteilung {\n        +Nummer\n        Name\n        Stock\n    }\n    class Filiale {\n        +Nummer\n        Stadt\n        Land\n    }\n    class Lieferant {\n        +Nummer\n        Name\n        Stadt\n        Land\n    }\n    class Artikel {\n        +Nummer\n        Datum\n        Preis\n        Bestand\n    }\n    class Relation_Verkauf {\n        +Nummer\n        Datum\n        Anzahl\n        Betrag\n    }\n    Angestellter \"gehört zu\"--\u003e Abteilung\n    Abteilung --\u003e\"Leiter\" Angestellter\n    Abteilung \"gehört zu\"--\u003e Filiale\n    Artikel \"gehört zu\"--\u003e Abteilung\n    Artikel \"geliefert von\"--\u003e Lieferant\n    Relation_Verkauf \"wer\"--\u003e Angestellter\n    Relation_Verkauf \"was\"--\u003e Artikel\n```\n---\n\n\n## Normalformen\nNormalization theory as formal basis for RDB design.\n\n- [[#1. Normalform]]\n- [[#2. Normalform]]\n- [[#3. Normalform]]\n- [[#4. Normalform]]\n\n![[attachments/Pasted image 20221206205443.png|400]]\n![[attachments/Pasted image 20221207231521.png|500]]\n\n### 概念\n\n#### Functional dependency\n同一个表中的属性之间的依赖\n(X -\u003e Y) Y ist von X funktional abhängig\n\n![[attachments/Pasted image 20221205151830.png|500]]\n是指比如说, 在一个设计不当的表中, 某几个属性与某主键挂钩, 某几个与另一个属性挂钩(不一定是主键, 如LStadt和LLand)的情况, 这样就会造成**冗余(Redundanz)**.\n这种情况就很容易造成[[#更改异常(Update-Anomalie)]]:只更新了其中一项的内容\n更改成更好的 Schema:\n![[attachments/Pasted image 20221205152031.png|480]]\n\n##### 更改异常(Update-Anomalie)\n指由于同一数据的重复存储, 修改一处必须找出其他多处\n\n##### Partielle FD, Volle FD\n已知 $X \\rightarrow Y$, \n- 若没有有 $X^{\\prime} \\subsetneqq X$ 且 $X^{\\prime} \\rightarrow Y$, 则称 $X \\rightarrow Y$ **volle FD**($X \\overset{\\bullet}{\\rightarrow} Y$)\n- 否则是 **partielle FD**\n\nvolle 相当于最小化了, 这个就是可以提取成新表的主键\npartielle 意味着还得找 volle\n\n##### Full FD vs. Key\nKey 不一定代表其他属性就对它 full FD, 因为 ffd 是一个集之间的关系, $X$ 是 key vs. $X \\rightarrow Y$, 前者代表 X 可以确定一个项(的其他属性作为一个整体), 后者代表可以确定 Y 中的每一个属性.\n前X和后X在一张表里可能不相等, 如果相等说明设计得好\n\n##### Triviale funktionale Abhängigkeit\n由于 [[#Reflexitivity(R)]], 每个属性对自己和包含自己的集 FD\n这种关系称为 trivial funktionale Abhängigkeit.\n\n#### Prime Attribute\nEin Attribut heißt prim, wenn es Teil eines Schlüsselkandidaten ist\n\n#### verlustlos/verbundtreu\n指一张表分离成两张时无损, 即 $R = R_1 \\bowtie R_2$\n这通常需要 $R_1$ 和 $R_2$ 的交集等价于两者之一 (这个等价也包括外键带来的数据)\n\n#### abhängigkeitserhaltend/hüllentreu\n描述一张表分离成两张时保持 functional dependency 状态\n需要 $F_R = (F_{R_1} \\cup F_{R_2})$ bzw. $F_R^+ = (F_{R_1} \\cup F_{R_2})^+$\n$F_R$ functional dependency of Relation R\n\n#### Hülle einer Attributmenge\n属性集的凸包\nF: Set of FDs\nX: Set of Attributes\nres = $X^+$: vollständige Menge von Attributen $X^+$, fürdie gilt $X \\rightarrow X^+$\n```pseudocode\nAttrHull(F, X)\n\tres := X\n\twhile(res changed) do\n\t\tforeach Y -\u003e Z \\in F do\n\t\t\tif Y \\subseteq res then res := res \\cup Z\n\treturn res\n```\n\n### Notation Convention\nAttribute: A, B, C\nAttribute set: X, Y, Z\n\n看起来就是为了functional dependency简化的 Notation表\n![[attachments/Pasted image 20221205154414.png|500]]\n\n### Herleitung von FD\n\n#### Axiome\n![[attachments/Pasted image 20221205164520.png]]\n\n##### Reflexitivity(R)\n$Y$ 是 $X$ 的子集, 则恒有 $X \\rightarrow Y$\n$X \\rightarrow X$ 恒成立\n\n##### Verstärkung(VS)\n若 $X \\rightarrow Y$, 则 $XZ \\rightarrow YZ$\n$XZ = X \\cup Z$\n\n##### Transitivity(T)\n$X \\rightarrow Y$ 且 $Y \\rightarrow Z$, 则 $X \\rightarrow Z$\n\n##### 显然FD没有对称性\n\n##### Vereinigungsregel(VE)\n$X \\rightarrow Y$ 且 $Y \\rightarrow Z$, 则 $X \\rightarrow YZ$\n\n##### Dekompositionsregel(D)\n$X \\rightarrow YZ$ 则 $X \\rightarrow Y$ 且 $X \\rightarrow Z$\n\n##### Pseudotransitivitätsregel(P)\n$X \\rightarrow Y$ 且 $YZ \\rightarrow V$, 则 $XZ \\rightarrow V$\n\n#### 证明 key candidate\n![[attachments/Pasted image 20221205222148.png|500]]\n![[attachments/Pasted image 20221205222646.png|500]]\n![[attachments/Pasted image 20221205222735.png|500]]\n\n### 1. Normalform\nFNF, first normal form\n\n**Def.** \nEin Relationenschema ist in 1. Normalform, wenn alle Attributwerte atomar sind\n只要每个属性只有一个值就是\n\n\"nested relation\", **non first normal form**, NFNF, NF2\ne.g. group by\nIn SQL nur temporär erlaubt\n\n### 2. Normalform\n**Motivation**\n避免有多键的表中, 属性只对其中一键依赖的情况\n\n**Def.** \nEin Schema ist in 2. Normalform, wenn jedes Attribut\n- voll funktional abhängig von *allen Schlüsselkandidaten*\n- oder [[#Prime Attribute|prim]] ist\nverletzt: existiert zusammengesetzter Key(candidate) $\\wedge$ existiert nicht prime Attr\n\n#### Zur 2.Normalform\n将导致 pfD 的部分单独提取成一张表, 被依赖者为 key, 依赖者为属性\n\ne.g.\nLieferant(__LNr__, LName, LStadt, LLand, __Ware__, Preis)\n↓\nLieferung(__LNr__, __Ware__, Preis)\nLieferAdr(__LNr__, LName, LStadt, LLand)\n\n### 3. Normalform\n**Motivation**\n避免对非 key 属性的依赖\n\n**Def.**\nEin Relationenschema ist in 3. Normalform, wenn für jede nicht [[#Triviale funktionale Abhängigkeit|triviale funktionale Abhängigkeit]] $X \\rightarrow A$ gilt:\n- X 包含 key candidate oder\n- A ist [[#Prime Attribute|prim]]\n2.N 的要求已经隐式包含\n\n就比如说 如果一个属性 B 依赖于另一个属性 A, 那就是非 trivial\n如果这个 A 还是个非 key candidate属性, B 也不是 prim, 那就违反了 3.N 的要求\n\n#### Zur 3. Normalform\n将 依赖非key 的部分(或者说传递性依赖)单独提取成一张表, 被依赖者为 key, 依赖者为属性\n\n#### Synthesealgorithmus für 3NF\n**Idea**\n拆表, 合理设计数据库\n\n**Input**\n- Relation $R$\n- $F$ FD von R\n\n**Output**\n- $R_1, \\ ..., \\ R_n$ [[#verlustlos/verbundtreu|verlustlose]], [[#abhängigkeitserhaltend/hüllentreu|abhängigkeitserhaltende]] Zerlegung von $R$ in 3NF\n\n**Algorithm**\n1. 确定 $F$ 的最简形式 $F_c$ (kanonische Überdeckung)\n\t对所有 FD $X \\rightarrow Y$:\n\t1. 检查所有 $A \\in X$, A 是否多余, 即$Y \\subseteq AttrHull(F, X - A)$ 是否成立. 若是, 则改为 $(X-A) \\rightarrow Y$.\n\t2. 检查所有 $B \\in Y$, B 是否多余, 即 $B \\subseteq AttrHull((F-(X \\rightarrow Y)) \\cup (X \\rightarrow(Y-B)), X)$ 是否成立. 若是, 则改为 $X \\rightarrow (Y-B)$.\n\t3. 去除 $X \\rightarrow \\{\\}$.\n\t4. 合并 $X \\rightarrow Y_1,\\ ...,\\ X \\rightarrow Y_n$ 为 $X \\rightarrow (Y_1 \\ \\cup \\ ... \\ \\cup \\ Y_n)$.\n2. 从 $F_c$ 创建新的 Relationenschemata  \n\t对所有 $X \\rightarrow Y \\in F_c$:\n\t- 新 schema $R_X := X \\cup Y$\n\t- 分配 FD, $F_X := \\{X' \\rightarrow Y' \\in F_c | X' \\cup Y' \\in R_X\\}$\n3. 重设大表的 key candidates\n4. 删除多余关系\n\n![[attachments/Pasted image 20221206222226.png|500]]\n\n![[attachments/Pasted image 20221206222242.png|500]]\n\n#### 某作业\n{ C, A → D ; C → F, D ; B → A, E ; E → F, A }\n1.\na)\nLinksreduktion:\nC, ~~A~~ -\u003e D\n{C} $\\subseteq$ AttrHülle(F, {C, A} - {A})\nweil C -\u003e F, D direkt gilt\n\nb)\nRechtsreduktion:\nC -\u003e ~~D~~\n{C} $\\subseteq$ AttrHülle(F - (C-\u003eD) $\\cup$ (C-\u003e{}), {C})\nweil es C -\u003e F, D schon gibt\n\nB -\u003e ~~A~~, E\n{A} $\\subseteq$ AttrHülle(F - (B-\u003eA,E) $\\cup$ (B-\u003eE), {B})\nweil B -\u003e E und E -\u003e A (transitiv)\n\nc) C -\u003e {} wird eliminiert\n\nd) nichts zu tun\n\nFc = { C -\u003e F,D ; B -\u003e E ; E -\u003e F,A}\n\n2.\nR1(\u003cu\u003eC\u003c/u\u003e, F, D)     {C -\u003e F, D}\nR2(\u003cu\u003eB\u003c/u\u003e, E)         {B -\u003e E}\nR3(\u003cu\u003eE\u003c/u\u003e, A, F)     {E -\u003e A, F}\n\n3.\nR(\u003cu\u003eB\u003c/u\u003e, \u003cu\u003eC\u003c/u\u003e) weil (B,C) Schlüsselkandidate ist (10-5 (a)) \n\n4.\nnichts zu tun\n\n\n#### 3NF 还有什么问题?\n还有这样的属性被依赖: [[#Prime Attribute|prim]], 但不能只凭自身构成 key candidate 的属性.\n![[attachments/Pasted image 20221207221059.png|480]]\n\n### Boyce-Codd Normalform\n**Def.**\nEin Schema R ist in Boyce-Codd Normalform, wenn für alle nichttrivialen Abhängigkeiten $X \\rightarrow Y$ gilt:\n- $X$ enthält einen Schlüsselkandidaten von R\n\n- velustlose Zerlegung möglich\n- abhängigkeitserhaltende Zerlegung nicht immer möglich\n\n### Mehrwertige Abhängigkeiten(MVD)\n- mehrere unabhängige 1:n Beziehungen in einer Relation stehen.\n- $X \\twoheadrightarrow Y$\n![[attachments/Pasted image 20221207223132.png|500]]\n![[attachments/Pasted image 20221207223935.png|500]]\n\nverlustlose Zerlegung von MVD, wenn gilt:\n- $R = R_1 \\cup R_2$\n- $(R_1 \\cap R_2 \\twoheadrightarrow R_1) \\vee (R_1 \\cap R_2 \\twoheadrightarrow R_2)$\n\n#### triviale MVD\n**Def.**\nEine MVD $X \\twoheadrightarrow Y$ bezogen auf $R \\supseteq X \\cup Y$ ist *trivial*, wenn jede mögliche Ausprägung $r$ von $R$ diese MVD erfüllt, genau dann wenn:\n- $(Y \\supseteq X) \\vee (Y = R-X)$\n\n### 4. Normalform\n**Def.**\nEine Relation $R$ mit zugeordneter Menge $F$ von funktionalen und mehrwertigen Abhängigkeiten ist in *4. Normalform(4NF)*, wenn für jede MVD $X \\twoheadrightarrow Y \\in F^+$ eine der folgenden Bedingungen gilt:\n- die [[#triviale MVD|MVD ist trivial]]\n- oder X ist Superschlüssel von R\n\n## Physische Datenorganisation\n\n### 磁盘的结构和原理\n- 一个`盘` 两面可读写\n- 读写头可以在不同`轨道`之间移动\n- 轨道分成多个`扇区`\n\n![[attachments/Pasted image 20221021191547.png]]\n\n#### 数据读取的速度\n![[attachments/permanent/磁介质存储设备#磁盘数据读取的速度]]\n\n### Index 结构\nIndex 结构是数据的存储结构\n\n#### Index 结构\n构造:\n- Directoryseiten: index/directory\n- Datenseiten: physische Datensätze\n\n分类:\n- Datenorganisierende Strukturen\n- Raumorganisierende Strukturen\n\nprimary key search: B-Tree, 线性哈希\nsecondary key search: inverted list\n\n#### 数据库 Index 结构的要求\n- 高效查找: 如果不优化, 难道一条一条数据找吗\n- 动态插入, 删除和更改: 不可能改一下就要重新组织整个结构(如有序队列)\n- 保持有序:如关联的数据应该在附近(局部性原理)\n- 高存储利用率(Speicherplatzausnutzung)\n\n\n### B 树\n![[attachments/permanent/B 树#B 树]]\n\n![[attachments/permanent/B 树#B 树的阶 m]]\n\n![[attachments/permanent/B 树#B 树的插入]]\n\n![[attachments/permanent/B 树#B 树的删除]]\n\n### B+ 树\n![[attachments/permanent/B+ 树#B+ 树]]\n\n![[attachments/permanent/B+ 树#分离值 Separator]]\n\n### Hashing 方法\n- Raumorganisierendes Verfahren\n- 最好情况下读取时间复杂度可以到常数\n\n#### 二级存储的 Hash 方法\nde. Hash-Verfahren für Sekundärspeicher\n- 高存储利用率(50% Datenseiten)\n- 高效的动态方法(插入, 删除, 更改)\n- 查询的效率可以\n\n#### Hash 方法分类\n- with directory\n- without directory\n![[attachments/Pasted image 20221219165304.png|500]]\n\n\n#### Hash method with directory\n- **hash(k)/h(k)** 计算结果是一个 bit 字符串, 也就是由 0和1 组成的数列\n- **depth d** 是 bit 字符串位数, 一共有 $2^d-1$ 可用 bit串, 深度可变\n- 出现撞表时, 如果不能分表, 则扩表\n- 某一个数据占表比例太大(\u003e90%)也会分表\n- 不同的哈希值可能指向同一个数据, 通常是扩表导致的\n\n#### Linear Hashing\nHash method without directory\n- hash() 直接计算得到存储地址\n- 撞表 -\u003e 把撞表地址关联\n- 有一系列 hash function: $h_0, h_1,h_2,\\ ...$\n- 存储率 Belegungsfaktor 大于阈值 Schwellwert 会对溢出页使用下一个 hash function\n- 存储空间使用随数据量线性增长\n\n![[attachments/Pasted image 20221219231618.png|500]]\n![[attachments/Pasted image 20221219231631.png|500]]\n\nhash 方法是有要求的, 对第 L 个方法 $h_L$(从$h_0$开始):\n1. 对值域的要求: $h_L: domain(k) \\rightarrow \\{0, 1, ..., (2^L \\times N) -1\\}$, 即第 L 个函数要保证值域中 \\#值=$2^L \\times N$\n2. 对相邻函数的要求: $h_\\{L+1\\} = h_L(k) | h_L(k) + 2^L \\times N$\ne.g. $h_L(k) = k\\mod (2^L \\times N)$\n\n\n### Inverted Index in DBS\n- 对每个 attribute 的具体值 $a_1, a_2, ..., a_d$ 建立反向索引\n- Antwortzeit 不会随\\#回答数据增加\n- Suchzeit 随#Attribute 增加\n- 对非主键, 二级索引不会影响物理存储\n\n### SQL 中的 Index\n![[attachments/SQL#SQL Index]]\n\n\n\n## Relationale Anfragebearbeitung\n\n\n### Grundlage der Anfrageoptimierung\n\n#### Aufgabe der Anfragebearbeitung\n![[attachments/Pasted image 20230103160352.png|400]]\n\n#### Kanonischer Auswertungsplan\n```sql\nSELECT A1, A2 FROM R1, R2, WHERE C1, C2\n```\nto\n$\\pi_{A_1, A_2}(\\sigma_{B_2}(\\sigma_{B_1}(R_1 \\times R_2)))$\n\n1. Produkt der Relationen\n2. Selektionen mit Bedingungen\n3. Projektion\n\n![[attachments/Pasted image 20230104211805.png|200]]\n\n#### Logische vs. Physische Anfrageoptimierung\nlogische 的比如说改变 plan 子行为的顺序\nphysische 涉及到存储的使用策略\n\n#### Regelbasierte vs. Kostenbasierte Anfrageoptimierung\nregelbasiert/algebraische 比如利用等价的规则来优化\nkostenbasiert 就是先看成本再选择方案\n\n### Logische Anfrageoptimierung\n\n#### Äquivalenzregeln der Relationalen Algebra\n**Commutative**: join, union, intersect, crossproduct, selection*\n**Assosiative**: join, union, intersect, crossproduct, selection*\n\n#### Restrukturierungsalgorithmus\n- 拆分(复数) selection 并尽可能在前面地执行 selection(比如在 product前, 减少 product 的数据量爆炸)\n- select + cross -\u003e join\n- project 尽可能晚\n- 将可以合并的 selection 合并\n\n```sql\n/* e.g. */\nSELECT name FROM Kunde k, Bestellt b, Produkt p\nWHERE b.KNr = k.KNr AND Bezeichnung=\"Fiat Uno\" AND Saldo \u003e= 300000\n```\n\n开始时的 Kanonischer Auswertungsplan\n![[attachments/Pasted image 20230104220951.png|300]]\n\n![[attachments/Pasted image 20230104221031.png|500]]\n\n![[attachments/Pasted image 20230104221045.png|500]]\n\n### Kostenmodellbasierte Anfrageoptimierung\n\n#### Selektivität\n$sel$ 表示经过一个操作后剩下的条目比例\n\nSelection  $sel_B = \\frac{\\sigma_B(R)|}{|R|}$\nJoin        $sel_{RS} = \\frac{|R \\bowtie S|}{|R \\times S|} = \\frac{|R \\bowtie S|}{|R| \\cdot |S|}$\n\nAND:  $sel_B(\\sigma_{B1 \\wedge B2}) = sel_B(\\sigma_{B1}) \\cdot sel_B(\\sigma_{B2})$\nOR:    $sel_B(\\sigma_{B1 \\vee B2}) = sel_B(\\sigma_{B1}) + sel_B(\\sigma_{B2}) - sel_B(\\sigma_{B1}) \\cdot sel_B(\\sigma_{B2})$\nNOT:  $sel_B(\\sigma_{\\neg B1}) = 1 - sel_B(\\sigma_{B1})$\n\n#### Schätzmethoden\n\n##### Parametrische Verteilungen\n对数据进行分布拟合\n![[attachments/Pasted image 20230104222711.png|400]]\n难点: 分布的选择, 分布参数的测定. 最大的问题是无法在多属性查询时使用\n\n##### Histogram\n把数据划分为区间, 观察区间内数据分布情况\n等宽直方图: 区间等宽\n等深直方图: 每个区间的数据数量相同\n\n一维直方图在多属性时的问题是, 假设了各属性间无关联\n多维直方图在多属性时的问题是, 成本随维度指数增长000000000000000000000\n\n##### Stichproben\n就是随机数, 蒙特卡罗方法, 难点在于 n 的选择, 太小不准, 太大又贵\n\n### Physische Anfrageoptimierung\n目的: 对某一次操作(例如查询)寻找最适合的算法和数据结构\n\n\u003e R JOIN S ON R.A=S.B\n\n#### Notation\n$BR/BS$:number of blocks\n$f_R/f_S:\\ \\ \\#relations/block$\nc :       size of cache (Bytes)\n$t_{tr}$ :      transfer time\n$t_{lat}$ :     磁盘的平均延迟\nb:        size of block\n\n其中 b 也就是 Block 大小是要被最优化的参数(现实一般好像是16kb)\n\n#### Nested-Block-Loop-Join(NBL-Join)\n- 每个小格子是一个数据项(的对比), 一个 Block 是4项, 4x4 是16次对比\n\n##### Einfacher Nested-Loop-Join\n![[attachments/Pasted image 20230104225407.png|300]]\n```python\nfor r in R:\n\tfor s in S:\n\t\tif r.A == s.B:\n\t\t\tresult.append((r, s));\n```\n\n(Blockzugriffe)\n$\\#load = BR \\times (f_R \\times BS + 1)$\n\n##### Nested-Block-Loop-Join\n- 稍微优化一点, 稍微优化 Block 读取次数, 着眼当前地充分利用每次 load block\n![[attachments/Pasted image 20230105192701.png|300]]\n```Python\nfor block_r in R:\n\t# load block\n\tfor block_s in R:\n\t\t# load block\n\t\tfor r in block_r:\n\t\t\tfor s in block_s:\n\t\t\t\tif r.A == s.B:\n\t\t\t\t\tresult.append((r, s))\n```\n\n$\\#load = BR \\times (BS + 1)$\n\n#### Cache Strategy for NBL-Join\n关键: size of block\n太小了太大了都会增加读写次数\n\n**其一**\n在[[#Nested-Block-Loop-Join]]的基础上, 加入缓存机制, 并将 Block读取顺序 Z 形读取改为 蛇形(是整个Block的读取, 不是Block内部)\n![[attachments/Pasted image 20230105195755.png|200]]\n\n$|C|$ : 可用的 cache 能放多少 Block \n\nBlockzugriffe = $BR + BR \\cdot (BS - |C| + 1) + |C| -1$\n\n**其二**\n用 $|C|$ - 1 个 Page 缓存 R, 剩下那一个缓存 S\n\n例如 $|C|$ = 3\n![[attachments/Pasted image 20230105204428.png|500]]\n\nBlockzugriffe = $B_R + B_S \\cdot \\left \\lceil \\frac{B_R}{|C|-1} \\right \\rceil$\n\nI/O用时\n![[attachments/Pasted image 20230105211107.png|500]]\n![[attachments/Pasted image 20230105211118.png|500]]\n\n优化函数\n![[attachments/Pasted image 20230105214647.png|500]]\n$$0 = \\frac{\\mathrm{d}}{\\mathrm{d}b}t_{hull} \\Rightarrow b_{opt} = \\frac{\\sqrt{t^2_{lat}+t_{tr} \\cdot t_{lat} \\cdot c}- t_{lat}}{t_{tr}}$$ \n取正根, 取整后有两个结果\n$$b_1 = c/ \\left \\lfloor \\frac{c}{b_{opt}} \\right \\rfloor,\\ b_2 =c/ \\left \\lceil \\frac{c}{b_{opt}} \\right \\rceil $$\n\n\n**实际上, 相比于 CPU 耗时, I/O 耗时是非常低的, 因此需要对 CPU 更友好的算法**\n\n#### Sort-Merge-Join\n1. 把数据排序\n2. 用双指针法比较\n\n时间复杂度 $O(|R| \\cdot \\log |R| + |S| \\cdot \\log |S|)$\n![[attachments/Pasted image 20230105223526.png|500]]\n\n#### Hash-Loop-Join\n\n##### Naive Hash Join\n1. 将 R 全哈希了\n2. 对每一个 s 哈希, 拿哈希表比对\n![[attachments/Pasted image 20230105225928.png|500]]\n$O(|R| + |S|)$\n\n##### Hashed Loop Join\n每次读取合适数量的 R 哈希, 把所有 S 和这部分比对,\n再读取下一部分合适数量的 R, 重复\n\n![[attachments/Pasted image 20230105230215.png|500]]\n![[attachments/Pasted image 20230105230230.png|500]]\n\n##### GRACE / Hash Patitioned Join\n不是把每个 r 和每个 s 比对,\n而是用 hash function 把 R 和 S 分别划分成 hash key 分区(Partition), 只有具有相同 hash key 的 R分区 和 S分区需要比对\n![[attachments/Pasted image 20230105230907.png|500]]\n![[attachments/Pasted image 20230105230926.png|500]]\n\n## Transaktionen\n\n### Synchronisation(Concurrency Control)\n\n##### Transaktion\ntransaction\nFolge von Befehlen (read, write), die die DB von einen  \nkonsistenten Zustand in einen anderen konsistenten Zustand überführt\n对数据库的一系列操作, 其影响是持久性的. 数据库的完整性被保护下的状态变化单元, 主要任务是\n- 同步\n- 数据恢复\n\n#### ACID 原则\n\n##### Atomicity\n原子性, transaction 的效果要么完整, 要么没有.\n\n##### Consistency(maintaining integrity)\nconsistent 状态 → consistent 状态\n\n##### Isolation\n一个用户不会觉察其他用户在 transaction 中所做的更改\n\n##### Persistence/Permanence\n完成的 transaction 的影响永久地保存在数据库\n\n\n#### Transaction 流程控制\n\n##### begin of transaction(BOT)\nsetup 操作, 在 sql 里没有\n\n##### end of transaction(EOT)\nteardown\nsql: `commit` / `commit work`\n\n##### abort\n放弃更改\nsql: `rollback` / `rollback work`\n\n##### 对于 长transaction\n- 定义保存点\n\t- 处于活动状态的事务可以回滚到该保存, 不可提交\n\t- sql: `savepoint \u003cidentifier\u003e`\n- 备份 transaction\n\t- 回滚\n\t- sql: `rollback to \u003cidentifier\u003e\n\n##### commit 失败\n如果检测到 commit 违反约束(如 [[#Integrity Constraints]], 数据的正确性和完整性), 可能会失败.\n\n\n#### 为什么要同步/并发\n- 单线太慢, 等待时间长, 吞吐量(leistungsfähigkeit)低\n- 可以多用户操作\n\t- 同步可以确保一个用户操作时不受其他用户影响\n\n#### Anomalien in Mehrbenutzerbetrieb 多用户操作中的异常\n\n##### Lost Updates\n违反: Durability\n\n##### dirty read/ dirty write\n数据状态不是永久有效的,\n如果临时状态的数据被读取了, 就叫脏读取\n![[attachments/Pasted image 20230119210648.png|450]]\n违反: Durability/Consistency\n\n##### Non-Repeatable Read\n一个 TA 在执行过程中读取了两次, 值不一样(别的 TA 更改了)\n违反: Isolation\n\n##### Phantomproblem\n不可重现阅读的特例，其中涉及新生成的数据，并且主要在第二个 TA 聚合函数中\n![[attachments/Pasted image 20230119212116.png|450]]\n咦, 不是查到 n 项数据吗, 怎么又变成了 n+1 项\n\n#### Serialisierbarkeit von TA\n指一个[[#Allgemeiner Schedules 一般调度|一般调度]]是否能转化为一个[[#Serieller Schedule 串行调度|串行调度]]\nMotivation\n- 对用户隐藏并发\n- 对用户透明, 即感觉 TA 在以任意顺序连续执行, 而不是和其他 TA 交错\n\n![[attachments/Pasted image 20230123213010.png|400]]\n\n##### Allgemeiner Schedules 一般调度\nSchedule(history) 是集合 {$T_1$, ..., $T_n$}, 是 TA 的行动序列.\n它对交易 $T_i$ 的顺序(存在穿插)洗牌, 但会保留每个 TA 的内部顺序\n\n一般调度显然提供了任意的联锁，因此出于**性能**方面的考虑，需要一般调度。\n\n##### Serieller Schedule 串行调度\n各 TA 的操作没有交错, 而是一块一块执行.\n从 **Isolation 的原则**看, 需要串行调度\n\n##### Serialisierbarer Schedule 可序列化调度\nEin (allgemeiner) Schedule S von {T1 , ..., Tn} ist serialisierbar, wenn er dieselbe Wirkung hat wie ein beliebiger serieller Schedule von {T1 , ..., Tn} .\n可序列化调度是存在等价串行调度的一般调度. 是一般调度和串行调度的折衷.\n得到的等价调度称为 **Serialisierungsreihenfolge**\n\n##### Abhängigkeit\n\n###### Schreib-Lese-Abhängigkeit $T_i$ → $T_j$ \n对某一项 x, w$_i$(x) 应该在 r$_j$(x) 前\nAbkürzung: wr$_{i,j}$(x)\n\n###### Lese-Schreib-Abhängigkeit $T_i$ → $T_j$\n对某一项 x, r$_i$(x) 应该在 w$_j$(x) 前\nAbkürzung: rw$_{i,j}$(x)\n\n###### Schreib-Schreib-Abhängigkeit $T_i$ → $T_j$\n对某一项 x, w$_i$(x) 应该在 w$_j$(x) 前\nAbkürzung: ww$_{i,j}$(x)\n\n##### Konflikt-Äquivalenz 冲突等价\n如果说 调度 S1 和 S2 等价, 那他们的 TA 以及 TA的依赖([[#Abhängigkeit]]) 就应该是等价的. 即比如说, 如果 S1 中读某个项的值是 x, 那 S2 读到的也应该是 x.\n\n![[attachments/Pasted image 20230119214906.png|500]]\n\n##### Serialisierungs-Graph\n- 用于检查两个调度是否冲突等价\n- TA 是 Node\n- 依赖是 Edge\n- Ein Schedule ist **serialisierbar**, falls der Serialisierungs-Graph **zyklenfrei** ist\n- 通过对图的拓扑排序, 可以得到 **Serialisierungsreihenfolge** (如果有的话)\n- 通过图的方法计算[[#Serialisierbarer Schedule 可序列化调度|可序列化性]]的成本太高, 因此通常用其他方法, 如被动管理([[#Locking]])或在结束后主动检查\n\n![[attachments/Pasted image 20230119221110.png|500]]\n\n![[attachments/Pasted image 20230119221123.png|500]]\n\n\n##### Rücksetzbarer Schedule 可撤销调度\nT$_i$ 只有在其读取了数据的 T$_j$ 结束后, 才能执行 commit\n\n##### Schedule without cascading reset \n没有级联 reset 的调度\n进行中的 TA 涉及的数据禁止读取\n\n##### Strikter S.\n在 [[#Schedule without cascading reset]] 的基础上, 进行中的 TA 的数据不能被覆盖\n\n#### Locking\n\n##### Lock(Sperre)\n- LOCK()/UNLOCK() atomar(不可打断)\n- Sperrgranularität: Datenbank, DB-Segment, Relation, Index, Seite, Tupel, Spalte, Attributwert\n- Sperrenverwalter 执行锁\n\n##### Legal Schedule 合法调度\n- 每次访问一个对象前都会设置适当的锁, 最迟在 TA 结束时解锁\n- 等待已有的锁\n-  lock/unlock 应在 DBMS 中隐式完成\n- 合法调度并不一定是[[#Serialisierbarer Schedule 可序列化调度|可序列化调度]]\n\n##### Zwei-Phasen-Sperrprotokoll(2PL)\n- 最简单和最常用的\n- 在上锁结束前不解锁\n- 两个阶段: \n\t- Wachstumsphase: Anforderungen der Sperre\n\t- Schrumpfungsphase: Freigabe der Sperre\n![[attachments/Pasted image 20230123215755.png|400]]\n- 问题: 不能撤回\n![[attachments/Pasted image 20230123215921.png|400]]\n\n##### Striktes Zwei-Phasen-Sperrprotokoll(Striktes 2PL)\n- 在 [[#Zwei-Phasen-Sperrprotokoll(2PL)|2PL]] 的基础上, 所有锁保持到 COMMIT\n![[attachments/Pasted image 20230123220042.png|400]]\n- 保证[[#Serialisierbarkeit von TA|可序列化]], 可搜索的调度, 但 TA 的 并行度(Paralleilisierungsgrad) 受到严格限制\n- 问题: 过于严格了, 实际上纯读取是可以并行的(无级联)\n\n##### RX-Sperrverfahren\n- 允许纯读取 TA 之间并行\n- 主要与[[#Striktes Zwei-Phasen-Sperrprotokoll(Striktes 2PL)|Striktes 2PL]]结合使用, 仅能得到无级联的[[#Rücksetzbarer Schedule 可撤销调度|可撤销调度]]. 得到的 Serialisieungsreihenfolge 由第一个冲突操作决定\n- 可能造成死锁(Deadlock, Verklemmung)\n\n### Datensicherheit(Recovery)\n\n#### Fehler 和 Recovery 的分类\n\n##### Transactions Recovery\n\nTransaktionsfehler(未确认的 TA 的错误)\n- 程序错误\n- ROLLBACK\n- Sync Conflict\n- Verletzung von Regeln\n\n通过 Rücksetzen 解决\n- local UNDO(如撤回某个 TA 的操作)\n- 这类错误很常见, 所以解决方法应在 mm 级完成\n\n##### Crash Recovery\n\nSystem Error(死机那类)\n\n通过 Crash Recovery(Warmstart) 解决\n- global UNDO: 重置所有已进入 DB 但未完成的 TA\n- global REDO: 更新所有已完成但未进入 DB 的TA\n- 通常频率可能在几天一次, 恢复需要数分钟\n\n##### Geräte Recovery\nMedien Error\n- Plattencrash\n- Wasserschaden\n- 系统程序导致的数据丢失\n\n通过 Geräte-Recovery(Coldstart) 解决\n- 恢复到较早的, 安全的数据库状态\n- global REDO: 更新所有在备份副本创建后完成的 TA\n- 介质错误很少发生, 通常是几年一次. 且需要提前备份\n\n#### Logging\n任务: 所有操作(DO)都需要日志条目, 以得到 UNDO 或 REDO 时需要的信息\n- physisch\n\t- Zustandslogging\n\t\t- Seitenlogging\n\t\t- Eintragslogging\n\t- Übergangslogging\n- logisch\n\t- Übergangslogging\n- physiologisch\n\n##### Physisches Logging\n在物理对象(Seiten, Datensätze, Indexeinträge)层面记录\n\nZustandslogging: 记录更改前后的值\n- Seitenlogging: 页面级别的记录, 恢复快速, 但页面锁定-\u003e高冲突率. 记录页面的完整副本所以占空间\u0026高I/O成本\n- Eintragslogging: 只有实际改变的条目被记录, 锁定粒度更小. 收集在缓冲区内-\u003e显著减少磁盘访问. 恢复更复杂, 需要将更改的Seite完全加载在主内存中才能使用(通过异或)\n\nÜbergangslogging: BFIM(before image) 和 AFIM(after image) 的差异\n\n##### Logisches Logging\n使用当前参数记录更改, 在更高的抽象级别\n\nREDO 的问题: \n- 更改通常包括多个 Seiten, 原子(操作)的 Einbringen 困难\n- 比物理更昂贵\n\nUNDO 的问题:\n- 面向数量的更改可能导致非常昂贵的日志条目\n\t- Bsp.: `DELETE FROM Products WHERE Group = ‘G1’` =\u003e UNDO erfordert viele Einfügungen, falls Produktgruppe G1 umfangreich ist  \n\t- Bsp.: `UPDATE Products SET Group = ‘G2’ WHERE Group = ‘G1’` =\u003e UNDO muss alte und neue Produkte der Gruppe G2 unterscheiden\n\n##### Physiologisches Logging\n[[#Physisches Logging]]和[[#Logisches Logging]]的结合\n- Physical-to-a-page: 记录单位是更改的page, 与缓冲区管理和直接原子Einbringen 很兼容\n- Logical-with-a-page: 一个页面上的变化用逻辑记录\n\n好处\n- Log条目 不会像逻辑日志那样引用多个页面\n- Log Data(数据量): logical \u003c physiological \u003c physical \n\n##### Log data\n\n记录类型\n- Begin, Commit, rollback of TA\n- DB状态 经过 TA 后的变化\n- checkpoints\n\nComponents of Änderungseinträgen\n- **LSN**(Log Seq. Number): 按时间排序的唯一表示符\n- **TA-Id**: (进行更改的) TA 的唯一标识符\n- **Page-Id**\n- **REDO**: 指示如何跟踪更改\n- **UNDO**: 指示如何逆转更改\n- **PrevLSN**: 指向各 TA 的前一个日志条目的指针(没有上一个则为0)\n\nLog data 的数据结构\n- Ringpuffer, sequentielle\n- 只需要一定时间内的记录\n\t- Crash Recovery: UNDO 记录 在 TA 完成后就不再需要了\n\t- Geräte Recovery: 需要 Archive Log\n![[attachments/Pasted image 20230127211908.png|500]]\n\n\n#### Abhängigkeiten zu anderen Systemkomponenten\n\n##### Speicherhierarchie\n\n**DBMS-Puffer/DB-Puffer**\n进行中的 TA 都在这里执行\n\n**DB**\nACID consistent 才放进去, COMMIT 就是到这里\n\n![[attachments/Pasted image 20230127214742.png|L|400]]\n\n##### 依赖总览: 在DB的操作中需要管理什么\nPufferverwaltung\n- Verdrängungsstrategien: Puffer voll?\n- Ausschreibestrategien: wann schreibe ich Änderungen aus?\n\nHGS-Verwaltung\n- Einbringungsstrategien: wie schreibe ich Änderungen aus?\n\n综上, wann schreibe ich Log-Datei auf Platte? Recovery/Logging 也依赖锁管理\n\n![[attachments/Pasted image 20230127215512.png|500]]\n\n##### Einbringungstrategie\n\n###### Direktes Einbringen\n- Non-atomic(不能随时打断), Update-in-Place\n- 当今 DBMS 最常见的方法\n- 每个 Seite 在 Platte 上有一个专门的地址, 更改 Seite 就是在 DB 覆盖原本的内容\n- UNDO 信息必须显示存储\n![[attachments/Pasted image 20230127220109.png|L|400]]\n\n###### Indirektes Einbringen\n- Atomic\n- Seite 在 Platte 有两个副本\n\t- Twin-Block-Verfahren: 每个 Seite 都有两个 Block\n\t- Scattenspeichertechnik: 只有改变过的 Seite 有两个 Block\n -  通过 Seitentabelle umschalte 记录更改的页面, 改完切换状态, 可以保证 atomic\n - 修改前的信息也保留了, 因此不用显式记载 UNDO 信息\n ![[attachments/Pasted image 20230127221259.png|L|400]] \n\n##### Einfluss der Sperrgranularität\n- Log granularity \u003c= Lock granularity, 否则可能 Lost Update\n- 下面这个例子, log(seite)\u003e锁(条目), 就出问题了\n![[attachments/Pasted image 20230127221732.png|L|500]]\n\n##### Verdrängungsstrategien\n置换策略: 什么时候替换缓存区的脏页\n\n**Schmitziger Seiten**\nSeitePuffer $\\neq$ SeiteDB\n\n如果是脏页:\n###### No-Steal\n- 不得从 Puffer 移除脏页, DB 不包含不成功的 TA\n- 不需要 UNDO Recovery\n- 更改仅可能在 COMMIT 后到达 DB(与Force冲突)\n- 长更改 TA =\u003e 大部分 Puffer blokiert =\u003e 限制并行\n\n###### Steal\n- 脏页可以被替换并随时可能带入 DB, DB 可能包含未确认的改变\n- 需要 UNDO Recovery([[#WAL-Prinzip (Write-Ahead-Log)]])\n- 对有很多长更改的 TA 来说, 这种方法更有效\n\n##### Ausschreibestrategien\nEOT操作, 什么时候把更改带进 DB\n\n###### Force\n- 所有更改最迟在 EOT(COMMIT 前) 写入 DB(与No-Steal冲突)\n- 每个更改是逐个写入的 =\u003e 高IO, 响应慢, 锁定时间长\n- 在系统错误时不需要 REDO\n- 大型 DB-Puffer 使用不当\n\n###### No-Force\n- 改变可以在 COMMIT 之后才写入 DB\n- COMMIT 时写入 REDO 信息到 Log([[#COMMIT-Regel(Force-Log-at-Commit)]])\n- 可以一次收集同一个 Seite 的多个 TA 上的改变\n\n##### Puffer Verwaltung\n![[attachments/Pasted image 20230127231410.png|500]]\n\n###### Steal/No-Force\n- 需要 REDO, UNDO, 但是是最通用的解决方案\n- 实际效果最好\n\n###### No-Steal/Force\n- 因为冲突, No-Steal =\u003e No-Force, Force =\u003e Steal\n- 牺牲 COMMIT 的效率, 优化错误情况\n\n##### WAL-Prinzip und COMMIT-Regel\n\n###### WAL-Prinzip (Write-Ahead-Log)\n- UNDO Info (e.g. BFIM) 必须在 DB 更改前记录\n- Steal/direktem Einbringen\n\n###### COMMIT-Regel(Force-Log-at-Commit)\n- REDO Info (e.g. AFIM) 必须在 DB 更改前记录\n- Crash-Recovery\u0026No-Force 必须\n- for Geräte Recovery Force/No-Force 必须\n\n##### Commit Verarbeitung\n\n###### Standard Zwei-Phasen-Commit\n![[attachments/Pasted image 20230128192905.png|L|400]]\n\nPhase 1: Logging\n- 检查延迟的 [[#Integrity Constraints]], 写入 REDO 包括 COMMIT 信息\nPhase 2: Unlocking\n- 释放锁(使更改可见)\n- 向程序确认 COMMIT\n\n问题\n- [[#COMMIT-Regel(Force-Log-at-Commit)|COMMIT-Regel]] 要求每次 COMMIT 写出(Ausschreiben) Log-Puffer\n- 对短 TA 性能退化\n- TA 的 Durchsatz 受限\n\n###### Gruppen-Commit\n![[attachments/Pasted image 20230128192952.png|L|400]]\n- Log data 在 Log Puffer 收集多个 TA \n- Log Puffer 满了的时候, 或者到一定时间, 将 Log Puffer 里的内容写到磁盘\n- 优点: 减少磁盘读写\n- 缺点: 锁时间长, 回应时间长\n- 现实中很多 DBS 支持\n\n###### Pre-Commit\n![[attachments/Pasted image 20230128223348.png|L|400]]\n- 为了避免 [[#Gruppen-Commit]] 中的长时间的锁, 在 COMMIT 信息写入 Log Puffer 时就会 unlock\n- 关于产生的脏读取(也不完全是脏, 毕竟在 log 中 commit 了)\n\t- 正常情况：改变的 TA 成功结束，改变是有效的\n\t- 错误情况：只有在系统错误的情况下才可能终止 TA ；在系统错误的情况下，其他运行的 TA 也被终止，\"脏读取\"因此不能影响DB\n \n#### Sicherungspunkt\n- 检查点是用来表明 REDO 界限的措施, 太少=\u003e高 REDO 成本; 太多=\u003e高正常流程成本\n- 如果没有检查点, 自 DBMS 开始以来的所有更改都可能重复. 对 Hot Spot Seiten 尤其重要(几乎不会从缓冲区移出的热点页面)\n\n##### Checkpoint 的实现\n\n特殊的日志条目:\n```sql\nBEGIN_CHKPT\nInfo about TA\nEND_CHKPT\n```\n\n最后一个完全执行的保存点的 LSN 会保存在 restart data 中\n\n##### Direkte Sicherungspunkte\n- 所有改变了的 页面 都在检查点写入 persistente DB(Platte)\n- 备份需要的时间和备份时间间隔成正比\n- Multi Page Access 有助于减少磁盘写入头的定位数\n- REDO 可以从最后一个完全执行的检查点开始\n\n###### TOC\nTransactions Oriented Checkpoint\n- 在每个 TA 提交时强制设置检查点\n- 只将缓存中与该 TA 相关的 页面写入磁盘, 而不是缓存中的所有 \n- 需要 UNDO, 不需要 REDO (Force =\u003e Steal)\n- 优点\n\t- 不需要 REDO, 从最后一个检查点 UNDO 恢复(然后重新开始未确认的 TA)\n\t- 与 页面锁 结合, 实现起来很容易\n- 缺点\n\t- 正常流程成本高, 尤其是 Hot Spot Seiten\n\n![[attachments/Pasted image 20230128230332.png|L|400]]\n\n###### TCC\nTransactions Consistent Checkpoint\n- 在 没有脏变化/没有进行中的TA/consistent 时, 创建检查点\n- 通过最后一个检查点 REDO 和 UNDO\n- 操作: 注册检查点 -\u003e 等进行中的 TA 完成 -\u003e 创建检查点(新来的TA等待创建完成)\n- 优点\n\t- 从最后一个检查点 REDO\u0026UNDO 恢复\n\t- 只有最后一个检查点之后的 TA 受到影响\n- 缺点\n\t- 系统等待时间长(\"死机\"时间)\n![[attachments/Pasted image 20230128231311.png|L|400]]\n\n###### ACC\nActions Consistent Checkpoint\n- 与 [[#TCC]] 相比, 不是确保 TA 完成, 而是确保没有更改操作\n- 操作: 注册检查点 -\u003e 等进行中的 更改操作 完成 -\u003e 创建检查点(新来的更改操作延后到检查点创建完成)\n- UNDO 恢复: 从 MinLSN(最后一个检查点中, 仍在活动中的 TAs 中的最小 LSN)\n- REDO 恢复: 从最后一个检查点开始\n- 优点\n\t- 在 [[#TCC]] 的基础上大量缩短系统等待时间\n- 缺点\n\t- UNDO 不能从最后一个检查点开始\n\t- 检查点质量差: 脏更改可能进入 DB\n ![[attachments/Pasted image 20230128232255.png|L|400]]\n\n##### Indirekte Sicherungspunkte\n- 更改不是完全的写入(direkte: 其高成本对大型 DB-Puffer 是不可接受的)\n- DB 没有 Actions/TA-consistent 状态, 而是 fuzzy 状态\n\n创建 indirect checkpoint\n- 基本上是记录 进行中的TA的状态 和 改变的Seiten\n- 最小的写入成本, 几乎对运行没有影响\n\nDB 更改的写出\n- 除了 Checkpoint, 进行中的 TA 异步处理\n- 对很久没变的页面, 预测性地写出\n- 对 热点页面:\n\t- 日志到达指定大小(Log-Umfang)时强制写出\n\t- 建立一个副本, 以免影响新的更改\n\n- UNDO 恢复: 从 MinLSN(最后一个检查点中, 仍在活动中的 TAs 中的最小 LSN)\n- REDO 恢复: 从 MinDirtyPageLSN = min(StartLSN)\n\t- 对所有更改过页面, 记录 StartLSN\n\t- StartLSN: 自上次从磁盘读取以来, 第一个更改操作的 LSN\n![[attachments/Pasted image 20230128234400.png|L|400]]\n\n##### Allgemeine Prozedur der Crash-Recovery\n![[attachments/Pasted image 20230128234532.png|L|400]]\n\n1. Analyse-Phase\n\t- 读取上一个检查点以来的所有 Log data\n\t- 确定 Gewinner TA 和 Verlierer TA\n\t\t- Gewinner TA: Log 中有 Commit 的 TA \n\t\t- Verlierer TA: Log 中没有Commit 或 有ROLLBACK 的 TA\n\t- 调查检查点后更改过的所有其他页面\n2. REDO-Phase\n\t- 向后读取 Log (起始点取决于备份类型)\n\t- 重复没有写入 DB 的更改\n\t\t- 方法1 redo all: 重复所有更改\n\t\t- 方法2 selective redo: 只重复 Gewinner TA 的更改\n3. UNDO-Phase\n\t- 向前读取 Log, 直到最旧的 Verlierer TA 的 BOT\n\t- 撤销所有 Verlierer TAs, 直到达上一个检查点时最旧的活动的 TA\n\t\t- 方法1 redo all(嗯redo): 只撤销到 错误节点 时仍在活动的 TA \n\t\t- 方法2 selective redo: 撤销所有 Verlierer TA\n4. Abschluß der Recovery **durch einen Sicherungspunkt**\n\n##### Recovery of Recovery\n- 如果在恢复期间发生错误, 就会重新开始 Recovery of Recovery, 所有[[#Allgemeine Prozedur der Crash-Recovery|阶段]]都要重新开始.\n- REDO 和 UNDO 阶段必须是 **idempotent** 的, 即使多次执行, 总是提供相同的结果. 即对每个 更改操作 A, 有:\n\t- UNDO(UNDO(...UNDO(A)...) = UNDO(A)\n\t- REDO(REDO(...REDO(A)...) = REDO(A)\n\n**Idempotenz der REDO-Phase**\n- 对每个 Log-Eintrag E, 如果实际上进行了 REDO, 就会将 E 的 LSN 记录到受影响的页面. 也就是说, 每个页面都记录了最后进行的 REDO 操作. \n- 这样是为了防止的 REDO 阶段崩溃后, 新的 REDO 意外触及 AFIM\n\n**Idempotenz der UNDO-Phase**\n- 每执行一次 UNDO, 就会记录一个 CLR(Compensation Log Record), 其中包括一下信息\n\t- LSN\n\t- 涉及的 TA 的 ID\n\t- 更改了的 页面 的 ID\n\t- 该 UNDO 操作的 REDO 信息\n- 如果在 UNDO 阶段出现错误, 会在 REDO 阶段执行记录中的 REDO 信息, 并在随后的 UNDO 阶段跳过(因此CLR记录了指向 **属于这个TA的, 在补偿操作之前的更改 的LSN** 的指针)\n\n### Integrity\n\n#### Integrity Constraints\nde. Integritätbedingungen\n数据库必须始终满足的条件, (通常/建议)由 DBMS 监督维持\n\n**约束的种类**\n- key integrity: 如 key 的唯一性\n- referential integrity: 如引用其他表的外键必须存在于该表\n- multiplicity constraint: 如维持 1:m 关系中的倍数关系(e.g. 涉及外键更改)\n- general constraint: 如属性的值域\n\n**Statisches Constraint**\n定义了可能的 DB 状态, 例如属性的值域\n\n**Dynamisches Constraint**\n定义可能的更新路径(Update-Operation)\n\n#### Declarative Constraints\n在大多关系型数据库中实现, 如 primary key, unique, foreign key, not null, check. 问题: 在应用这些约束时, 通常需要在程序中定义和实现 =\u003e 因此需要 [[#Procedural Constraints]]\n\n- 是 Schemadefinition 的一部分(create table ...)\n- e.g. [[permanent/SQL#SQL 约束]], [[permanent/SQL#属性约束]]\n- 属性相关/表相关\n- 在设计语言中通常是用 Prädikatenlogik 1.Stufe 描述\n\t- (UNIQUE Raum) IB$_1$ : $\\forall$ r$_1$ $\\in$ Raum(∀r$_2$ $\\in$ Raum (r$_1$ \\[R_ID]= r$_2$ \\[R_ID] ⇒ r$_1$ = r$_2$ ))\n\n##### Überwachung von Integritätsbedingungen durch das DBMS\n- $S$ Datenbankschema\n- $I$ Integrity constraint\n- $IB$ Menge von $I$ über dem Schema $S$\n- $DB$ Instanz von S, 现在的 DB状态\n- $U$ Update Transaction\n- $U(DB)$ 执行完 U 的 DB 状态\n- check($I$, $DB$) 检查 DB 状态是否满足 I\n\n###### 什么时候检查条件?\n\n**方法一: 定期检查所有条件**\n```text\nfor each U \u003cseit letztem Check\u003e do  \nif (∀I ∈ IB: Check(I,U(DB))) then \u003cok\u003e  \nelse \u003cRücksetzen auf letzten konsistenten Zustand\u003e;\n```\n问题:\n- 撤回很耗时\n- 会丢失正确的更新\n- 对不 consistent 的数据的读取访问不能取消\n\n**方法二: 在 Update 时 增长式检查**\n前提: 更新是在 consistent 的 DB 状态下进行的\n```text\n\u003cführe U durch\u003e;  \nif (∀I ∈ IB: Check(I,U(DB))) then \u003cok\u003e  \nelse \u003crollback U\u003e;\n```\n问题: 测试所有约束很昂贵 =\u003e 只测试受影响的 IC\n\n###### 检查什么?\n示例: referential integrity\n\n- 已知: S 的外键 $\\beta$ 用了 R 的主键 $\\alpha$\n- 那么需要满足的是: (s.$\\beta$ 只有 null 值) 或 (对每个 s.$\\beta$ 的 非null值 都有 s.$\\beta$ = r.$\\alpha$)\n- 然后课件 dbs1_10c 给了个推导\n\n![[attachments/Pasted image 20230129223552.png|L|500]]\n[[permanent/SQL#ON DELETE ...]]\n\n##### Wertenbedingungen(check)\n```text\nRang character(2) check (Rang in (`W1 ́, `W2 ́, `W3 ́))\n```\n- 如果 check 表达式被评估为未知, 算 true (与 where 相反)\n\n一个复杂一点的例子: 只有听了课的学生才能考试\n![[attachments/Pasted image 20230129224658.png|L|600]]\n(实际上几乎不支持, 解决方案是[[#Trigger]])\n\n#### Procedural Constraints(Trigger)\n直接在 [[permanent/SQL#DDL|DDL]] 中设置简单的 Integrity Constraints(declarative), 通过触发机制支持更复杂的 IC.\n\n##### Trigger\n- 与表关联且由特定事件触发的行为(通常是PL/SQL程序)\n- 包含代码, 测试条件, 然后启动行为\n- 可能的触发事件: insert, update, delete\n- 可能的时间\n- 一个 Integrity Constraint (很)可能有多个 Trigger\n\n##### Trigger 种类\n- Statement trigger(Befehls-): \n\t- 每个触发命令执行一次\n\t- 通过前缀 new./old. 可以获取 Datensatz 在某个事件前/后的实例\n- Row trigger(Datensatz-): \n\t- 对每条更改了(update/insert/delete)的记录执行一次\n\t- 通过 newtable/oldtable 可以获取 触发命令 的更改\n\n##### 示例\n\nTigger Programm 的组建过程\n![[attachments/Pasted image 20230129233151.png|L|600]]\n\n创建 Trigger\n![[attachments/Pasted image 20230129233651.png|L|600]]\n![[attachments/Pasted image 20230129233722.png|L|600]]\n\n##### 关于创建唯一的 ID 序列\n![[attachments/Pasted image 20230131165526.png|L|500]]\n\n![[attachments/Pasted image 20230131165849.png|L|500]]\n\n##### Trigger 的一般流程\n\nTA 的 语句 S 中的 Event e 触发了一组 Trigger T = T1, ..., tk)\n1. 将 T1, ..., Tk 加入到 Trigger 队列\n2. 中断 S\n3. 计算 new. \u0026 old. 或 newtable \u0026 oldtable\n4. 执行所有满足条件的 BEFORE-Trigger\n5. 执行 S 中指定的更新\n6. 执行所有满足条件的 AFTER-Trigger\n\nP.S. 如果 Trigger 又触发了 Trigger, 嵌套执行这套流程\n\n##### safe trigger\n- 如果一组触发器总是 terminal, 则被称为安全的(safe, sicher).\n- 通常很难测试是否 safe\n\n##### Trigger 可以做什么\n- 创建完整性条件和创建唯一的 ID\n- 执行业务流程(如进行预定时, 应发送一封确认邮件)\n- 监测数据库的变化\n- 管理临时储存的数据/管理 dauerhaft materialisierter Daten (z.B.  \nmaterialisierte Views)\n\n## Clustering\n\n#### K-Mean\n![[attachments/permanent/Clustering#K-Mean]]\n\n#### DBSCAN\n![[attachments/permanent/Clustering#DBSCAN]]\n\n## Wiederholung\n\n\n### Concepts\n\n#### 3-Ebenen Architektur\n![[attachments/Wiederholungsfolie01.pdf]]\n\n#### Relational Model\n![[attachments/Wiederholungsfolie02.pdf]]\n\n#### Relational Algebra\n![[attachments/Wiederholungsfolie04.pdf]]\n\n#### Tupel- und Bereichskalkül\n![[attachments/Wiederholungsfolie06.pdf]]\n\n#### E/R Model\n![[attachments/Wiederholungsfolie08.pdf]]\n\n#### Normalform\n![[attachments/Wiederholungsfolie09.pdf]]\n\n#### Transaction\n![[attachments/Wiederholungsfolie10.pdf]]\n\n### SQL\n![[attachments/Wiederholungsfolie03.pdf]]\n\n![[attachments/Wiederholungsfolie05.pdf]]\n\n![[attachments/Wiederholungsfolie07.pdf]]","lastmodified":"2023-06-16T20:05:50.0982389+02:00","tags":[]},"/project/lmu-FSV1":{"title":"lmu - FSV1","content":"\n[[permanent/Dafny|Dafny]]","lastmodified":"2023-06-16T19:25:04.7280446+02:00","tags":[]},"/project/lmu-Software-Engineering":{"title":"lmu - Software Engineering","content":"\nswt\n\n## Organization\nGMT+2\n`Vorlesung` Mittwoch 9:15-11:45\n`Tutorium` Mittwoch 18:15-19:45\n\n`Zentralübung` auf: Mitt, ab: Mitt, unbenotet\nIndividuelles Feedback durch studentische Tutoren\nLösungsvorschläge von uns, nach der R¨uckgabe\nder Korrekturen.\n\n## Statische Code-Analyse\n\n##### 静态代码分析\n即通过审查源代码, 不真正运行代码来分析\n\n### Software Metrics 软件指标\nsrc: Software-Qualität 5\n\n#### Criteria\n\n##### Objektivity\nde. Objektivität\n客观性, 不受主观因素影响\n\n##### Robustness\nde. Robustheit\n健壮性是指程序能在不正常输入的情况下仍正常表现.\n即使终止执行, 也要准确的输出错误信息\n\n##### Comparability\nde. Vergleichbarkeit\n必须能够与竞品在同一参数下比较\n\n##### Economy\nde. Ökonomie\n作为一个项目, 必须考虑成本问题\n\n##### Correlation\nde. Korrelation\n指观测参数和软件指标之间的相关性, 越相关, 得出的结果越可靠\n\n##### Valuability\nde. Verwertbarkeit\n只有当不同的测量结果以不同的方式影响未来的行动时，软件指标的使用才有实际意义。\n\n\n#### LOC and NCSS\n\n##### LOC\nLines of Code\n\n\n##### NCSS\nNon Commented Source Statements\n\n\n##### LOC 和 NCSS 的变体\n基础的两者只能差不多满足 Comparability\n- 统计可执行代码行数\n- 统计可执行代码行数和变量声明数\n- 统计 tokens\n- 统计语句分隔符(例如';'')\n\n\n#### McCabe Metrics\n|N| 节点数, 程序开始和程序结束也各算作一个节点\n|E| 边数\n\n##### Zyklomatische Zahl\n对强连接图, 计算公式为\n$V(Z) = |E| - |N| + 1$\n而编程常见的流程控制图并不满足强连接图, 公式为\n$V(G) = |E| - |N| + 2$\n\n##### Zyklomatische Komplexität\n对流程控制图, Zyklomatische Zahl 也称为 Zyklomatische Komplexität, 记作 $V(C)$.\n但实际上, 程序的理解难度和 ZK 并不一定是成正比的. 反例: U2-a2.\n\n##### 计算类的 V(C)\n等于类中所有方法的 $V(C)$ 的加总.\n\n#### OO Metrics\n\n##### 为什么面向对象程序需要特殊的分析方式?\n- 纯粹的命令式度量只能不完整地反映面向对象程序的复杂性。面向对象设计的一个核心组成部分是将思想模型划分为类以及它们之间的关系。\n- 继承机制使得代码大小和类的复杂性之间的任何关联都无法被(LOC, NCSS)计算。\n\n![[attachments/Pasted image 20221122221224.png]]\n\n##### WAC\nweighted attributes per class\n$$WAC = \\sum^{|A|}_{i=1}v_A(a_i)$$\n$a \\in A$ attribute\n$v_A(a)$ complexity of attribute a\n\n##### WMC\nweighted methods per class\n$$WMC = \\sum^{|M|}_{i=1}v_M(m_i)$$\n$m \\in M$ Method\n$v_M(m)$ complexity of method m\n\n##### LCOM\nlack of cohesion in method\n描述一个类、包或库的内聚程度\n相关性还没得到确认\n\n##### Fan-In\n$F_{in}(C)$ 表示一个类 C 被链接的次数(别人连它), 通常高层级的类有较低的 Fan-In\n\n##### Fan-Out\n$F_{out}(C)$ 表示一个类 C 链接其他类的次数(它连别人), 通常低层级的类有较低的 Fan-Out\n\n\n##### Systemcomplexity $v_{CG}$\n$$ v_{CG} = s_{CG} + d_{CG} $$\n$s_{CG}$ structural complexity\n$$s_{CG} = \\sum^n_{i=1}F_{out}(C_i)^2$$\n$d_{CG}$ data complexity\n$$d_{CG} = \\sum^n_{i=1}\\frac{IO(C_i)}{F_{out}(C_i)+1}$$\n$C_i$ 第 i 个类\n$IO(C_i)$ IO-variable\n\n$\\bar{v_{CG}}$ relative systemcomplexity\n$$\\overline{v_{CG}} = \\frac{V_{CG}}{n} = \\frac{1}{n}(\\sum^n_{i=1}F_{out}(C_i)^2 + \\sum^n_{i=1}\\frac{IO(C)}{F_{out}(C_i)+1})$$\n\n### Manuelle Sofrware-Prüfung\nsrc: Software-Qualität 5.5\n\n#### 分类\n- informel/formal\n- spontan/geplant\n- moderiert/unmoderiert 是否有人主持\n\n#### Walkthroughs\n非正式, 随时发生的审查, 不限于对代码, 也可以对配置文件, 测试案例等.\n\n以下原则可能会有帮助:\n\n**Mehraugenprinzip**\n\n**Erzählstil 小黄鸭法** \n\n**Externalisierung 外部化**\n\n#### Reviews\n正式, 通常是有计划的\n原则上: 全面, 可比较\n可以是人工也可以是自动\n![[attachments/Pasted image 20221123113129.png]]\n\n\n#### Inspections\n正式而有计划有主持\n\n1. Plannungsphase\n\t- 准备场地, 人员, 日期相关\n2. Überblicksphase\n\t- 分发角色, 提供项目背景信息. \n\t- 建议浏览速度 500NCSS\n3. Vorbereitungsphase\n\t- 初步评估, 每个人准备 Fehlerliste\n4. Inspektionssitzung\n\t- 建议浏览速度 90 NCSS \n\t- **Moderator** 控制流程, 氛围和方向\n\t- **Gutachter** 指导检查员小组阅读个别方案源代码和文件. 从自己的角度解释设计和程序构造. 需要较强的专业能力.\n\t- **Autor** 不可担任主持人, 记录员, 审查员, 而是以外部人的角度, 避免过度辩解.\n\t- **Protokollführer** 起草一份检查报告, 记录发现的问题并分配权重\n6. Nachbearbeitungsphase\n\t- 作者更正错误, 如果认为被指出的不是错误, 则会在重新审查阶段讨论.\n7. Überprüfungsphase\n\t- 还有没有要讨论的要改的?\n\t- 准备最终报告\n\n\n## Software Verification\nsrc: Software-Qualität 6.1\n\n### 概论\n![[attachments/Pasted image 20221124111455.png|500]]\n\n#### Verifikation vs. Validation\n\n##### Verifikation\nIs the product work correctly?\n##### Validation\nDoes the product satisfy the demand?\n\n#### Verifikationstechnik\n- Deduktion\n\t- 就是数学归纳法\n- Modellprüfung\n\t- 转成 Kripke 结构\n\t- 用遍历和时间逻辑验证\n\t- 由于规范语言的表达能力较低, 证明可以自动化\n- Abstrakte Interpretation\n\t- 将一个方案理解为一组方程式(Gleichungssystems).由此产生的方程组的解决方案对应于一个程序可以承担的一组状态.\n\t- 由于许多动态属性可以被映射到相应的状态集上，它们的有效性(Gültigkeit)可以通过简单的集合操作来检查, 在出现错误的情况下(im Fehlerfall), 可以从交集(Schnittmenge)处生成一个反例(Gegenbeispiel).\n\n![[attachments/Pasted image 20221124112056.png|600]]\n\n#### Verification techniques 的优势力衡量\n- Ausdrucksstärke\n\t- 一个程序的表达能力越高，其理论性能就越高。在消极方面，这种增长伴随着复杂性的爆炸性增长，这使得证明性能变得不成比例地困难。\n- Skalierung\n\t- 表达能力越强, 可扩展性就越差\n\t\t![[attachments/Pasted image 20221124114001.png|400]]\n- Automatisierung\n\n## Software Test\nsrc: Einführung in die Softwaretechnik 12.2\n\n### 软件测试\n\n- 测试只能发现不正确, 而不保证正确性\n- 系统的测试需要对需求精确的描述\n- 测试可以占到软件开发工作的50%\n- 需要搭建测试环境, 可能非常昂贵\n\n#### 为什么需要测试? 测试的目的?\nFehler finden, Code verhält sich erwartet für Testfall, *Codequalität* (nichtfunktionale Eigenschaften), *Diagnostizierbarkeit bei unerwarteten  \nAusgaben, Spezifikation (TDD), Testbarkeit* von Code als Gütekriterium\n\n#### 软件测试的原则\n- 开发人员避免测试自己的程序\n- 总是假设方案是错误的\n- 测试案例必须包括有效和无效的输入\n- 必须对结果彻底分析\n- 测试应当嵌入到开发过程中, 越早发现问题, 修改的成本就越小\n\n##### FIRST 自动化测试设计原则\n- fast\n- independent\n- repeatable\n- self-validating 自我验证\n- timely\n\n#### 软件测试的一般流程\n1. 测试规划 Test Design. 定义具体测试任务等\n2. 设计测试 Test Plannung. 定义基本测试架构, 功能测试环境\n3. 测试案例 Testspezifikation. 设计具体的测试案例, 确定需要达到的指标或阈值, 准备测试数据.\n4. 执行测试 Durchführung. 这个步骤可以很大程度自动化. 执行测试, 并收集各种结果\n5. 评估测试 Auswertung. 比较测试结果与预期, 确定进一步的工作.\n\n#### 基本测试形式\n\n##### White Box Test 白盒测试\n- 可以查看程序源码和结构, 并由这些内部视图 (Innensicht) 决定测试案例.\n- 目标是尽可能测试每条指令, 和尽可能多地测试可能的指令序列.\n- 可用于测试指令, 条件, 路径覆盖率. (Statement, Condition, Branch)\n\n##### Black Box Test 黑盒测试\n- 测试用例由外部视图 (Außensicht) 决定, 也就是由需求和接口规范决定而无法查看源代码.\n- 目标是功能的特殊方面, 比如经典用例, 边缘测试, 负载测试等, 不合法输入测试.\n\n##### Grey Box Test 灰盒测试\n- 灰盒测试通常专注于整个模块或系统的集成功能, 以及模块之间的互动, 而不关注具体实现.\n- 集成测试经常被理解为灰盒测试.\n\n#### 测试对象/焦点\n\n##### 数据流\n以面向输入/输入的方式检查. 例如用等价类\n\n##### 控制流\n测试对象是否如预期执行.\n\n##### 功能测试\n功能是否正常, 系统是否正确.\n\n#### 等价类\n在自动化单元测试中经常被使用的测试方法, 所有可能的输入被划分为等价类, 并假定系统在输入一个等价类的元素时, 其行为与该类其他元素相同.\n\n等价类应该是精简而准确的.\n\n##### 分类树法 Klassifikationsbaummethode\n用树表示等价类关系, 只有叶算一个等价类.\n![[attachments/Pasted image 20221128141325.png|400]]\n\n### 单元测试\n\n#### 单元测试\n单元测试是对少量代码的自动测试, 目的是在早期发现和消除新开发活动带来的副作用 (回归).\n应该经常进行.\n应被设计得有效和高效.\n\n#### 单元测试设计\n\n##### One Asset per Test\n有这样的说法, 但也不是必须只能有一个. 每个单元测试中有多个断言也是有意义的, 但断言的数量应得到限制.\n\n##### Single Concept per Test\n类似于一个方法只为一个目的服务. 每个测试用例应该只测试一个概念.\n\n### Test-Driven Development\n[[permanent/测试驱动开发 Test-Driven Devlopment]]\n\n![[attachments/permanent/测试驱动开发 Test-Driven Devlopment#TDD 的规则]]\n\n![[attachments/permanent/测试驱动开发 Test-Driven Devlopment#TDD 的影响]]\n\n\n## Continuous Integration\n\n### 集成的理论\nsrc: Einführung in die Softwaretechnik 12.3\n\n#### Def. Integration\n将模块和组件集成到整个系统, 并测试整个系统正确性的过程.\n\n#### 集成需要准备和完成什么\n1. (在开发早期)创建整合了整个系统或组件的可执行框架([[#集成的先决条件]])\n2. 一步一步将实现的模块连接到框架([[#集成方法]])\n3. 完成模块的单独测试后, 移交给集成团队(通常是自动化的)\n4. 在交接过程中再次测试(集成测试), 通过后插入到集成框架中\n\n#### 集成的先决条件\n- 架构, 架构的描述(系统的结构和通信路径)\n- 组件规范(接口和接口行为的描述)\n\n#### 集成测试的流程\n1. 将测试过程分解为可管理和可控制的单元\n2. (模块)提供可演示的功能\n3. 测试过程的正规化(确定测试和需求的关系)\n4. 规划集成和测试\n5. 推导出集成的顺序\n6. 开始集成\n    1. 各个模块的测试\n    2. 整合系统\n    3. 整个系统的测试\n    4. 识别并纠正错误\n    5. 重新检测\n\n#### 集成过程中的任务\n- 协调集成计划, 测试和时间\n- 模块测试的验收和文件收集\n- 集成测试的规划和执行\n- 错误追踪跟进\n- 回归测试\n\n#### 配置管理\nKonfigurationsmanagements\n配置管理的目标是对软件单元的管理, 并保证组成一致的, 可执行的系统.\n如果在集成过程中发现设计的接口不能被遵守, 就必须对相关组件进行调整.\n\n#### Architekturfehler 架构错误\n指架构包含错误, 因此, 尽管所有组件都符合它们的要求, 但在互动时并没有产生预期的结果.\n可能因为:\n- 耦合错误(Kopplung): 正确的模块加载、连接或调用有误\n- 接口错误: 不适合(例如兼容性), 类型不匹配\n- 协议错误: 不正确的函数调用顺序\n- 时间错误\n- 同步错误\n\n#### 集成开始的时间\n建议在可以集成的早期就开始集成测试\n在部分模块就绪时就可以开始集成测试, 每次新集成的模块越少, 就越容易定位错误\n\n#### 系统测试\n分类:\n- 验收测试\n- Betatest\n- Bestätigungstest\n- Leistungstests\n\n**针对产品要求的系统测试**\n- 每个需求至少有一个系统测试案例, 通常多个\n- 用例来自于使用场景\n\n**针对质量要求的系统测试**\n|质量参数|测试方法|备注|\n|:--|:--|:--|\n|Sicherheit|Penetrationstest||\n|Zeitverhalten|Performance-Test||\n|Ausführbarkeit|Stresstest|极限性能下是否稳定|\n|Skalierbarkeit|Lasttest|高负载下是否快速|\n|Adaptierbarkeit|Konfigurationstest|更换软件和硬件配置测试|\n\n##### 比较: 集成测试和系统测试的区别是什么?\n集成测试, 是在组合两个或几个经过了单元测试的模块后, 检查这个组合是否会出现问题.\n系统测试是所有模块集成完毕后测试整体体能/表现.\n\n#### 验收测试\nde. Abnahmetest\n验收测试是在软件系统交付给客户和用户时对其进行检查, 通常具有法律意义. 需确定所有规定的要求是否得到满足. 使用黑盒测试, 通常由项目管理部门和客户共同负责.\n从整体考虑:\n- 从用户角度证明正确性\n- 有客户确认开发目标已实现\n从低层面考虑, 重点是测试技术规格:\n- 根据要求进行功能测试\n- 测试正常用户操作下的行为\n- 在特殊情况下和连续运行中的行为测试\n- 测试性能参数\n\n#### 生产和测试环境\n系统测试应该在尽可能接近生产环境或操作环境的测试环境中进行. \n一个工具是模拟(Simulation). 模拟的对象可以是硬件, 软件和模型. 模拟的数据由模拟器产生(相对于简单测试的固定输入).\n\n##### X-in-the-loop Simulation \n指的是 X 在较长时间的环境中被执行. 例如 Hardware-in-the-loop(HIL). \n\n##### Staging-Environment\n暂存环境, 指测试中逐渐接近开发环境的测试环境\n\n#### 集成中的错误处理\n首先, 模块的测试要充分, 才方便更好地定位集成时的错误\n然后, 定位和处理[[#Architekturfehler 架构错误|架构错误]]\n\n### 集成方法\n通常分三类:\n- Big-Bang\n- Top-Down\n- Bottom-Up\nsrc: Einführung in die Softwaretechnik 12.3\n\n#### Big-Bang 集成\n\n![[attachments/Pasted image 20221214134333.png|500]]\n1. 所有模块单独测试\n2. 直接整个集成并测试\n\n好处是测试较少, 坏处是定位和处理错误难\npass\n\n#### Bottom-Up 集成\n\n![[attachments/Pasted image 20221214134546.png|500]]\n\n1. 对最低层的模块各自测试.\n2. 部分模块集成为组件, 对组件进行测试\n3. 将组件逐层集成并测试\n\n好处\n- 在每个步骤都可以完成所有测试\n- 不需要 dummy\n- 快速识别和定位错误\n\n#### Top-Down 集成\n\n![[attachments/Pasted image 20221214135002.png|500]]\n\n1. 对顶层的组件进行测试, 这时低一层的组件是用 dummy 实现\n2. 开发和集成下一层的组件, 这时更低层的用 dummy\n3. 重复2直到完整开发\n4. 最低层的组件测试\n\n#### 集成方法的适用性\n自下而上和自上而下方法都有各自适用的场景.\n自下而上在个模块已成熟时更方便测试, 在敏捷开发时也行合适.\n自上而下在以验收测试为目标的整个系统连续测试时更合适.\n\n\n### CI/CD 持续集成和交付\nContinuous Integration und Continuous Delivery\nde. Kontinuierliche Integration und Auslieferung\nsrc: Einführung in die Softwaretechnik 12.4\n\n#### 概念\n\n##### 持续开发\nde. kontinuierlichen Softwareentwicklung\n软件持续开发的基本理念是: 开发(coding), 测试(test), 集成(Integration)三项任务的联动执行, 以缩短开发周期. 如有必要, 会增加持续交付(delivery)和持续部署(deployment).\n\n![[attachments/Pasted image 20221214141452.png|500]]\n持续开发背景下的开发步骤示意图.\n\n##### 持续集成\n在持续集成方法中, 单个模块开发和测试完成后, 定期(持续)集成到公共代码库中.\n每一个 commit  不允许出现影响代码库的结果(如语法不正确).\nCI: develop 分支的 commit\n\n##### 持续交付\n如果达到质量指标或到了交付日期, 就自动创建并交付软件的版本.\n通常先在测试系统中交付.\nCD: main 分支的 commit\n\n##### 持续部署\n开发版本在很短的时间内从开发环境转移到生产环境, 在那里进行测试.\n\n##### DevOps\ndevelopment + operation\n\n#### CI/CD Pipeline\n持续集成, 交付和部署的附加步骤在技术上是通过 CI/CD Pipeline 实现的.\n![[attachments/Pasted image 20221214144718.png|350]]\n\n开发团队可以通过 CI/CD Pipeline 快速得到反馈.\n\n#### CI/CD 对开发的影响\n- 系统架构必须允许 CI/CD\n- 必须有集成和测试框架\n- 需要对模块, 构建周期等进行设计\n- 每个版本的功能范围必须被定义并定期测试\n\n\n## Version Controll System(VCS)\n\n### Git\n[[permanent/Git]]\n\n## UML\n\n### 类图\n[[permanent/UML 图#Class Diagram]]\n- 类图可以用来展示一个类的静态模型\n\n### 状态图\n[[permanent/UML 图#State Diagram]]\n\n### 活动图\n[[permanent/UML 图#Activity Diagram]]\n\n### 序列图\n[[permanent/UML 图#Sequence Diagram]]\n\n### 协作图\n[[permanent/UML 图#Communication Diagram]]\n\n### 用例图\n[[permanent/UML 图#Use-case Diagram]]\n\n## OOAD\nObject Oriented Analyse and Design\n\n### 软件设计流程模型\n• Anforderungen erfassen [[#捕获需求]]\n• Analyse-Objekte finden [[#识别分析对象]]\n• Aufgaben verteilen 分配任务\n• Klassen strukturieren [[#结构化类]]\n• Schnittstellen spezifizieren [[#指定接口]]\n• Verhalten festlegen 定义行为\n• Komponenten zusammenstecken 组装组件\n• System implementieren 实现系统\n• Modularisie [[#模块化]]\n\n### 说明\n- 以用例为中心来设计, 在文档中指出每个类所贡献的用例会使得代码结构变得清晰\n- 如果某一内容有些复杂, 用合适的图模拟它\n\n### 捕获需求\n1. 通常自然语言(不推荐), 表格, 枚举的合适的方法*描述需求*, \n2. 建模\n    - 通过 [[permanent/UML 图#Use-case Diagram|用例图]] 描述*操作*与其*参与者*\n    - 通过 [[permanent/UML 图#Activity Diagram|活动图]] 描述*行为*流程\n3. 需求分析的结论应该是所有应用程序和它们之间的关系的表格化概述\n    - ![[attachments/Pasted image 20230219153035.png|L|300]]\n\n- 例子: 一个`会议`流程\n    - ![[attachments/Pasted image 20230219150044.png|L|300]]\n    - ![[attachments/Pasted image 20230219145949.png|L|300]]\n\n### 分析\n\n#### 识别分析对象\n- 面向对象的软件设计, 识别对象是重要的任务\n- 在捕获需求后, 从其中的某一个对象入手, 不必一次理清所有对象, 在分析过程中会慢慢补全\n\n#### 结构化类\n- 可以借助 [[permanent/CRC 卡片]]\n\n#### 分配责任\n- 将用例/CRC卡片中的职责分配到具体的类\n- 关联协作类, 这里可以用 [[permanent/UML 图#Communication Diagram|协作图]] 疏理协作行为的顺序\n\n\n### 设计\n\n#### 分析类到设计类\n- ![[attachments/Pasted image 20230222205911.png|L|400]]\n- 分析对象 -\u003e (多个)设计类/软件解决方案\n- 为什么会分? 有时候实现某些需求, 结构, 或者设计模式上的安排\n- 但设计类的职责边界是明确的\n\n#### 指定接口\n- 借助 [[permanent/UML 图#Interaction Diagram]] 交互图来分析\n- 这一步与分析类到设计类应该是并行的, 一边是类的设计, 一边是类与类连接的设计\n\n![[attachments/Pasted image 20230222211428.png|L|400]]\n\n#### 设计细节\n- 根据使用的编程语言的特性\n\n### 实现\n- 定义类\n- 实现方法\n\n### 模块化\n- 模块应该是自成一体的, 在没有外界信息的情况下能够被理解\n- 高内联: 模块内组件都是为同一个任务工作, 应该能访问共同的数据结构和方法\n- 低耦合: 模块之间的依赖和联系应该减少\n- 在开发过程中, 各模块独立地设计, 实施和测试\n\n## 设计模式\n\n### 熟练\n- Singleton\n- Adapter\n- Composite\n- Proxy\n- Observer\n\n### 了解\n- Abstract Factory\n- Factory Method\n- Iterator\n- State\n- Template Method\n- Visitor\n\n## Project Management\n- 目标: 如果让一个(软件)项目成功\n\n#### Grundbegriff\n\n##### 项目应当\n- 明确的任务定义 \n- 与公司的运营任务相区别 \n- 明确的开始和结束日期 \n- 独特和新颖，即创新，该任务以前没有以这种形式进行过 \n- 对资源的竞争 \n- 往往对公司的存在或至少是增长至关重要 \n- 高风险\n\n##### 任务的分类\n- ![[attachments/Pasted image 20230228103258.png||L|400]]\n##### 项目的分类\n- Entwicklungsprojekte, z.B. Strategie- oder Innovationsprojekte sowie Eigenentwicklungen 开发项目\n- Wartungsprojekte  维护项目\n- Organisationsprojekte (Evaluations- und Ausführungsprojekte, z.B. System- einführungen)  组织项目\n- Unterstützungsprojekte  支持项目\n- Versuchsprojekte, z.B. Prototypen für spätere komplexe System 试用项目\n\n##### Magisches Dreieck des Projektmanagement\n- 项目的 Volumn 由三个因素决定:\n    - 时间\n    - 目标\n    - 资源\n- ![[attachments/Pasted image 20230228110402.png|L|300]]\n\n##### 「管理」意味着\n- 广义上的指导\n- 总是包含责任\n\n##### 项目管理\n- 制定流程, 规范\n- 任务分配\n- 技术选型\n- 定义好的方法和程序\n- ...\n\n#### Krisen- und Konfliktmanageme\n\n##### 项目负责人的任务\n- 尽管有最谨慎的时间估计，但在IT项目中，巨大的最后期限压力会一再出现在项目组身上。并非所有的员工都能应对这些压力，有时很难估计原本头脑冷静的员工的反应。正是在这些危急情况下，需要项目负责人的个性，他必须以他的能力、冷静和全局性来**促进局势的缓解**(Deeskalation der Situation beitragen)。最重要的是，他**必须表现出他 \"控制住了事情\"**(„die Angelegenheit im Griff hat\")。有许多关于冲突管理的理论讨论，其中一些是作为例子给出的。\n\n##### 权衡冲突的策略\n- Gewinner-Gewinner 策略：通过讨论、权衡和重新制定并调整对立的意见，寻求合作策略，即共同的解决方法。其目的是协调对手的需求。\n- 赢家-Verlierer策略：一方的收益成为另一方的损失，或者反之亦然。在这种情况下，一种意见被强制执行。\n    - 由于*时间限制*，这种策略经常被使用。\n    - 谈判者必须运用他的外交技巧来消除与失败者之间仍然存在的分歧。这通常是通过过度强调解决方案的积极方面来实现的。\n- 失败者-失败者策略：没有一方获胜。没有人实现他们想要的东西。\n    - 找到一个折中的解决方案，通常是所谓的 \"懒惰的妥协\"。\n    - 在这种情况下，解决方案对任何一方都不公平，往往人际关系问题甚至没有得到解决，而只是被推迟了。\n\n##### 冲突的主要来源\n- Meinungsverschiedenheiten über terminliche Prioritäte\n\n#### Allgemeines Vorgehen, Ablauf- und Terminplanung\n\n##### Begriff\n- Projektabwicklungs-Zyklen 项目完成周期\n\n##### 项目主要阶段\n- Phase 1 – Initialisierung: \n    - Anforderungsanalyse 需求分析\n    - Lösungsauswahl 解决方案选择\n    - Projekt- klassifizierung 项目分类\n    - Projektbeantragung  项目申请\n- Phase 2 – Definition: \n    - Projektbeauftragung 分配\n    - Erstellung Gesamtprojektplan 总体计划\n    - Festlegung Projektorganisationsform 组织形式的定义\n    - Kick-off-Veranstaltung 启动活动\n    - Projektstart- sitzung  启动会议\n- Phase 3 – Planung: \n    - Planungsarten \n    - Planungsinstrumente 规划工具\n    - Planungszuständigkeit 规划责任\n    - Planungszeitpunkt\n    - Planungsentscheide  \n- Phase 4 – Vorgehen\n    - inkrementelle, konzeptionelle, empirische und evaluative Vorgehensmodelle insbesondere für Multiprojekte  \n- Phase 5 – Kontrolle:\n    - Kontrollzeitpunkt\n    - Kontrollsichten\n    - Kontrollverfahren\n    - Kontrollprozess\n    - Kontrollberichte  \n- Phase 6 – Abschluss: \n    - Projektabnahme 验收\n    - Projektabschlussbeurteilung 最终评估\n    - Projektabschlussbericht\n    - Erfahrungssicherung \n    - Einführungsnachbearbeitung 跟踪\n    - Projektauflösung 项目解散\n\n##### 九个计划步骤\n1. Abwicklungszielplanung  \n2. Projektstrukturplanung zur Gliederung und Abgrenzung von Aufgaben  \n3. Ablaufplanung  \n4. Einsatzmittelplanung  \n5. Projektorganisationsplanung  \n6. Kostenplanung  \n7. Terminplanung  \n8. Projektbudgetplanung  \n9. Dokumentationsplanung\n\n1.项目结构规划 2.用于构建和划分任务 3.顺序规划 4.资源规划 5.项目组织规划 6.成本规划 7.进度规划 8.项目预算规划 9.文件规划\n\n- Critical Path Method\n\n#### GANTT- und PERT-Diagramm\n- 关键路径: 一系列 Arbeitspaketen, 其中节点时间延长会导致整个项目的工期延长\n- ![[attachments/Pasted image 20230228231454.png|L|400]]\n\n##### Gantt\n- 甘特图是 Balkendiagramm 的最简单形式。它是以其开发者美国人亨利-劳伦斯-甘特命名的。在甘特技术中，单个过程根据其持续时间和最早的开始和结束日期沿时间轴以水平线表示。\n- 该技术的缺点是，当有几个任务时，条形图会变得很混乱，因为个别任务和它们的缓冲时间之间的关系不能直接可视化。\n- ![[attachments/Pasted image 20230228111246.png|L|400]]\n\n##### PERT\n- Program Evaluation and Review Technique\n- 用来规划项目\n- 事件节点网络, 显示事件顺序的依赖性\n- ![[attachments/Pasted image 20230228111539.png|L|400]]\n- 项目时间估算\n    - ![[attachments/Pasted image 20230228112101.png|L|400]]\n\n#### Aufwandsschätzung in IT-Projekte\n\n##### 影响因素\n- 数量\n- 复杂度\n- 质量\n- 参与者的经验与技术水平\n- 使用的工具和编程语言\n- 估计期限\n\n##### 具体估算方法\nEine weitere Separierung von Vergleichsmethoden erfolgt in die Analogie- und in die Relationenmethode, von algorithmischen in die Gewichtungs- und in die Stichprobenmethode und schließlich von den Kennzahlenmethoden in die Multiplikatoren- sowie in die  \nProzentsatzmethode.  \n\n#### Gründe für das Scheitern von IT-Projekten und Erfolgsfaktore\n\n##### 影响项目成功的因素\n![[attachments/Pasted image 20230228182836.png|L|300]]\n- Top-Management Engagement\n    - 高层表现出承诺和关注\n    - motivierend\n- Nutzer-Einbeziehung\n    - 用户参与开发\n- erfahrene Projektleitung\n    - 项目管理者有经验\n- Umternehmensstrategie\n    - 公司战略\n    - 项目目标和重要性都来源于公司战略\n- überschaubare Projektgröße\n    - 项目后期所需要的成本是很难估计的\n    - 项目越大也越难估计\n    - 执行中最困难的就是遵守预算和时间安排\n- Standardisierte Software Infrastruktur\n    - 为了不分散精力\n- Anforderungsmanagement\n    - 需求管理, 也就是进度管理\n    - 需求很可能是变化的\n- Standardisierte Projektablauf\n- zuverlässige Aufwandschätzung\n    - 后期的估算才可能准一点\n- 其他\n    - 预先准备补救方案\n    - ...\n\n##### 为什么会失败\n- 项目没有被专业地执行, 比如说没有设置 Milestone(小项目可能没事, 但大项目很容易混乱)\n- 缺乏合格的工作人员, 尤其是项目经理\n- 没有可预期的利益\n\n##### 为什么软件项目管理比工程管理要难\n- Immaterialität: 难以追踪进度 nicht exakt nachvollziehbar\n- 理解尚浅: 应用开发的历史可能只有30年\n- 技术的独特性: 旧经验可能阻碍发展\n\n##### 项目的结果\n- Erfolgreich: 功能和素质达标, 按时完成, 在预算内\n- Gefährdet: 阉割了, 或者超时或者超预算\n- Gescheitert: 失败/被叫停\n\n#### Risikomanagemen\n\n##### 分类\n- 直接风险: 可以清楚识别的\n- 间接风险: 隐藏的\n\n##### 主要风险来源\n- 商业风险 Geschäftliche: \n    - 比如竞争对手的项目提前投放. 可能应对: 发布先行版\n    - 财务支持减少\n- 技术风险\n    - 使用的技术是否稳定/经过考验\n    - 本项目是否依赖另一个项目\n\n##### 风险级别\n- Allgemeine Risikoklassen  \n- Spezifische Risikoklassen bei internen Projekten  \n- Spezifische Risikoklassen bei der Produktentwicklung\n\n#### Meilenstein\n\n##### Release\n- Release 不一定是一个成品\n    - interne Release: 开发团队内部发布的 release, 通常是到达一个 Milestone\n    - externe Release: 交给客户的 Release, 通常有更高的质量指标\n\n##### 四种主要的 Milestone\n- Life-cycle Objective(LCO)\n    - beendet die **Konzeptualisierungs**\n    - 检查: 项目的*范围, 时间, 预算, 风险, 用例已经双方确认*\n    - 检查: 用例模型的基本框架完成\n- Life-cycle Architecture(LCA)\n    - beendet die **Entwurfsphase** des Rational Unified Process\n    - 检查: 设计符合客户期望\n    - 检查: 用例模型 80% 完成\n- Initial Operational Capability(IOC)\n    - beendet die **Konstruktionsphase** des Rational Unified Proces\n    - 检查: 产品稳定, 预算稳定, 用户手册足够\n- Product Release\n    - Produktrelease einer individuellen Lösung: 交付的是单个解决方案, 则核算成本与客户的需求\n    - Release eines Produktes, das großflächig verteilt wird: 交付的是大规模分发的产品, 则还需要考虑销售方案\n\n## Process model\n- Vorgehensmodell\n- Wie werden welche Phasen im Projekt umgesetz? 每个阶段在项目中是如何实施的\n- e.g. 抽象程序模型--收获：1.收集收获物 2.分类/组织 3.准备 4.包装\n- 描述了一个项目的组织结构和过程组织\n\n#### 什么是 过程模型\n- ![[attachments/Pasted image 20230228213240.png|L|400]]\n- 描述了\n    - Aufbau-organization: 项目结构, 人员的任务\n    - Ablauf-organization: 什么阶段要做什么\n\n##### Def. Vorgehensmodell\n- Ein Vorgehensmodell beschreibt systematische, organisatorische, ingenieurmäßige und quantifizierbare *Vorgehensweisen*, um Aufgaben einer bestimmten Klasse wiederholbar zu lösen.\n\n#### 德国的情况\n- 地区特点似乎也在发挥作用，例如通过在国家层面上对标准程序模型的规范\\[39, 64]。这方面的一个例子是V-Modell XT与Scrum的结合，这在德国很常见\\[39]。*V-Modell XT*（见第3.3节）提供了组织框架，并在基本层面上描述了项目及其与周围组织的接口（例如，需求分析、合同设计、客户/承包商沟通或验收），而*Scrum*（见第3.4节），通常与特定的敏捷实践相结合，为软件开发中的具体程序提供了基础\n\n#### 过程模型的主要类型\n\n##### Phasenorientierte Modelle und sequenzielles Vorgehen\n- 每一个阶段以一个确定的状态结束, 检查, 再\"流\"向下一个阶段\n- 典型的比如 瀑布流模型(Waterfall)\n- 优点: 清晰的进度, 简单的结构\n- 缺点: 灵活性差, 大修改会导致整个流程重来; \n- 适用于低风险的项目，在这些项目中，需求和期望的解决方案从一开始就比较明确，并且在项目过程中只需要进行少量的修改就可以了\n\n###### 瀑布流模型 \n经典的瀑布模型中使用了以下几个阶段。\n    - 分析和需求征询 \n    - 架构设计 \n    - 实施 \n    - 验证和集成 \n    - 运行和维护\n    \n##### Iteratives und inkrementelles Vorgehen\n- 在迭代法中，有一组标准活动在每个迭代中重复进行，如代码构建测试。\n- 在增量方法中，首先实现了一个具有有限功能范围的系统核心。随着项目的进展，这个核心被逐渐扩大和完成。\n- 已实现的系统部分（模块、组件和整个子系统）必须在一定程度上是可持续集成和可运行的。如果有必要，必须提供替代或虚拟对象\n\n###### Spiral Model\n- Boehm的螺旋模型[15]是最著名的早期迭代/增量方法的代表之一。它的目的是通过创造不断发展的原型来最小化项目风险\n- 四个(重复进行的)步骤\n    1. analyse\n    2. evaluation\n    3. realization\n    4. planning\n- ![[attachments/Pasted image 20230228222019.png|L|400]]\n\n##### Prototyping\n- 原型 是一个具体的探索或演示对象\n- 好处\n    - 任务变得具体\n    - 风险, 关键点更容易识别\n    - 为开发提供基础\n- 原型的类型\n    - Demonstrator: 展示潜在的发展方向\n    - Labormuster: 用来调查某些可行性\n    - Pilotsystem: 参与验收测试用\n\n##### Agile Vorgehensweisen\n- 敏捷方法的核心组成部分是早期进入编码、强大的用户参与、持续的测试和进一步的架构发展\n- 基于可执行代码的快速反馈回路\n\n###### 敏捷价值观/ Manifest Agile Developing\n- Individuals and interactions over processes and tools\n- Working software over comprehensive documentation\n- customer collaboration over contract negotiation\n- responding to changes over following a plan\n\n###### 敏捷开发实践\n- refactoring\n- pair programming\n- DevOps\n- [[permanent/测试驱动开发 Test-Driven Devlopment|TDD]]\n- Behavior-Driven Development(BDD)\n- Collective Code Ownership\n\n#### V-Model XT\n- 产品导向\n- 与敏捷程序还是有区别的：V-Modell XT的规划性更强，因为必须始终保持对整个项目的关注\n- ![[attachments/Pasted image 20230228224202.png|L|500]]\n\n#### Scrum\n\n##### 角色\n- Product owner\n- 开发团队\n- scrum master\n\n##### Scrum Artefacts\n- Product Backlog 包含软件的所有已知需求（到相应的时间点）。由产品所有者创建和维护 \n- Sprint Backlog 由项目团队创建，通过选择产品Backlog的内容来反映一个冲刺的目标。在一个Sprint期间，Sprint Backlog不会被新的条目所扩展 \n- Release 每个Sprint结束时都有一个可交付的Release，通常由客户测试。请注意，在官方的Scrum指南\\[59]中，使用了 Product Increment 这个术语。一个增量在指南\\[59]中被描述为 \"产品积压中所有条目的总和\"，这些条目应该被完成并可能被使用。然而，为了与软件开发项目中的核心任务所使用的术语保持一致（见第1.3章），我们只使用 Release 这个术语。\n- Sprint 是Scrum流程模型的核心要素（图3.10）。它以时间框的形式描述了一个迭代（Scrum规定每个冲刺最多只能有30个日历日[58]）。\n\n##### 具体操作\n- Daily Scrum\n- 回答\n    1. 从昨天开始，我为实现Sprint的目标做了什么？\n    2. 为了实现冲刺目标，我明天要做什么？\n    3. 什么阻碍了我的工作？\n- ![[attachments/Pasted image 20230228230020.png|L|500]]\n\n##### 方法和实践\n- ![[attachments/Pasted image 20230228225715.png|L|500]]\n\n#### 敏捷开发的要求\n\n##### 需求征询\n- 需求是在项目过程中逐步定义的\n- 轻而灵活, 随时准备被改变\n- ![[attachments/Pasted image 20230228230518.png|L|500]]\n\n##### User Story\n- Schema: As WHO I want WHAT so that WHY\n- ![[attachments/Pasted image 20230228230631.png|L|500]]\n\n## Architecture\n\n#### Begrifflichkeite\n\n##### Def. Architecture\nArchitecture is defined \\[...] as the fundamental organiza-  \ntion of a system, embodied in its components, their rela-  \ntionships to each other and to the environment, and the  \nprinciples governing its design and evolution.\n\n#### Architekturprinzipien\n- 这些原则的目标通常是\n    - 可维护性\n    - 清晰的代码结构\n    - 避免错误的调用和修改\n\n##### K.I.S.S.  \n- keep it simple and stupid\n\n##### Kopplung niedrig halten, Kohäsion verstärken  \n- 系统应低耦合, 高内聚\n- 一个系统的*耦合程度*是指系统内各组件互相依赖的程度\n- 一个系统的*内聚程度*描述了一个系统的组件、类甚至单个方法的内部一致性程度\n\n##### Kapselung und Information-Hiding\n- 从系统的外部视图不应该看到其实现细节\n- 封装, 即通过接口和信息隐藏原则, 以实现内外分离\n\n##### Separation of Concerns\n- 如果可能的话，不同的方面不应该混合在一起，以减少任务的复杂性\n\n##### Teile und Herrsche  \n- 模块化和分解\n\n##### Design by Contract\n- 接口描述在用户和接口的实现者之间形成了一个契约（见4.6.1章）。用户依赖于接口中指定的行为，实现者则保证接口的实现\n- 契约式设计的主要目的是希望程序员能够在设计程序时明确地规定一个模块单元（具体到面向对象，就是一个类的实例）在调用某个操作前后应当属于何种状态。\n- 契约式设计强调三个概念：前置条件，后置条件和不变式。\n\n#### Architekturmuster\n\n##### 架构模式的分类\n- Systemstruktur\n- Interaction\n- Verteilung\n- Adaptivität\n\n###### System structure\n- 组件要被巧妙地组织起来，系统的整体功能要适当地分布在各组件之间。\n- e.g. [[#Pipes-and-Filters]], Layer architecture\n\n###### Interaction\n- 这一类的模式主要是组织用户与系统之间或系统之间的交互\n- e.g. [[#MVC]](Model-View-Controller)\n\n###### Distribution\n- 这一类的模式主要解决分布式资源的组织问题, 这涉及到网络中服务的提供和使用\n- e.g. [[#Client-Server]], Service-oriented\n\n###### Adaptation\n- 这类模式主要支持系统在扩展性和适应性方面的灵活性，例如，在系统运行时动态加载特定情况的组件\n- e.g. Dependency Injection, Micro Kernel\n\n##### Pipes-and-Filters\n- ![[attachments/Pasted image 20230228211337.png|L|400]]\n\n##### MVC\n- ![[attachments/Pasted image 20230228211400.png|L|400]]\n- ![[attachments/Pasted image 20230228211505.png|L|500]]\n\n##### Client-Server\n- ![[attachments/Pasted image 20230228211556.png|L|500]]\n\n#### S.O.L.I.D\n\n##### Single-Responsibility Principle\n- 单一的类或模块应该只有一个任务\n\n##### Open-Closed Principle  \n- 对扩展开放: 原有的行为在细化后保持完整并可访问\n- 对修改封闭: 原有行为不被修改\n- e.g. IShape 和新的形状类\n\n##### Liskov’sches Substitutionsprinzip\n- 一个类必须可以被由它派生出来的精炼的子类所替换\n\n##### Interface-Segregation Principle  \n- 接口隔离原则（ISP）规定不应强迫客户端依赖它不使用的方法\n    - 解释一下, 比如一个 Car 类实现了 Drive 和 Repair 两个抽象接口, 那么 Drive 就应该只能调用 car.drive()\n- 旨在使系统分离，从而更容易重构，更改和重新部署\n\n##### Dependency Inversion\n- \"高\"层的组件不应该直接依赖于\"低\"层组件的实现(而应该依赖抽象)\n    - ![[attachments/Pasted image 20230228203147.png|L|400]]\n","lastmodified":"2023-06-16T20:10:23.2971563+02:00","tags":[]},"/project/lmu-Syntax-of-natural-languageGermany":{"title":"lmu - Syntax of natural language(Germany)","content":"\n\n## Introduction\n\n使用: [[permanent/Jupyter Notebook]]\n\n\n#### Programmsysteme\n具体的使用方法都会放在各自页面\n- [[permanent/NLTK]]\n- [[permanent/spaCy]]\n- [[permanent/Standford Parser]]\n\n#### Grammatikformalismus\n\n1. CFGs\n\t- 组成结构\n\t- 语法结构可以用树的**节点**表示出来\n\t- PCFG(优势: 多 position 词歧义分辨)\n\t- FCFG(优势: 屈折)\n2. Dependcy grammar\n\t- 描述 tokens 间的关系\n\t- 语法结构可以用树的**边**表示出来\n3. Chunk Parser\n\t- 部分语法分析\n\t- 扁平结构(flache), 非层次型结构\n\nCFGs -\u003e\n- PCFGs: Probabilistische CFGs, 用于解决语义分歧问题(同一语法多种含义)(Anbiguity)\n- FCFGs: Feature-based CFGs, 用于解决过生成\n\n##### Overgeneration\n(CFG语法规则产生的不合实际语法的句子)(Übergenerierung)\n\n### 复习资料\n[[wdh-aufgaben-01-solution.pdf]]\n[[wdh-aufgaben-02-solution.pdf]]\n[[summaries.pdf]]\n\n### 工具\n- 在线语句结构分析: https://corenlp.run/\n## Syntax Analyse\nKonstituenz vs. Dependency\n\n### Syntax\nSatz wohlgeformt?\n\n#### Syntax 定义\nSyntax: Satzstruktur\nMorphologie: Wortstruktur\nPhonologie: Lautstruktur\n\nSyntax~Morphologie: oberhalb der Wortebene\nSyntax~Semantik\u0026Pragmatik: unabhängig von semantische Interpretation\n\n#### 句子组成成分\n- Wortstellung(SVO Subject 那些)\n- Kausus 格\n- Kongruenz 词尾\n\n#### 相关定义\n\n##### Wohlgeformtheit\n指一个语句的结构符合(指定) formalen Grammatik 的规则\n\n##### Syntaxbaum\n- auch: Parsebaum, Ableitungsbaum\n- 层级结构的数学表达方式\n\n##### Klammerausdruck\n( S ( N Hund ) ( VP ( V jagt ) ( N Katze ) ) )\n\n##### Gerund\n指的是动词的各种形态, 简写 G, e.g. VBG\n\n### Relationtype\n- =modellierte Relation\n- 也是两种常用的句子结构分析方法\n\n#### Konstituenten-Struktur\n- syntagmatische Satzanalyse, 和 [[#Dependenz-Struktur]] 相对, 是一种 Relationtype\n- Phrasenstuktur\n\n##### Konstituente\n- Bestandteil einer syntaktische Struktur\n- e.g. NP, VP, Det\n- Konstituente $\\in$ Phrase\n\n##### CFG\nS -\u003e NP VP\nNP -\u003e Det N\nDet -\u003e \"die\" | \"den\"\nN -\u003e \"Katze\" | \"Hund\"\n\n- keine Disambiguierung\n- [[project/lmu - Syntax of natural language(Germany)#Overgeneration|Übergenerierung]]\n\n#### Dependenz-Struktur\n- Abhängigkeitsstruktur\n- Funkionale Satzanalyse\n- syntaktische-Beziehung?\n\n\n### Auomatische Syntaxanalyse\n\n语法分析方法分类\n1. 描述语言系统(教科书)\n2. 穷举符合语法的句子\n3. 用规范语法(formale Grammatik)描述\n\n#### Formal Grammar\n- de. formale Grammatik\n- Syntaxmodelle\n- Formale Regelsystem zur eindeutigen Beschreibung und Erzeugung einer formalen Sprache\n- 会生成 [[#Wohlgeformtheit|wohlgeformten]] Satz\n- e.g. NP -\u003e N\n\n**Produktionsregel**\n- Startsymbol\n- links -\u003e rechts\n\n##### Formale Sprache\n*Menge* aller aus Grundsymbolen ({a, b}) mit den Grammatikregeln ableitbaren formalsprachliche *Wörter* ({a, aa, ab, ...})\n\n##### Präterminale\nWortarten, lexikalische Kategorien, e.g. DET, N\n\n##### Komplexität der Grammatik(Chomsky-Hierarchie)\n= regular/kontextfrei/kontext-sensitiv/rekursiv aufzählbar\n\n##### Analysetiefe der Grammatik(Rekursion?)\n= flach/verschachtelt\n\n#### Parsing als automatische Syntaxanalyse\n\n**Aufgabe**\n- Strukturkennung 结构识别: 句子是否符合语法/是否有一种符合规则的推导\n- Strukturzuweisung 结构分配: 重现找到的语法推导\n\n#### Ambiguität\nDisambiguität -\u003e PCFG\n\n##### strukturelle/syntaktische Ambiguität (PP-Attachment Amb.)\nI shot an elephant in my pajamas\n\n##### Koordinierungsambiguität\nalte Männer und Frauen\n\n##### Temporale Amb(Garden-Path-Sätze)\nthe old man the boat\n实际上会有一种正确的解读 (man v. 操作)\n\n#### Rekursive Regeln\ncenter-embedding: mindestens kontextfreie Grammatik\n\n#### Non-projektive Strukturen(in CFG)\n- auch: diskontinuierliche Strukturen, long distance dependencies\n- ![[attachments/Pasted image 20221104225507.png]]\n\n#### Parsing in NLP\n- Sentence Segmentation \n- Tokenisierung \n- Part-of-Speech-Tagging \n- Stemming\n- morphologisches Parsing (Kasus, Agreement)\n\n![[attachments/Pasted image 20221104225746.png]]\n![[attachments/Pasted image 20221104225755.png]]\n\n\n## Syntaktische Kategorien\n\n### 分析规则\n\n##### Syntagmatische vs. Paradigmatische Dimension\n\n###### Syntagmatische Dimension\n- lineare Kombinierbarkeit\n- 在这个层面的分析方法: Segmentierung\n\n###### Paradigmatische Dimension\n- vertikale Austauschbarkeit\n- 在这个层面的分析方法: Klassifizierung\n\n##### Phrasenstrukturregeln\n- e.g. S → NP VP, VP → V\n- 解决用传统方法分析 句子结构少的问题\n\n###### Syntaktische Regeln\n- e.g. S -\u003e NP\n###### POS-Satzschemata\n- 描述句式, S 开头的,  e.g. S → DET N V\n###### Lexikalische Regeln\n- 指向 terminal, e.g. DET -\u003e 'the'\n\n### Konstituententests\n- zur **Feststellung** syntagmatischer Einheiten (Konstituenten)\n- Hauptkriterien: Ersetzbarkeit und Verschiebbarkeit unter Erhalt der Grammatikalität\n\n#### Substitutionstest\n- =Ersatzprobe, 这个部分能换成别的吗, 能的就是(指换了之后保持语法正确)\n- 把一个或多个单词整体替换成一个比如说代词, 来确定它是不是一个整体 Konstituent\n\ne.g. \n**Der Junge** verkauft **die Äpfel des Bauern**.\nEr verkauft sie.\n\n#### Permutationstest\n- 这个部分能移动吗\n- 还能解决歧义(吗)\n![[attachments/Pasted image 20230202150743.png|L|400]]\n\n#### Eliminierungstest\n- =Weglassprobe, 这个部分能删掉吗\n\ne.g.\nDer Junge verkauft die Äpfel des Bauern.\nDer Junge verkauft die Äpfel. \n\n\n#### Koordinationstest\n- 能用 and/or 之类的连词接上其他同类成分吗\n- 适用于分析短语, 分析复杂结构\n\n![[attachments/Pasted image 20230202151338.png|L|500]]\n\n### Lexikalische Kategorien\n\n##### Wort\natomare syntaktische Einheit\n\n##### Wortart\n具有相同属性的一类词, 也是 pre-terminal Konstituenten\n\n#### 通过 Morphologische Kriterien 分辨\n\n##### Flexionsparadigmen\n同类词词尾的变化(有些)具有同样规则, 如名词复数加en, 动词词尾加t\n\n##### Derivationsmorphologie\n同类词 转变词类时的变化形式相同, 如 adj. → adv. 加ly\n\n#### 通过 Syntaktische Kriterien 分辨\n\n##### 位置 Distribution 分辨法\n例如 形容词常常在 DET 和 NOUN 中间\n\n##### 词态变化 分辨法\n例如 分辨 Präposition vs. Konjunktion, 一个是接二格, 一个是接一格\n\n##### syntaktische Funktion 分辨法\n通常\n- Prädikat: Verb  \n- Subjekt/Objekt: Nomen  \n- Adverbial: Adverb  \n- Attribut: Adjektiv\n但实际上, 词的取决于语言和语境\n\n#### 通过 Semantische Kriterien 分辨\n\n##### 语义分辨\n- Verb: bezeichnet Zustände, Vorgänge, Tätigkeiten, Handlungen (Sachverhalte)  \n- Nomen: bezeichnet Lebewesen, Sachen (Dinge), Begriffe (Abstrakta), Individuen  \n- Adverb: bezeichnet nähere Umstände von Sachverhalten  \n- Adjektiv: bezeichnet Eigenschaften und Merkmale von Sachen\n\n##### Auto- vs. Synsemantika \nInhaltswörter 内容词：独立的词汇意义；句子的一部分(起短语中心的作用)\nFunktionswörter 功能词：语法意义(取决于参考词)\n\n##### offene vs. geschlossene Klassen\n开放类: 就是可能会拓展新词的词类, 如名词\n闭合类: 就是不会再拓展的, 如连词\n\n#### Deutsche Wortarten\n\n##### Nomen\n- NOUN, NN, N\n- bezeichnet Lebewesen, Sachen (Dinge), Begriffe (Abstrakta), Individuen  \n- offene Klasse\n- delinierbares Wort\n- 子类: Substantive, Eingennamen(NNP), nominalisierte Adjektive\n\n##### Verb\n- VERB, VB, V\n- bezeichnet Zustände, Vorgänge, Tätigkeiten, Handlungen (Sachverhalte)  \n- offene Klasse\n- konjugierbares Wort\n- 子类: intransitive, transitiv, ditransitiv\n\n##### Adjektiv\n- ADJ, JJ\n- bezeichnet Eigenschaften und Merkmale von Sachen\n- offene Klasse\n- deklinierbar und komparierbar\n\n##### Adverb\n- ADV, RB\n- bezeichnet nähere Umstände von Sachverhalten  \n- nicht flektierbares Wort\n- modifiziert Verben, Sätze, Adjektive, und Adverbien\n\n##### Pronomen\n- PRON, PR\n- deklinierbares Wort, das eine Nominalphrase vertritt (Proform)\n- Nominale Begleiter und Proformen\n- 子类: Personal-(PRP), Indefinit-, Demonstrativ, Fragepronomen\n\n##### Determinative\n- DET, DT\n- geschlossene Klassen\n- unflexierbares Wort\n- Nominale Begleiter und Proformen\n- 子类: bestimmt, unbestimmt, Quantifizierer, attributiv gebrauchte Pronomen(Possesiv-(PRP$), Reflexiv-, Demonstrativ-, Fragepronomen)\n\n##### Präposition\n- P, IN, APPR, APPO\n- geschlossene Klasse\n- bezeichnet Verhältnisse, Beziehungen\n- Überbegriff: Adposition (ADP)\n- Funktionswort\n\n##### Konjuktion\n- CONJ\n- geschlossene Klasse\n- bezeichnet Verknüpfungen im logischen, zeitlichen, begründenden, modalen u. ä. Sinn\n- 子类: koordinierende (CCONJ) und subordinierende (SCONJ) Konjunktionen\n\n##### Partikel\n- PRT, RP\n- geschlossene Klasse\n- bezeichnet die Sprechereinstellung, -bewertung\n- e.g. nicht, zu, sehr, doch, ja\n\n### Syntaktische Kategorien\n„Eine syntaktische Kategorie umfasst eine Menge von *sprachlichen Einheiten*, die *bestimmte Eigenschaften* gemeinsam haben und deren Eigenschaften *relevant* sind *für die Beschreibung syntaktischer Strukturen*.“ (Dürscheid)\n\n#### Phrasenkategorien des Deutschen\n以下说谁就是指谁是 Kopf 组成的短语\n\n##### Phrasenschema NP\n(DET | NP) (ADJP)* N (PP / NP / Relativsatz)*\n![[attachments/Pasted image 20230202170232.png|400]]\n\n##### Phrasenschema VP\n(ADVP)* V\n\n##### Phrasenschema ADJP\n(ADV) (PP)* (PRT) ADJ\n![[attachments/Pasted image 20230202170259.png|400]]\n\n##### Phrasenschema ADVP\n(ADV) (PRT) ADV\n![[attachments/Pasted image 20230202170335.png|180]]\n\n##### Phrasenschema PP\n(ADJ/ADV/PRT) P NP\n![[attachments/Pasted image 20230202170401.png|200]]\n\n### Tagsets\ntagset = Sammlung von Kategorienlabels\n\n#### POS-Tagsets\n- 是传统的词类分析方法\n- 标示一个词可能的 Part of Speech\n\n- Universal POS-Tagset: 17 tags, 在[[#Deutsche Wortarten|每个词类介绍]]的第一行的那些\n- Penn Treebank POS-Tagset: 45 tags, 简化的 Brown Corpus POS-Tagset\n- Brown Corpus POS-Tagset: 87 tags\n- TIGER/STTS-POS Tagset: 53 POS-Tags(de.)\n\n#### Syntaktische Tagsets\n\n##### Konstituenten-Tagesets\n- Penn-Treebank Constituent Tags (Stanford: english.pcfg)  \n- TIGER Konstituenten Labels (Stanford: german.pcfg)  \n\n##### Dependency-Tagsets  \n- UD-Tagset (Universal Dependencies) (Stanford: en. DependencyParser)  \n- TIGER-Dependencies (spaCy: dt. Modell)\n\n\n## Konstituentenstruktur\n\n### Konstituentenstruktur\n\n##### Konstituenz\n**Teil-Ganzes-Beziehung** zwischen sprachlichen Einheiten (Konstituenten)\n\n##### unmittelbare Konstituenten\n- = immediate constituents(IC)\n- maximalen Konstituenten einer Einheit\n\n##### mittelbare Konstituenten\n- 一个 Konstituent 里可以拆分出的小成分\n\n##### Dominanz\n看图\n![[attachments/Pasted image 20230203141442.png|L|500]]\n\n##### Rekursive Kategorien\n- → Nicht-Endlichkeit natürlicher Sprachen\n\n###### direkte Rekursion\ne.g. NP → DET N NP\n\n###### indirekte Rekursion\ne.g. NP → DET N PP, PP → P NP\n\n#### Konstituentenstruktur\n- Menge der durch die Relation der unmittelbaren Dominanz verbundenen Konstituenten\n![[attachments/Pasted image 20230203141700.png|L|400]]\n\n**Elemente der Struktur(Knoten)**\n- **Wörter**: terminale Knoten\n- **lexikalische** Kategorien: präterminale Knoten\n- **syntaktische** Kategorien: nicht terminale Knoten → Phrasen\n\n**Relationen(Kante)**:\n- Teil-Ganzes-Beziehung\n- Dominanz Beziehung\n\n##### Kopf Perkolation(Phrasenstruktur)\n昂, 在 Phrasen 结构里通常看 Phrasen 名字就行了, 如 NP 就是 N\n\n#### Konstituentenanalyse\n1. **Zerlegung** syntaktischer Einheit in ihre Teile (Konstituenten)  \n2. Bildung von **Konstituentenklassen** (lexikalische und syntaktische Kategorien)  \n3. Ermittlung über **Konstituententests**  \n4. Ergebnis ist eine hierarchisch gegliederte Struktur\n\n#### Satzschema\n\n通常:\n- S = NP + VP\n- VP = VERB + Komplemente + Adjunkte\n- NP = NOUN + nominale Adjunkte(Attribute)\n- 上面这些规则不指示顺序, 仅类型\n![[attachments/Pasted image 20230203143000.png|L|400]]\n\n![[attachments/Pasted image 20230203145346.png|L|200]]\n\n### Phrasenstrkturgrammatik(PSG)\n- CFG 在 句子分析时的实际用法\n\n#### PSG 的组成\n- Startsymbol: S  \n- Nichtterminalsymbole: NP, VP, DET, N, V  \n- Terminalsymbole: ’der’, ’Hund’, ’schläft’  \n- Produktionsregeln(Ersetzungsregeln): S → NP VP, NP → DET N, VP → V\n\n#### Phrasenstrukturregeln des Deutschen\n仅供参考, 要用看是看下面 [[#X-Bar Regeln|X'版]] 的 \n\n##### Phrasenschema NP\n(DET | NP) (ADJP)* N (PP / NP / Relativsatz)*\n![[attachments/Pasted image 20230202170232.png|L|500]]\n\n(DET) (ADJP)* N (PP)*\n\n- NP → N | DET N  \n- NP → ADJP N | DET ADJP N  \n- NP → N PP | DET N PP  \n- NP → ADJP N PP | DET ADJP N PP\n \n- NP → ADJP NP  \n- NP → NP PP\n- NP → DET NP (?)\n    - 不能在错误的位置重复 如 ADJP DET N\n\n##### Phrasenschema VP\nV + Komplemente + (Adjunkte)*\n![[attachments/Pasted image 20230203151516.png|L|500]]\n- VP → VP PP (rekursive Adjunkte)  \n- VP → V (ohne Kompl. = intransitiv)  \n- VP → V NP (1 Kompl. = transitiv)  \n- VP → V NP NP (2 Kompl. = ditrans.)\n\n##### Phrasenschema ADJP\n(ADV) (PP)* (PRT) ADJ\n![[attachments/Pasted image 20230202170259.png|L|400]]\n- ADJP → ADJ  \n- ADJP → PRT ADJ  \n- ADJP → PP ADJ  \n- ADJP → PP PRT ADJ  \n- ADJP → PP PP ADJ\n\n (rekursive)\n- ADJP → PP ADJP  \n\n##### Phrasenschema ADVP\n(ADV) (PRT) ADV\n![[attachments/Pasted image 20230202170335.png|L|180]]\n- ADVP → ADV\n- ADVP → PRT ADV\n- ADVP → ADV PRT ADV\n\n##### Phrasenschema PP\n(ADJ/ADV/PRT) P NP\n![[attachments/Pasted image 20230202170401.png|L|200]]\n- PP → P NP\n- PP →ADJ P NP\n\n#### Penn-Treebank 和 TIGER/NEGRA Korpus 的标注\nPenn: 英语报纸语料库, 比较扁平的结构\n![[attachments/Pasted image 20230203160639.png|L|500]]\n\nTIGER: 重要的德语 Treebank\n![[attachments/Pasted image 20230203160704.png|L|500]]\n\n### X-Bar-Phrasenstrukturschema\nX-Bar: $\\bar{X}$(一开始), X'\n\n![[attachments/Pasted image 20230203154022.png|L|400]]\n\n##### phrasale Zwischenebene X'\n- 在 Phrase内部 和 Kopf层 之间引入中间层 X'\n![[attachments/Pasted image 20230203153515.png|L|400]]\n\n##### Komplement\n- = Ergänzung\n- obligatorische Erweiterung, valenzgeforderte Erweiterung\n- 组成 X'\n\n##### Adjunkt\n- = Angabe\n- nicht-obligatorische Erweiterung \n- 在 X' 层\n\n#### X-Bar Regeln\n\n##### X-Bar NP Regeln\n- NP → DET N'\n\n- N' → ADJP N'\n- N' → N' PP\n- N' → N NP\n- N' → N\n\n##### X-Bar VP Regeln\n- VP → V'\n\n- V' → V' PP\n- V' → V (intransitives Verb)\n- V' → V NP (transitives Verb)\n- V' → V NP NP (ditransitives Verb)\n\n#### Adäquatheit einer CFG als Syntaxmodell\nX-Bar 规则虽然限制了一部分 Übergenerierung, 但仍存在词态上的过度生成\n- 如 Kasus 的问题: der Mann sieht des Kindes\n- 如单复数\n\n解决方法\n- 再把有词态变化的词类细分(无疑会麻烦很多)\n    - SgN, PlN, SgDET, PlDET...\n- 通过 PCFG 选择\n    - 允许过度生成, 然后不概率上不可能的句子删除\n\n## Dependenzstruktur\n\n### Dependenzstruktur\n\n#### 定义\n\n##### unilaterale Abhängigkeit\n- 删了依赖方还保持语法正确\n- e.g. eine (sehr) schwierige Aufgabe\n- Rektion\n- 在 Konstituentenstruktur 里是 Komplement\n\n##### bilaterale Abhängigkeit\n- 互相依赖, 不分依赖方和被依赖方, 删了哪一方都会破坏语法正确\n- e.g. (Beantworte) den Brief/Beantworte (den Brief)\n- Modifikation\n- 在 Konstituentenstruktur 里是 Adjunkt/Attribut\n\n##### Dependenzrelation\n- Dependenzrelation \u003cY, X\u003e \n- Y abhängig von X\n- X kontrolliert/regiert Y, X ist Kopf/Regens von Y\n- X 指向 Y\n\n##### unmittelbaren und der mittelbaren Abhängigkeit(Dependenz)\n![[attachments/Pasted image 20230203212634.png|L|400]]\n\n##### Obligatorische, fakultative und optionale Dependenten\n\n###### obligatorische dependent\n- = Komplement\n- 完全不能删的部分\n\n###### fakultative dependent\n- e.g. Er schreibt (einen Brief)\n- 删掉其实不破坏语法正确, 但实际上是更改了语法结构\n\n###### optionaler dependent\n- = Adjunkt\n- 总是可以删掉而维持语法正确性\n\n#### Dependenzstruktur\n- Menge der durch die Relation der Dependenz/Kontrolle verbundenen lexikalischen Einheiten (Wörter; ggf. auch Stämme und Affixe)\n- 通常动词为根\n- Knoten: Wörter\n- Kanten: Dependenzrelationen\n- syntaktische Kategorien: girichtete Kante=DR\n- Kategorientyp: funktional/relational\n\n#### 分辨 Komplement 和 Adjunkt\n- [[#Eliminierungstest]]\n- [[#Adverbialsatz-Test]]\n- [[#geschehen-Test]]\n注意, 这些方法只是用来分辨 K/A 的, 和前面的 Konstituententest 可不一样\n\n##### Adverbialsatz-Test\n- 首先, 对时间指示不管用\n- 将 Konstituente 放在 Adverbialsatz\ne.g.\n![[attachments/Pasted image 20230203215544.png|L|500]]\n\n##### geschehen-Test\n- 将 Konstituente 放在一个有 geschehen 这个动词的句子里\n![[attachments/Pasted image 20230203215826.png|L|500]]\n\n### Modellierung mit formaler Grammatik\n![[attachments/NLTK#用 Dependcy Grammar 生成句子]]\n\n\n### Syntaktische Funktionen\n\n#### Grammatische Relation\n- = Satzgliedfunktion\n- zentrale syntaktische Funtionen im Satz\n- Hierarchie: Subjekt \u003e Direktes Objekt \u003e Indir. Objekt \u003e Adverbiale\n\n![[attachments/Pasted image 20230204134846.png|L|500]]\n![[attachments/Pasted image 20230204134947.png|L|500]]\n##### Prädikat\n- root\n\n##### nsubj/csubj\n- noun subject/clause subject\n\n##### obj/ocomp\n- (direct) object/Komplementsatz\n\n##### iobj\n- indirect object\n- ditransitive 动词的另一个宾语, 由**动词支配格**,德语中通常是 Dativ\n- 属于 Komplement\n\n##### obl\n- obliques object\n- 介词宾语(e.g. er glaubt an sich), 属于 Komplement, 由**介词支配格**\n- 介词状语(e.g. er glaubt daran, dass...), 属于 Adjunkt\n\n##### advmod/advcl\n- adverb modified/ adverb clause\n- 属于 Adjunkt\n\n##### case\n- PP 中的介词对宾格的关系\n\n##### mod\n- modifier\n- 表语, 冠词\n\n#### Universal Dependency Relation(UD)\nhttps://universaldependencies.org/u/dep/  \n以下没写的默认和 [[#Grammatische Relation]] 中一样\n\n在线分析器: https://corenlp.run/\n\n##### 总览\n![[attachments/Tagsets#总览]]\n\n##### flat\n多个单词的名词\nNew York\n1 new 0 ROOT\n2 York 1 flat\n\n##### nsubj\n\n##### expl\n![[attachments/Pasted image 20230204135155.png|L|200]]\n\n##### obj\n\n##### iobj\n\n##### obl\n- 介词宾语\nTIGER: op = Objekt, präpositional\n\n##### det\n- DET\n\n##### amod/nmod/advmod/nummod\n- adjectival modifier/modifier of nominal/adv/numerus\n- 形容词状语/名词状语\n\n##### appos\n- 分句关系\n\n##### ccomp, xcomp\n- xcomp: Infinitivkomplement, 从句没有主语\n- ccomp: 通常指向 obj dass从句 的 V\n\n##### acomp\n- adj comp\n- e.g. visiting relatives can **be** *tiresome* (head:be)\n\n##### prep, pcomp\n- 动词指向介词/动词指向介词短语的宾语\n- 通常用 obl(动词指向介词宾语)/case(宾语指向介词) 就不会有 prep, pcomp\n\n##### acl\n- admonimal cl\n\n#### TIGER\n`notebook/05-vorlesung.ipynb` 有很多 TIGER 和 Uiversal 的对比\n\n![[attachments/Pasted image 20230204145050.png|L|500]]\n![[attachments/Pasted image 20230204145026.png|L|500]]\n![[attachments/Pasted image 20230204145138.png|L|500]]\n![[attachments/Pasted image 20230204145535.png|L|500]]\n\n##### nk\n- noun kernel element\n- det 或者 PP中介词指向宾语\n\n##### sb\n- subject\n\n##### oa/da/ag\n- accusative object/dativ attribute/genitive attribute\n- oa 也作代替主语关系(*es* geht)\n\n##### mnr\n- postnominal modifier\n\n##### mo \n- modifier\n\n##### oc\n- = UD ccomp, xcomp\n- \n\n### Valenz, Dependenz\n(Valenz 好像是廷臣?)\nvalenz 还能有 dependenz\n\nDie **Valenz** bezieht sich auf die Verbindungsfähigkeit von relationalen Wörtern (Verben, Adjektiven, Substantiven), während die **Dependenz** Abhängigkeitsbeziehungen verschiedener Art zusammenfasst\n\n### MALT/CONLL-Format\n这个呢, 格式就是\n\n| No. | Word | Head | Relation |\n| --- | ---- | ---- | -------- |\n| 1   | der  | 2    | det      |\n| 2   | Mann | 3    | nsubj    |\n| 3   | gibt | 0    | ROOT     |\n| 4   | der  | 5    | det      |\n| 5   | Frau | 3    | nobj     |\n| 6   | das  | 7    | det      |\n| 7   | Buch | 3    | iobj     |\n\n![[attachments/Pasted image 20230204175700.png|L|200]]\n\n## Feature-based Grammar\n-\u003e Feature based Grammar\n\n### Sprachliche Ausdrucksmittel\n\n##### FCFG\n- 通过 Merkmalsstrukturen 对语法特征进行建模\n- 用 morphosyntaktische Constraintregeln 对特征结构进行 Unifikation\n\n##### Typen syntaktiscer Kodierung\n\n- A: Strukturelle Kodierung\n    - Wortstellung (8. [[#Wortstellung \u0026 komplexe Sätze]])\n- B: Morphologische Kodierung(本章)\n    - Kasus-Markierung\n    - Aggrement-Markierung(如动词词尾根据主语的变化)\n\n##### Typen der Sprachtypologie\n语言类型学, 与语法结构和其编码差异相关的语言比较. 其分类有:\n\n- **Isolierender Sprachbau** primär durch Wortstellung kodiert(e.g. Vietnamesisch)\n- **Analytischer Sprachbau** primär durch freie Morpheme = Funktionswörter(e.g. Deutsch)\n- **Synthetischer Sprachbau** primär durch freie gebundene Morpheme(e.g. Latein)\n\n其他分类\n- synthetischer/analytischer\n- Agglutinierender/Flektierender\n- dependent-marking/head-marking\n- akkusativ-/ergativ-/Aktiv-System\n- topic-/subject-prominent\n\n![[attachments/Pasted image 20230205153755.png|L|400]]\n\n##### Unifikation\n- 将两个 Feature-based 结构统一成一样的, 或者说, 检验两个结构能否统一, 能就返回统一了的结构\n- 符号是 ⊔\n- Zwei Merkmalsstrukturen unifizieren, wenn sie vereinbar sind.\n\n##### Koreferenz\nZwei Merkmale sind koreferent, wenn sie denselben Wert (bzw. bei komplexen Merkmalen dieselbe Merkmalsstruktur) teilen.\ne.g. `VP -\u003e V[OBJCASE=?y] NP[CASE=?y]`\n\n##### Unterspezifikation\n- In diesem Beispiel ist die zweite Merkmalsstruktur unterspezifiert, weil kein Merkmal-Wert-Paar für den Kasus angegeben wird:\n![[attachments/Pasted image 20230205210155.png|L|400]]\n- 类似向下兼容未指定的项\n\n##### Subsumption\n- Eine Merkmalsstruktur f1 *subsumiert* eine andere Merkmalsstruktur f2 genau dann, *wenn die in f1 enthaltene Information auch in f2 enthalten ist*.\n- 符号是 ⊑\n\n##### Typhierarchie\n![[attachments/Pasted image 20230209225732.png|L|400]]\n- 垂直符号是最底层的意思吧\n- unify 找共同上层: 3rd ⊔ plu = 3-plu\n- subsumes 低层-\u003e高层: 3rd ⊑ 3-sing, 3rd ⊑ (3rd ⊔ 3-sing)\n\n### Grammatische Merkmale\n\n#### Morphosyntaktische Constraints\n- Kasusrektion 支配格\n- Kongruenz 词尾变化\n    - Übereinstimmung von Wörtern oder Satzteilen hinsichtlich grammatischer Merkmale\n- [[#Subkategorisieung|Subkategorien]] vi/vt/vd\n\n#### Flextionskategorien\n- = grammatisches Merkmale\n- e.g. Kategorie Numerus: SG, PL\n\n- Affigierung: Suffixe, Präfixe, Infixe\n- Funkionswöter\n- Ablaut\n- Reduplikation \n\n##### Deklination\n- = nominale Flexion\n- Kasus: N, G, D, A\n- Genus: Maskulin/Feminin/Neutrum\n- Numerus: Singular/Plural\n- Person: 1/2/3\n- Definitheit: definit/indefinit\n\n##### Agreement\n- 名词（作为短语的头）与附属定语和形容词在属、数和大小写上的特征一致\n- Merkmaleskongruenz\n\n##### Kunjugation\nverbale Flexionskategorien des Deutschen\n- Person+Numerus-Kongruenz: 1sg, 2pl...\n- Tempus: Präs./Prät./Perf./Plsqperf./Futur1/Futur2\n- Modus: Indikativ/Imperativ/Konjunktiv\n- Genus verbi: Aktiv/Passiv\n\n\n#### Kasus und Agreement\n- 两个都是标记 syntaktische Funktion\n![[attachments/Pasted image 20230205170514.png|L|400]]\n\n### Merkmalstrukturen\n- = Attribut-Wert-Matrix (AVM)\n![[attachments/Pasted image 20230205171104.png|L|300]]\n\n![[attachments/Pasted image 20230205171224.png|L|400]]\n左: var1, Kategoriensymbol + MS\n右: var2, Kategorien 也作为 MS 的属性\n\n- 在 POS Tagging 里是 feature extraction(werden aus der Eingabe extrahiert)\n- 在 Formalen Grammatiken 里是 feature lexicon (werden im Vorhinein deklariert)\n\n##### Def. Merkmalstruktur\n![[attachments/Pasted image 20230209223516.png|L|400]]\n\n##### Def. Feat\nSei Feat eine endliche Menge von Merkmalen (engl. features).\n\ne.g. Feat = {GEN, CASE, NUM, AGR, PER, MOOD, CAT, TENSE}\n\n##### Merkmalsgraph\n![[attachments/Pasted image 20230205171737.png|L|300]]\n\n##### Lexiconeinträge\n![[attachments/Pasted image 20230205172756.png|L|400]]\n\n### Constraintregeln und Unifikation\n\n#### Constraintregel als Pfadgleichung\n仅仅把形如 NP → DET N 的路径规则替换成 Merkmal 版是不能限制过度生成的, 因此有 Constraintregel, e.g.\n```text\nNP → DET N  \n\u003cDET AGR\u003e=\u003cN AGR\u003e\n```\n\n或者用 变量描述的方式(nltk: ?x)\n![[attachments/Pasted image 20230205173144.png|L|400]]\n\n#### Constraintregel als Unifikationsanweisung\n- Constraitregel 还能作为 Unifikation 规则, 以确认 Vereinbarkeit\n \n![[attachments/Pasted image 20230205173627.png|L|400]]\n\n```text\nAblehnung (da: \u003cDET AGR GEN\u003e ≠ \u003cN AGR GEN\u003e):  \ndie Hund (\u003cDET AGR GEN\u003e = FEM, \u003cN AGR GEN\u003e = MASK)  \nder Katze (\u003cDET AGR GEN\u003e = MASK, \u003cN AGR GEN\u003e = FEM)  \nden Katze (\u003cDET AGR GEN\u003e = MASK, \u003cN AGR GEN\u003e = FEM)\n```\n\n### Subkategorisieung\n- 动词的分类\n- nach Valenztypen\n\n#### 动词的具体分类\n\n**intransitive Verben**\nSubjekt im Nominativ \n\n**transitive Verben**\nSubjekt im Nominativ + direktes Objekt\n\n**ditransitive Verben**\nSubjekt im Nominativ + direktes Objekt + inderekted Objekt\n\n**Verben mit fester Präposition**\nSubjekt im Nominativ + Präpositionalobjekt\n(e.g. Sie warten auf den Zug.)\n\n**Verben mit direktem Objekt und Präpositionalobjekt**\nSubjekt im Nominativ + Präpositionalobjekt + direktes Obj.\n(e.g. Sie stellt das Gepäch auf den Bahnsteig.)\n\n**Verben, die einen Nebensatz einleiten**\nSubj. im Nom. + Nebensatz\n(e.g. Er sagt, dass der Zug zehn Minuten Verspätung hat.)\n\n#### 看一下语法树例子\n![[attachments/Pasted image 20230206230916.png|L|400]]\n\n![[attachments/Pasted image 20230206230932.png|L|400]]\n\n#### 在 GPSG 中\n![[attachments/NLTK#GPSG]]\n\n#### 在 HPSG 中\n![[attachments/NLTK#HPSG]]\n\n### Invertierte Wortstellung(Auxiliare)\n\n#### Inversion\n- Entscheidungsfragesatz im Englisch\n- 名词短语主语和助动词的位置发生交换\n\n##### Inversion 实例\n```text\nS[+INV] -\u003e V[+AUX] NP VP[-AUX]\nVP[-AUX] -\u003e V[-AUX] NP\n```\n\n![[attachments/Pasted image 20230206232124.png|L|400]]\n\n**SQ(Penn-Treebank)**: inverted yes/no question, or main clause of a wh-question, following the wh-phrase in SBARQ\n![[attachments/Pasted image 20230206232331.png|L|400]]\n\n**SINV(Penn-Treebank)**: inverted declarative sentence, i.e. one in which the subject follows the tensed verb or modal.\n- e.g. Rarely do you see Kim.\n\n#### Inversion im Deutschen\n\n**Spezifiererregeln**\n```text\nVP[-INV] -\u003e VERBAR         (für Präsens)\nVP[+INV] -\u003e V[+AUX] VERBAL (für Perfekt)\n```\n\n**Komplementregeln**\n```text\nVERBAL -\u003e V[-PP] NP       (für Präsens)\nVERBAL -\u003e NP V[-AUX, +PP] (für Perfekt)\n```\n这里的 +PP 指的是 动词的Partizip Perfekt, +/-AUX 指 是否是助动词\n\n![[attachments/Pasted image 20230206232611.png|L|550]]\n\n### Gap-Feature\n- 用于 wh-question \n- S/NP = S without NP\n    - \"what do you like\"\n    - S -\u003e NP S/NP\n- 疑问代词(e.g. wen)用 PRON[+QUEST], 也有[+WH]\n- S[+MOVEMENT] 表示疑问句\n\ne.g.\n![[attachments/Pasted image 20230206234940.png|L|400]]\n\n![[attachments/Pasted image 20230206235103.png|L|400]]\n\n## Wortstellung \u0026 komplexe Sätze\n\n### Wortstellung\n\n#### Verbstellungstypen des Deutschen\n\n##### Verberstsatz(V1)\n- VSO\n- 疑问句: Glaubst du an den Weihnachtsmann?\n- 命令式 Imperative: Komm mit!\n\n##### Verbzweitsatz(V2)\n- SVO\n- 大部分陈述句: Ich glaube an den Weihnachtsmann.\n- 包括倒装的陈述句\n\n##### Verbendsatz(VE)\n- SOV\n- Nebensatz\n- e.g. ... weil ich an den Weihnachtsmann glaube.\n\n#### Stellungsfeldermodell\n- Vorfeld\n- linke Satzklammer\n    - V2: finites Verb\n    - VE: Konjunktion, Relativpronomen, Interrogativpronomen\n- Mittelfeld\n- rechte Satzklamme\n    - V2: infinites Verb, Verbzusaz oder leer\n    - VE: finites Verb\n- Nachfeld\n\n\n### Komplexe Sätze\n\n#### Koordinierte-/Subordinierte Sätze\n\n##### Koordinierte Sätze\n- Verkettung 同类相连: und, aber, denn\n- Satzreihe: Parataxe\n\n##### Subordinierte Sätze\n- Einbettung : weil, dass, ob\n- Satzgefüge: Hypotaxe\n\n#### Koordination Konstituenz\n- S -\u003e S CConj S, NP -\u003e NP CConj NP\n- 通过 Conjunktion 同类 Phrase 相连\n\n#### Subordination Konstituenz\n\n##### Subordination \n1) Komplementsatz\n    - 用 dass 引导 SBJ/OBJ 从句\n2) Adverbialsatz\n    - als der Weihnachtsmann kam, lachte er.\n3) Attributsatz\n    - ..., der rot ist, ...\n\n##### Objektsatz\nFür finite eingebettete Sätze verwenden wir das Lebel **SBAR**\n```text\nS -\u003e NP VP\nVP -\u003e V SBAR\nSBAR -\u003e Comp S\n```\n![[attachments/Pasted image 20230207203111.png|L|200]]\n\n##### Subjektsatz\n```text\nS -\u003e SBAR VP\nSBAR -\u003e Comp S\n```\n![[attachments/Pasted image 20230207203336.png|L|200]]\n\n##### Adverbialsatz\n```text\nS -\u003e SBAR VP NP\nS -\u003e NP VP SBAR\nSBAP -\u003e SConj S\n```\n![[attachments/Pasted image 20230207203527.png|L|200]]\n\n##### Relativsatz\n```text\nNP -\u003e NP SBAR\nSBAR -\u003e WP S\nS -\u003e VP\n```\n![[attachments/Pasted image 20230207203635.png|L|200]]\n\n#### Infinitivkonstruktionen Konstituenz\n\n##### Komplexe Sätze mit Infinitivkonstruktion\n1) Infinitivkonstruktion ist Komplement\n    - *Infinitiv-Objektsatz*: „Ich möchte an den Weihnachtsmann glauben.“  \n    - *Infinitiv-Subjektsatz*: „Zu kommen wäre richtig.\"\n2) Satz mit komplexer VP\n    - Das kann nicht gut sein.\n\n##### Infinitiv-Objektsatz\n```text\nS -\u003e NP VP\nVP -\u003e V (NP) S\nS -\u003e VP\nVP -\u003e TO VP\n```\n![[attachments/Pasted image 20230207204556.png|L|200]]\n\n##### Infinitiv-Subjektsatz\n```text\nS -\u003e S VP\nS -\u003e VP\nVP -\u003e TO VP\n```\n![[attachments/Pasted image 20230207205508.png|L|200]]\n\n##### Satz mit komplexer VP\n```text\nVP -\u003e Aux VP\nVP -\u003e ADJ V\n```\n![[attachments/Pasted image 20230207205646.png|L|200]]\n\n#### Dependenz extend\n![[attachments/Tagsets#总览]]\n\n- Deutsche Kopulaverben: sein, werden, scheinen\n \n#### Koordination Dependenz\n- cc: conj word\n![[attachments/Pasted image 20230207211540.png|L|400]]\n\n#### Subordination Dependenz\n- dass: mark\n\n##### Objektsatz\n- ccomp: 并列关系\n![[attachments/Pasted image 20230207211446.png|L|400]]\n\n##### Subjektsatz\n- csubj\n![[attachments/Pasted image 20230207211826.png|L|400]]\n\n##### Adverbialsatz\n- als: mark\n- advcl: adv clause\n![[attachments/Pasted image 20230207211932.png|L|400]]\n\n##### Relativesatz\n- acl:relcl, 指向关系从句的动词\n![[attachments/Pasted image 20230207212153.png|L|400]]\n\n#### Infinitivkonstruktionen Dependenz\n\n##### Infinitiv-Objektsatz\n- zu: mark\n![[attachments/Pasted image 20230207212532.png|L|400]]\n\n##### Infinitiv-Subjektsatz\n- sein: cop(Kopula)\n![[attachments/Pasted image 20230207212556.png|L|400]]\n\n##### Satz mit komplexer VP\n- sein: cop(Kopula)\n- aux\n![[attachments/Pasted image 20230207212659.png|L|400]]\n\n### UD vs. TIGER\n![[attachments/Pasted image 20230207211241.png|L|500]]\n\n\n### Komplexe formale\nK13\n\n#### center embeded\n- _My brother opened the window the maid the janitor uncle bill had hired had married had closed._\n- 上面这个句子是三重循环\n- Schema: N1(N2(N3 V3)V2)V1\n- 需要至少 contextfree 语法\n![[attachments/Pasted image 20230213130047.png|L|400]]\n\n#### cross-serial\n- N1 N2 V1 V2  \n- N1 N2 N3 V1 V2 V3\n\n#### Garden Path\n- 从左往右分析时会有临时歧义的\n- the old man the boat\n- _The complex houses married and single soldiers and their families._ (fragen13)\n## Parsers\n\n### Parsing Strategy\n\n#### Top-Down\n- [[#Recursive Descent Parsing|Recursive Descent]]\n- LL(Left to right Leftmost(derivation))\n- LL(k)\n- L(\\*)\n- [[#Earley Parsing|Earley]]\n\n#### Bottom-Up\n- Recursive Ascent\n- GLR(Generalized Left-to-right Rightmost(derivation))\n- [[#Shift-Reduce]]\n- CYK\n\n### Recursive Descent Parsing\n- 按着规则表从上往下深搜, 然后回溯(backtracking)\n- 2 Operations: \n    - predict: 可能走什么规则\n    - scan: 和输入对比\n- 能比较好的解决 Ambiguität 问题\n\n##### Recursive Descent Parsing 的问题\n- 遇到左循环的规则(e.g. VP -\u003e VP PP) 会陷入死循环\n- exponentieller Blow Up: 复杂度(最坏的情况)指数增长\n\n### Shift-Reduce\n- 每读一个 token 就往上套规则, 能往上组合就组合\n- 2 Operations:\n    - shift: 读下一个\n    - reduce: 试图根据 RHS 往回推规则\n- 比 Top-Down 高效\n- 会导致 Teilstrukturen, 就是 即使有正确解, 可能推不出或者只推出几个不相关的部分解\n- potentiell exponentielle Laufzeit(也是回溯)\n\n#### Übergangbarsiertes Shift-Reduce-Dependency Parsing\n- 在原版的基础上增加了两个操作 LEFTARC, RIGHTARC\n\n**LIFTARC**\n- 向左指, head 在右\n\n**RIGHTARC**\n- 向右指, head 在左\n- Dependent 必须是不能作为另一个关系的 head 时才能做 RIGHTARC\n\n**流程**\n- 被指的一方会移出 stack\n![[attachments/Pasted image 20230212213654.png|L|400]]\n- 最后 Buffer 和 Stack 剩下 ROOT 结束\n![[attachments/Pasted image 20230212213921.png|L|400]]\n- RIGHTARC 的限制: 下图如果取走 Ticket 就没法分析剩下的句子了\n![[attachments/Pasted image 20230212214055.png|L|400]]\n![[attachments/Pasted image 20230212214144.png|L|400]]\n\n##### Nicht-Projektive Struktur\n- [[#Übergangbarsiertes Shift-Reduce-Dependency Parsing]] 不好处理的一类结构, 会触发 RIGHTARC 限制的结构\n![[attachments/Pasted image 20230212214428.png|L|400]]\n\n### Earley Parsing\n- Chart Parsing\n- 3 Operations\n    - PREDICT\n    - SCAN\n    - COMPLETE\n\n#### Earley Algorithmus\n![[attachments/Pasted image 20230209220618.png|L|500]]\n![[attachments/Pasted image 20230209220808.png|L|500]]\n\n**Input**\n- Eingabesequenz s = s$_1$, ..., s$_n$,\n- Grammatik G = (T, N, P, S)\n    - Terminal, Nonterminal, Produktion rules, Start\n\n**Data structure**\n- Position\n- Q set of state\n- state:= (X → $\\alpha \\cdot \\beta$, i)\n    - 点是现在的位置\n\n**Operation**\n![[attachments/Pasted image 20230209212433.png|L|400]]\n- 主要看 RHS, 注意点的位置, 预测看点后, 补充看点前\n\n**Algorithm**\n![[attachments/Pasted image 20230209212502.png|L|400]]\n\n#### 示例\n\n**init**\n![[attachments/Pasted image 20230209212606.png|L|400]]\n\n**Q0 predict**\n- for g in G, for q in Q\n    - if g.RHS = q.LHS.l(最左符号): g 加入 Z\n- 循环以上直到 Q 不变化\n![[attachments/Pasted image 20230209213558.png|L|400]]\n\n**Q1 scan**\n- i++, 符合 token 的结果加入 Qi\n- 注意, 点的位置往后移了\n![[attachments/Pasted image 20230209213621.png|L|400]]\n\n**Q1 Completion**\n- 所有(能往下推出 (当前Q中规则的 LHS) 的) 规则 也加进去\n![[attachments/Pasted image 20230209213645.png|L|400]]\n\nq1 predict, q2 scan, q2 completion...\n\n#### Earley mit Merkmalen\n第一种可能性 \n- 像以前一样解析，并在最后尝试统一 \n- 不吸引人：可能的分析数量没有尽早限制 → 优化潜力\n- 相对昂贵\n第二种可能性 \n- 为每个Earley状态添加特征结构 \n- 完成操作统一两个状态的特征结构 预测操作仅在新状态没有被任何现有状态归入时添加 \n- 使用非破坏性的统一! (复制！)\n\n## PCFG\n\n### PCFG\n\n#### PCFG\n- 通过语料库建模的加权的 CFG, e.g. NP -\u003e DET N 0.7\n- 如果一个句子有多种解析(歧义), 那么每个歧义的可能性为所用到的所有规则的权重相乘, 取 n best\n\n![[attachments/Pasted image 20230212214751.png|L|400]]\n\n### Grammar Induction\n- 给定 Corpus, 从文本中自行分析语法规则和权重\n- $P(\\alpha \\rightarrow \\beta) = \\frac{count(\\alpha \\rightarrow \\beta)}{count(\\alpha)}$ \n\n#### Chomsky Normalform\n只包含一下三类规则:\n- A -\u003e $\\alpha$ (terminal)\n- A -\u003e B C (non-terminal)\n- S -\u003e $\\varepsilon$ \n\n#### 示例转换为 Chomsky Normalform\n1. 把 A -\u003e b C D e 转换成: \n    -  B -\u003e b, E -\u003e e\n    -  A -\u003e B C D E\n2. 再把 A -\u003e BCDE 转换成:\n    - A -\u003e B X1\n    - X1 -\u003e C X2\n    - X2 -\u003e D E\n\n#### F1 Metrics\n[[permanent/F1 Metrics]]\n\n### Annotation PCFG\n\n#### Unabhängigkeitsannahmen von PCFG\n在基础版的 PCFG 中默认有两个假设:\n- 假设 规则与 terminal 词无关\n- 假设 规则的权重与上级规则无关\n\n于是有两个衍生版本, 分别去除这两种(不该有的) 假设\n\n#### Lexikalische PCFG\n- Kopfannotation, 首先在每个关系会标注目前的 head\n![[attachments/Pasted image 20230212225436.png|L|500]]\n![[attachments/Pasted image 20230212225509.png|L|500]]\n\n#### History-based PCFG\n- Parent Annotation\n![[attachments/Pasted image 20230212225602.png|L|500]]\n![[attachments/Pasted image 20230212225616.png|L|500]]\n\n\n## Chunking\n\n### Chunking\n- 识别最重要的句法单位（NP、VP、PP）\n- 部分的、平面的成分结构分析\n- 通过串联语法：生成高层次的结构--用常规语法或统计模型（从IOB标签序列中学习）进行形式化建模。\n![[attachments/Pasted image 20230212232136.png|L|500]]\n\n##### Chunks\n- 指定要 chunking 的 Phrase 中的 **单一 token**\n- 通常短于 Phrase\n- Tag pattern 和正则类似(RegExp Chunk Parser)\n\n#### Chinking\n- Chink 是无法用 Chunk 定义的片段, 比如 两个不同类Phrase的组合\n- Chunking: `{}`,`NP: {\u003cNNP\u003e+}`; Chinking: `}{`, `}\u003cVBD|IN\u003e+{`\n- **Chinking-Regel:** Definition eines Musters einer POS-Folge, die nicht in Chunk enthalten ist\n\nChinking 可以做什么?\n![[attachments/Pasted image 20230213134707.png|L|400]]\n\n### IOB Format\n- begin\n- inside\n- outside\n\n首先要确认找什么 phrase, 然后就按字面意思地标\n\n![[attachments/Pasted image 20230212232413.png|L|500]]\n","lastmodified":"2023-06-16T20:06:13.2154505+02:00","tags":[]},"/project/vbh-Scientific-Writing":{"title":"vbh - Scientific Writing","content":"\n## Introduction\n- boh science and language competency\n- common structure of scientific method\n\t- questiono\n\t- hypothesis\n\t- experiments\n\t- data\n\t- result\n\t- conclusion(discussion)\n- ==Process==\n\t- preparation\n\t\t- literature search \u0026 manage\n\t\t- planning\n\t- writing\n\t\t- expression\n\t\t- content(of the research)\n\t\t- visuals\n\t\t- bibliography, citation\n\t- publishing\n\t\t- submission\n\t\t- oral presentaion\n\t\t- poster presentation\n\t\t- peer-reviewing\n- ==ects==\n\t**Receive a \"Schein\" (including ECTS) from the Ludwig-Maximilians-Universität München:** If you enroll in any university of Bavaria and you want to receive a \"Schein\", please submit **an essay of your own scientific work** at the end of the course to scientificwritingmunich@gmail.com. As mentioned on card 5, you should apply the gathered knowledge of each unit on your own project or scientific work (which can also be a Bachelor´s or Master´s thesis). At the end, students should **only submit the title, abstract \u0026 result sections** as essay and not the whole of the project or publication. The students can submit their parts **on or before 15.09.** for the summer semester and **14.03.** for the winter semester. Please submit your parts in english. Please also tell us your **institution and matriculation number** in this mail.\n\n\n\n## Literature Search\n- literature sources\n\t![[Pasted image 20221017153618.png]]\n\n- literature types\n\t- primary(original)\n\t- secondary(review articles)\n\t- tertiary(scientific information (for lay people))\n\t- grey(unpublished research results)\n- PICO\n\t- patient/population\n\t- ==intervention==\n\t- comparison\n\t- outcome\n\t- example![[Pasted image 20221017155217.png]]","lastmodified":"2023-06-16T20:11:07.6492948+02:00","tags":[]},"/templates/post":{"title":"{{title}}","content":"","lastmodified":"2023-06-16T20:09:44.5133144+02:00","tags":[]}}