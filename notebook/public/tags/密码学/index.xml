<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>密码学 on </title>
    <link>https://tongluoshao.space/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/</link>
    <description>Recent content in 密码学 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 16 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://tongluoshao.space/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Feistel 密码结构</title>
      <link>https://tongluoshao.space/permanent/Feistel-%E5%AF%86%E7%A0%81%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/Feistel-%E5%AF%86%E7%A0%81%E7%BB%93%E6%9E%84/</guid>
      <description>Feistel 密码结构，在密码学研究中，Feistel 密码结构是用于 分组密码 中的一种对称结构.
特点 将输入分成两个部分 n 轮迭代 通过 Permutation, Substitution 实现 高 diffusion 函数 f 不一定可逆 </description>
    </item>
    
    <item>
      <title>AES</title>
      <link>https://tongluoshao.space/permanent/AES/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/AES/</guid>
      <description>AES Advanced Encryption Standard 1997 年美国商务部公开招标的算法, Rijndael 中标 diffusion 也比较高 AES 算法 可变块长度 32*$N_b$ bits, 可变密钥长度 32*$N_k$ bits, $N_k$ 和 $N_b$ 4, 6, 8 轮数推导出: $N_r$ = max($N_b$, $N_k$) + 6 总体流程 !</description>
    </item>
    
    <item>
      <title>Cryptography</title>
      <link>https://tongluoshao.space/permanent/Cryptography/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/Cryptography/</guid>
      <description>密码系统 Cryptosystem $$ S = (M,K,C,e,d)$$
Message 明文 Key 密钥 Cipher 密文 encrypt function $e = M \times K \rightarrow C$ decrypt function $d = C \times K \rightarrow M$ 密码分类 [[permanent/对称密码|对称密码]] 与 [[permanent/非对称密码|非对称密码]] 区块密码 与 流密码 密码结构 [[permanent/Feistel 密码结构|Feistel 密码结构]]</description>
    </item>
    
    <item>
      <title>DES</title>
      <link>https://tongluoshao.space/permanent/DES/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/DES/</guid>
      <description>Data Encryption Standard 历史 1977NBS(前NIST), 第一个广泛使用的标准化加密方法 2002年被 AES 取代 98年 EFF 耗资 250k 美金, 搞了个 Deep Crack 针对, 直接给干碎了 特点 substitution, permutaion, modolo 2</description>
    </item>
    
    <item>
      <title>RSA</title>
      <link>https://tongluoshao.space/permanent/RSA/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/RSA/</guid>
      <description>RSA 1978, 命名是三个人名的开头字母 基于质因数分解 RSA 密钥生成 随机选择两个差不多大的质数 p, q n = pq, $\Phi(n) = (p-1)(q-1)$ 选择一个与 p, q 互质的 e, 1 &amp;lt; e &amp;lt; $\Phi(n)$, 常选 e = 65537 d = e$^{-1}$ mod $\Phi(n)$, 逆元, 就是 d 要达到这个效果 扩展欧几里得算法求逆元: d * m - k * Phi(n) = 1, k 正数 !</description>
    </item>
    
    <item>
      <title>加盐</title>
      <link>https://tongluoshao.space/permanent/%E5%8A%A0%E7%9B%90/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/%E5%8A%A0%E7%9B%90/</guid>
      <description>https://www.ucloud.cn/yun/88113.html
加盐 salting 密码学中的加盐是指, 通过在密码的任意固定位置插入(或替换)特定的字符串, 然后散列的结果和原始密码的散列结果不同.
加盐的方法 固定字符串加盐 就是将固定字符串加在密码的固定位置, 然后进行加密. 这种方法的缺点是, 一旦攻击者拿到源代码(都拿到数据库了还拿不到源码吗), 就能轻松构建一张新的[[permanent/彩虹表]]破解密码.
随机字符串加盐 盐的长度固定, 但是是随机的. 数据库在存储每位用户的密文密码的同时也存储每位用户的盐. 加密方式例如 md5(md5(passwd) + salt());</description>
    </item>
    
    <item>
      <title>对称密码</title>
      <link>https://tongluoshao.space/permanent/%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</guid>
      <description>对称密码 通信双方各持有一份密码本, 加密和解密密钥是相同的 DES, AES, IDEA, RC4, Blowfish, Serpent, Twofish 对称密码技术 Substitution Permutation One-Time-Pad 一次性密码本 对称密码种类 恺撒密码/ROT13/&amp;hellip; One-Time-Pad [[permanent/DES|DES]] [[permanent/AES|AES]] </description>
    </item>
    
    <item>
      <title>非对称密码</title>
      <link>https://tongluoshao.space/permanent/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tongluoshao.space/permanent/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81/</guid>
      <description>非对称密码 每个通信者持有 private key, public key 各一份 私钥不公开, 用于解密 公钥公开, 用于加密(用接受者的公钥加密) 加密发给 Bob: c = e(m, $k^{Bob}_e$) Bob 解密: m = d(c, $k^{Bob}_d$) 把加密解密反过来, 就能用作数字签名 非对称密码种类 [[permanent/RSA|RSA]] DSA, ElGamal </description>
    </item>
    
  </channel>
</rss>
